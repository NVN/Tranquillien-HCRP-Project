<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  


  

  <head>
    <title>
      /core_patches/trunk/need_test/vehicle_mangos_9558.patch – Prophet's Lair
    </title>
        <link rel="search" href="/search" />
        <link rel="help" href="/wiki/TracGuide" />
        <link rel="alternate" href="/browser/core_patches/trunk/need_test/vehicle_mangos_9558.patch?rev=654&amp;format=txt" type="text/plain" title="Plain Text" /><link rel="alternate" href="/export/654/core_patches/trunk/need_test/vehicle_mangos_9558.patch" type="text/x-diff; charset=iso-8859-15" title="Original Format" />
        <link rel="up" href="/browser/core_patches/trunk/need_test?rev=654" title="Parent directory" />
        <link rel="start" href="/wiki" />
        <link rel="stylesheet" href="/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/diff.css" type="text/css" /><link rel="stylesheet" href="/chrome/common/css/browser.css" type="text/css" />
        <link rel="shortcut icon" href="/chrome/common/trac.ico" type="image/x-icon" />
        <link rel="icon" href="/chrome/common/trac.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/search/opensearch" title="Search Prophet's Lair" />
    <script type="text/javascript" src="/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/chrome/common/js/trac.js"></script><script type="text/javascript" src="/chrome/common/js/search.js"></script><script type="text/javascript" src="/chrome/common/js/diff.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $(".trac-toggledeleted").show().click(function() {
                  $(this).siblings().find(".trac-deleted").toggle();
                  return false;
        }).click();
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        });
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://example.org/"><img src="/chrome/common/trac_banner.png" alt="" /></a>
      </div>
      <form id="search" action="/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first">logged in as bulo</li><li><a href="/logout">Logout</a></li><li><a href="/wiki/TracGuide">Help/Guide</a></li><li><a href="/about">About Trac</a></li><li class="last"><a href="/prefs">Preferences</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/wiki">Wiki</a></li><li><a href="/timeline">Timeline</a></li><li class="active"><a href="/browser">Browse Source</a></li><li><a href="/report">View Tickets</a></li><li><a href="/newticket">New Ticket</a></li><li class="last"><a href="/search">Search</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
              <li class="first"><a href="/changeset/654/core_patches/trunk/need_test/vehicle_mangos_9558.patch">Last Change</a></li><li><a href="/browser/core_patches/trunk/need_test/vehicle_mangos_9558.patch?annotate=blame&amp;rev=654" title="Annotate each line with the last changed revision (this can be time consuming...)">Annotate</a></li><li class="last"><a href="/log/core_patches/trunk/need_test/vehicle_mangos_9558.patch?rev=654">Revision Log</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
      <h1>
    <a class="pathentry first" title="Go to root directory" href="/browser?rev=654">root</a><span class="pathentry sep">/</span><a class="pathentry" title="View core_patches" href="/browser/core_patches?rev=654">core_patches</a><span class="pathentry sep">/</span><a class="pathentry" title="View trunk" href="/browser/core_patches/trunk?rev=654">trunk</a><span class="pathentry sep">/</span><a class="pathentry" title="View need_test" href="/browser/core_patches/trunk/need_test?rev=654">need_test</a><span class="pathentry sep">/</span><a class="pathentry" title="View vehicle_mangos_9558.patch" href="/browser/core_patches/trunk/need_test/vehicle_mangos_9558.patch?rev=654">vehicle_mangos_9558.patch</a>
    <span class="pathentry sep">@</span>
      <a class="pathentry" href="/changeset/654" title="View changeset 654">654</a>
    <br style="clear: both" />
  </h1>
      <div id="jumprev">
        <form action="" method="get">
          <div>
            <label for="rev" title="Hint: clear the field to view latest revision">
              View revision:</label>
            <input type="text" id="rev" name="rev" value="654" size="6" />
          </div>
        </form>
      </div>
      <table id="info" summary="Revision info">
        <tr>
          <th scope="col">
            Revision <a href="/changeset/654">654</a>, <span title="161640 bytes">157.9 KB</span>
            (checked in by bulo, <a class="timeline" href="/timeline?from=2010-03-09T17%3A40%3A03%2B0100&amp;precision=second" title="2010-03-09T17:40:03+0100 in Timeline">9 days</a> ago)
          </th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
vehicle system fixes<br />
</p>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
    <div class="diff">
  <ul class="entries">
      <li class="entry">
        <h2>
          <a>(a) /dev/null vs. (b) b/sql/vehicle/v01_vehicle_tables.sql</a>
        </h2>
        <pre>diff --git a/sql/vehicle/v01_vehicle_tables.sql b/sql/vehicle/v01_vehicle_tables.sql
new file mode 100644
index 0000000..fec256d</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File /dev/null">
                      a
                  </th>
                  <th title="File b/sql/vehicle/v01_vehicle_tables.sql">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="add">
                  <tr class="first">
                          <th> </th><th>1</th><td class="r"><ins>DROP TABLE IF EXISTS `vehicle_data`;</ins> </td>
                  </tr><tr>
                          <th> </th><th>2</th><td class="r"><ins>CREATE TABLE `vehicle_data` (</ins> </td>
                  </tr><tr>
                          <th> </th><th>3</th><td class="r"><ins>&nbsp; `entry` mediumint(5) unsigned NOT NULL,</ins> </td>
                  </tr><tr>
                          <th> </th><th>4</th><td class="r"><ins>&nbsp; `flags` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>5</th><td class="r"><ins>&nbsp; `Spell1` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>6</th><td class="r"><ins>&nbsp; `Spell2` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>7</th><td class="r"><ins>&nbsp; `Spell3` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>8</th><td class="r"><ins>&nbsp; `Spell4` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>9</th><td class="r"><ins>&nbsp; `Spell5` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>10</th><td class="r"><ins>&nbsp; `Spell6` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>11</th><td class="r"><ins>&nbsp; `Spell7` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>12</th><td class="r"><ins>&nbsp; `Spell8` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>13</th><td class="r"><ins>&nbsp; `Spell9` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>14</th><td class="r"><ins>&nbsp; `Spell10` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>15</th><td class="r"><ins>&nbsp; `req_aura` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>16</th><td class="r"><ins>&nbsp; PRIMARY KEY&nbsp; (`entry`)</ins> </td>
                  </tr><tr>
                          <th> </th><th>17</th><td class="r"><ins>) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='Vehicle System';</ins> </td>
                  </tr><tr>
                          <th> </th><th>18</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>19</th><td class="r"><ins>DROP TABLE IF EXISTS `vehicle_seat_data`;</ins> </td>
                  </tr><tr>
                          <th> </th><th>20</th><td class="r"><ins>CREATE TABLE `vehicle_seat_data` (</ins> </td>
                  </tr><tr>
                          <th> </th><th>21</th><td class="r"><ins>&nbsp; `seat` mediumint(5) unsigned NOT NULL,</ins> </td>
                  </tr><tr>
                          <th> </th><th>22</th><td class="r"><ins>&nbsp; `flags` mediumint(8) unsigned NOT NULL default '0',</ins> </td>
                  </tr><tr>
                          <th> </th><th>23</th><td class="r"><ins>&nbsp; PRIMARY KEY&nbsp; (`seat`)</ins> </td>
                  </tr><tr>
                          <th> </th><th>24</th><td class="r"><ins>) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='Vehicle Seat System';</ins> </td>
                  </tr><tr>
                          <th> </th><th>25</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>26</th><td class="r"><ins>ALTER TABLE creature_addon</ins> </td>
                  </tr><tr>
                          <th> </th><th>27</th><td class="r"><ins>&nbsp; ADD COLUMN vehicle_id smallint(5) unsigned NOT NULL default '0' AFTER moveflags,</ins> </td>
                  </tr><tr>
                          <th> </th><th>28</th><td class="r"><ins>&nbsp; ADD COLUMN passengers text AFTER vehicle_id;</ins> </td>
                  </tr><tr>
                          <th> </th><th>29</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>30</th><td class="r"><ins>ALTER TABLE creature_template_addon</ins> </td>
                  </tr><tr>
                          <th> </th><th>31</th><td class="r"><ins>&nbsp; ADD COLUMN vehicle_id smallint(5) unsigned NOT NULL default '0' AFTER moveflags,</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>32</th><td class="r"><ins>&nbsp; ADD COLUMN passengers text AFTER vehicle_id;</ins> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>(a) /dev/null vs. (b) b/sql/vehicle/v02_vehicle_data.sql</a>
        </h2>
        <pre>diff --git a/sql/vehicle/v02_vehicle_data.sql b/sql/vehicle/v02_vehicle_data.sql
new file mode 100644
index 0000000..d88f22c</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File /dev/null">
                      a
                  </th>
                  <th title="File b/sql/vehicle/v02_vehicle_data.sql">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="add">
                  <tr class="first">
                          <th> </th><th>1</th><td class="r"><ins>REPLACE INTO `vehicle_data` VALUES</ins> </td>
                  </tr><tr>
                          <th> </th><th>2</th><td class="r"><ins>(68, 24, 52435, 52576, 52588, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>3</th><td class="r"><ins>(106, 4, 50896, 0, 50652, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>4</th><td class="r"><ins>(116, 5, 51362, 51421, 0, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>5</th><td class="r"><ins>(117, 4, 50652, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>6</th><td class="r"><ins>(135, 12, 52362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>7</th><td class="r"><ins>(156, 24, 53114, 0, 53110, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>8</th><td class="r"><ins>(200, 30, 52362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>9</th><td class="r"><ins>(210, 166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),</ins> </td>
                  </tr><tr>
                          <th> </th><th>10</th><td class="r"><ins>(349, 24, 62544, 62575, 62960, 62552, 64077, 62863, 0, 0, 0, 0, 62853);</ins> </td>
                  </tr><tr>
                          <th> </th><th>11</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>12</th><td class="r"><ins>UPDATE creature_template SET maxhealth = 133525, minhealth = 133525, maxmana = 51360, minmana = 51360 WHERE entry = 28670;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13</th><td class="r"><ins>UPDATE creature_template SET maxhealth = 50000, minhealth = 50000 WHERE entry = 28094;</ins> </td>
                  </tr><tr>
                          <th> </th><th>14</th><td class="r"><ins>UPDATE creature_template SET maxhealth = 75000, minhealth = 75000 WHERE entry IN (28312, 32627);</ins> </td>
                  </tr><tr>
                          <th> </th><th>15</th><td class="r"><ins>UPDATE creature_template SET maxhealth = 50000, minhealth = 50000 WHERE entry IN (28319, 32629);</ins> </td>
                  </tr><tr>
                          <th> </th><th>16</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>17</th><td class="r"><ins>UPDATE creature_template SET minlevel = 80, maxlevel = 80 WHERE entry IN (28312, 32627, 28319, 32629, 28094, 28670);</ins> </td>
                  </tr><tr>
                          <th> </th><th>18</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>19</th><td class="r"><ins>UPDATE creature_template SET speed = 2, InhabitType = 1 WHERE entry IN (28312, 32627, 28319, 32629, 28094, 29929, 28782);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20</th><td class="r"><ins>UPDATE creature_template SET speed = 2.4, InhabitType = 3 WHERE entry IN (28670);</ins> </td>
                  </tr><tr>
                          <th> </th><th>21</th><td class="r"><ins>UPDATE creature_template SET mechanic_immune_mask = 652951551 WHERE entry IN (28670,28312,32627,28319,32629,28094,29929,28782);</ins> </td>
                  </tr><tr>
                          <th> </th><th>22</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>23</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (28670, 28312, 32629, 28319, 32627, 28094, 29929);</ins> </td>
                  </tr><tr>
                          <th> </th><th>24</th><td class="r"><ins>INSERT INTO npc_spellclick_spells VALUES (28670, 52196, 0, 0, 0, 0),(28312, 60968, 0, 0, 0, 1),(32627, 60968, 0, 0, 0, 1),</ins> </td>
                  </tr><tr>
                          <th> </th><th>25</th><td class="r"><ins>(28319, 60968, 0, 0, 0, 1),(32629, 60968, 0, 0, 0, 1),(28094, 60968, 0, 0, 0, 1),(29929, 58961, 0, 0, 0, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>26</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>27</th><td class="r"><ins>DELETE FROM creature_template_addon WHERE entry in (28670, 28312, 32629, 28319, 32627, 28094, 29929);</ins> </td>
                  </tr><tr>
                          <th> </th><th>28</th><td class="r"><ins>INSERT INTO creature_template_addon VALUES (28670, 0, 50331648, 1, 0, 1024, 156, NULL, '53112 0 53112 1'),</ins> </td>
                  </tr><tr>
                          <th> </th><th>29</th><td class="r"><ins>(28312, 0, 0, 0, 0, 0, 117, '28319 7', NULL),(32627, 0, 0, 0, 0, 0, 117, '32629 7', NULL),(28319, 0, 0, 0, 0, 0, 116, NULL, NULL),</ins> </td>
                  </tr><tr>
                          <th> </th><th>30</th><td class="r"><ins>(32629, 0, 0, 0, 0, 0, 116, NULL, NULL),(28094, 0, 0, 0, 0, 0, 106, NULL, NULL),(29929, 0, 0, 0, 0, 0, 210, NULL, NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>31</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>32</th><td class="r"><ins>DELETE FROM vehicle_seat_data WHERE seat in (1643, 1648, 1649, 1650, 1652, 1554, 1556, 1557, 1986, 1987, 2144, 2181, 2182);</ins> </td>
                  </tr><tr>
                          <th> </th><th>33</th><td class="r"><ins>INSERT INTO vehicle_seat_data VALUES (1643, 3),(1648, 3),(1649, 2),(1650, 2),(1652, 4),</ins> </td>
                  </tr><tr>
                          <th> </th><th>34</th><td class="r"><ins>(1554, 3),(1556, 6),(1557, 6),(1986, 3),(1987, 8),(2144, 1),(2181, 1),(2182, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>35</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>36</th><td class="r"><ins>/* Some quests</ins> </td>
                  </tr><tr>
                          <th> </th><th>37</th><td class="r"><ins>Argent tournament*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>38</th><td class="r"><ins>UPDATE creature_template SET speed = '1.5', unit_flags = 8 WHERE entry IN (33844, 33845);</ins> </td>
                  </tr><tr>
                          <th> </th><th>39</th><td class="r"><ins>DELETE FROM creature_addon WHERE guid IN (SELECT guid FROM creature WHERE id IN (33844, 33845));</ins> </td>
                  </tr><tr>
                          <th> </th><th>40</th><td class="r"><ins>DELETE FROM creature WHERE id IN (33844, 33845);</ins> </td>
                  </tr><tr>
                          <th> </th><th>41</th><td class="r"><ins>DELETE FROM vehicle_data WHERE entry = 349;</ins> </td>
                  </tr><tr>
                          <th> </th><th>42</th><td class="r"><ins>INSERT INTO `vehicle_data` VALUES (349, 24, 62544, 62575, 62960, 62552, 64077, 62863, 0, 0, 0, 0, 62853);</ins> </td>
                  </tr><tr>
                          <th> </th><th>43</th><td class="r"><ins>DELETE FROM vehicle_seat_data WHERE seat = 3129;</ins> </td>
                  </tr><tr>
                          <th> </th><th>44</th><td class="r"><ins>INSERT INTO `vehicle_seat_data` VALUES (3129, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>45</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (33842, 33843);</ins> </td>
                  </tr><tr>
                          <th> </th><th>46</th><td class="r"><ins>INSERT INTO `npc_spellclick_spells` VALUES (33842, 63791, 13829, 1, 0, 3),(33842, 63791, 13839, 1, 0, 3),</ins> </td>
                  </tr><tr>
                          <th> </th><th>47</th><td class="r"><ins>(33842, 63791, 13838, 1, 0, 3),(33843, 63792, 13828, 1, 0, 3),(33843, 63792, 13837, 1, 0, 3),(33843, 63792, 13835, 1, 0, 3);</ins> </td>
                  </tr><tr>
                          <th> </th><th>48</th><td class="r"><ins>DELETE FROM creature_template_addon WHERE entry IN (33844, 33845);</ins> </td>
                  </tr><tr>
                          <th> </th><th>49</th><td class="r"><ins>INSERT INTO creature_template_addon VALUES (33844, 0, 0, 2049, 0, 0, 349, '', ''),(33845, 0, 0, 2049, 0, 0, 349, '', '');</ins> </td>
                  </tr><tr>
                          <th> </th><th>50</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>51</th><td class="r"><ins>/*Quest Into the Realm of Shadows (12687)*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>52</th><td class="r"><ins>UPDATE creature_template SET faction_A = 2082, faction_H = 2082, unit_flags = 0 WHERE entry = 28782;</ins> </td>
                  </tr><tr>
                          <th> </th><th>53</th><td class="r"><ins>DELETE FROM creature_addon WHERE guid IN (SELECT guid FROM creature WHERE id = 28782);</ins> </td>
                  </tr><tr>
                          <th> </th><th>54</th><td class="r"><ins>DELETE FROM vehicle_data WHERE entry = 135;</ins> </td>
                  </tr><tr>
                          <th> </th><th>55</th><td class="r"><ins>INSERT INTO vehicle_data VALUES (135, 12, 52362, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>56</th><td class="r"><ins>DELETE FROM vehicle_seat_data WHERE seat = 1871;</ins> </td>
                  </tr><tr>
                          <th> </th><th>57</th><td class="r"><ins>INSERT INTO vehicle_seat_data VALUES (1871, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>58</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (28782);</ins> </td>
                  </tr><tr>
                          <th> </th><th>59</th><td class="r"><ins>INSERT INTO npc_spellclick_spells VALUES (28782, 52350, 12687, 1, 12687, 3);</ins> </td>
                  </tr><tr>
                          <th> </th><th>60</th><td class="r"><ins>DELETE FROM creature_template_addon WHERE entry IN (28782);</ins> </td>
                  </tr><tr>
                          <th> </th><th>61</th><td class="r"><ins>INSERT INTO creature_template_addon VALUES (28782, 0, 0, 1, 0, 0, 135, '', '');</ins> </td>
                  </tr><tr>
                          <th> </th><th>62</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>63</th><td class="r"><ins>/*Quest Grand Theft Palomino (12680)*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>64</th><td class="r"><ins>DELETE FROM creature_addon WHERE guid IN (SELECT guid FROM creature WHERE id IN (28605, 28606, 28607));</ins> </td>
                  </tr><tr>
                          <th> </th><th>65</th><td class="r"><ins>DELETE FROM spell_script_target WHERE entry = 52264;</ins> </td>
                  </tr><tr>
                          <th> </th><th>66</th><td class="r"><ins>INSERT INTO spell_script_target VALUES (52264, 1, 28653);</ins> </td>
                  </tr><tr>
                          <th> </th><th>67</th><td class="r"><ins>DELETE FROM vehicle_data WHERE entry = 123;</ins> </td>
                  </tr><tr>
                          <th> </th><th>68</th><td class="r"><ins>INSERT INTO vehicle_data VALUES (123, 12, 52264, 52268, 0, 0, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>69</th><td class="r"><ins>DELETE FROM vehicle_seat_data WHERE seat = 1782;</ins> </td>
                  </tr><tr>
                          <th> </th><th>70</th><td class="r"><ins>INSERT INTO vehicle_seat_data VALUES (1782, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>71</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (28605, 28606, 28607);</ins> </td>
                  </tr><tr>
                          <th> </th><th>72</th><td class="r"><ins>INSERT INTO npc_spellclick_spells VALUES (28605, 52263, 12680, 1, 12680, 3),(28606, 52263, 12680, 1, 12680, 3),(28607, 52263, 12680, 1, 12680, 3);</ins> </td>
                  </tr><tr>
                          <th> </th><th>73</th><td class="r"><ins>DELETE FROM creature_template_addon WHERE entry IN (28605, 28606, 28607);</ins> </td>
                  </tr><tr>
                          <th> </th><th>74</th><td class="r"><ins>INSERT INTO creature_template_addon VALUES (28605, 0, 0, 1, 0, 0, 123, '', ''),(28606, 0, 0, 1, 0, 0, 123, '', ''),(28607, 0, 0, 1, 0, 0, 123, '', '');</ins> </td>
                  </tr><tr>
                          <th> </th><th>75</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>76</th><td class="r"><ins>/*Quest Going Bearback*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>77</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (29598);</ins> </td>
                  </tr><tr>
                          <th> </th><th>78</th><td class="r"><ins>INSERT INTO npc_spellclick_spells VALUES (29598, 54908, 12851, 1, 12851, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>79</th><td class="r"><ins>DELETE FROM creature_template_addon WHERE entry = 29598;</ins> </td>
                  </tr><tr>
                          <th> </th><th>80</th><td class="r"><ins>INSERT INTO creature_template_addon VALUES (29598, 0, 0, 1, 0, 0, 308, '', '');</ins> </td>
                  </tr><tr>
                          <th> </th><th>81</th><td class="r"><ins>DELETE FROM vehicle_data WHERE entry = 308;</ins> </td>
                  </tr><tr>
                          <th> </th><th>82</th><td class="r"><ins>INSERT INTO `vehicle_data` VALUES (308, 24, 54897, 54907, 0, 0, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>83</th><td class="r"><ins>REPLACE INTO vehicle_seat_data VALUES (2699, 3);</ins> </td>
                  </tr><tr>
                          <th> </th><th>84</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>85</th><td class="r"><ins>/*Massacre At Light's Point*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>86</th><td class="r"><ins>UPDATE `creature_template` SET `unit_flags` = 772 WHERE `entry` IN (28833, 28887);</ins> </td>
                  </tr><tr>
                          <th> </th><th>87</th><td class="r"><ins>DELETE FROM creature_addon WHERE guid IN (SELECT guid FROM creature WHERE id IN (28887, 28833));</ins> </td>
                  </tr><tr>
                          <th> </th><th>88</th><td class="r"><ins>DELETE FROM vehicle_data WHERE entry = 68;</ins> </td>
                  </tr><tr>
                          <th> </th><th>89</th><td class="r"><ins>INSERT INTO `vehicle_data` VALUES (68, 24, 52435, 52576, 52588, 0, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>90</th><td class="r"><ins>DELETE FROM vehicle_seat_data WHERE seat = 1301;</ins> </td>
                  </tr><tr>
                          <th> </th><th>91</th><td class="r"><ins>INSERT INTO `vehicle_seat_data` VALUES (1301, 3);</ins> </td>
                  </tr><tr>
                          <th> </th><th>92</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (28833, 28887);</ins> </td>
                  </tr><tr>
                          <th> </th><th>93</th><td class="r"><ins>INSERT INTO `npc_spellclick_spells` VALUES (28833, 52447, 12701, 1, 12701, 1),(28887, 52447, 12701, 1, 12701, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>94</th><td class="r"><ins>DELETE FROM creature_template_addon WHERE entry IN (28887, 28833);</ins> </td>
                  </tr><tr>
                          <th> </th><th>95</th><td class="r"><ins>INSERT INTO creature_template_addon VALUES (28887, 0, 0, 2049, 0, 0, 68, '', ''),(28833, 0, 0, 2049, 0, 0, 68, '', '');</ins> </td>
                  </tr><tr>
                          <th> </th><th>96</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>97</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>98</th><td class="r"><ins>DELETE FROM npc_spellclick_spells WHERE npc_entry in (32633, 32640, 31857, 33062, 33109, 33060);</ins> </td>
                  </tr><tr>
                          <th> </th><th>99</th><td class="r"><ins>/*Traveler's Tundra Mammoth */</ins> </td>
                  </tr><tr>
                          <th> </th><th>100</th><td class="r"><ins>REPLACE INTO npc_spellclick_spells VALUES (32633, 52196, 0, 0, 0, 0),(32640, 52196, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>101</th><td class="r"><ins>REPLACE INTO creature_template_addon VALUES (32633, 0, 0, 0, 0, 0, 312, NULL, NULL),(32640, 0, 0, 0, 0, 0, 312, NULL, NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>102</th><td class="r"><ins>REPLACE INTO vehicle_data VALUES (312, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>103</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>104</th><td class="r"><ins>/* Grand Ice Mammoth */</ins> </td>
                  </tr><tr>
                          <th> </th><th>105</th><td class="r"><ins>REPLACE INTO npc_spellclick_spells VALUES (31857, 52196, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>106</th><td class="r"><ins>REPLACE INTO creature_template_addon VALUES (31857, 0, 0, 0, 0, 0, 312, NULL, NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>107</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>108</th><td class="r"><ins>/* Salvaged Chopper */</ins> </td>
                  </tr><tr>
                          <th> </th><th>109</th><td class="r"><ins>REPLACE INTO npc_spellclick_spells VALUES (33062, 52196, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>110</th><td class="r"><ins>REPLACE INTO creature_template_addon VALUES (33062, 0, 0, 0, 0, 0, 335, NULL, NULL); </ins> </td>
                  </tr><tr>
                          <th> </th><th>111</th><td class="r"><ins>REPLACE INTO vehicle_data VALUES (335, 12, 62974, 62286, 62299, 64660, 0, 0, 0, 0, 0, 0, 0); </ins> </td>
                  </tr><tr>
                          <th> </th><th>112</th><td class="r"><ins>REPLACE INTO vehicle_seat_data VALUES (3005, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>113</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>114</th><td class="r"><ins>/* Salvaged Demolisher */</ins> </td>
                  </tr><tr>
                          <th> </th><th>115</th><td class="r"><ins>REPLACE INTO npc_spellclick_spells VALUES (33109, 52196, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>116</th><td class="r"><ins>REPLACE INTO creature_template_addon VALUES (33109, 0, 0, 0, 0, 0, 338, NULL, NULL); </ins> </td>
                  </tr><tr>
                          <th> </th><th>117</th><td class="r"><ins>REPLACE INTO vehicle_data VALUES (338, 12, 62306, 62490, 62308, 62324, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>118</th><td class="r"><ins>REPLACE INTO vehicle_seat_data VALUES (3011, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>119</th><td class="r"><ins>&nbsp;</ins> </td>
                  </tr><tr>
                          <th> </th><th>120</th><td class="r"><ins>/* Salvaged Siege Engine */</ins> </td>
                  </tr><tr>
                          <th> </th><th>121</th><td class="r"><ins>REPLACE INTO npc_spellclick_spells VALUES (33060, 52196, 0, 0, 0, 0); </ins> </td>
                  </tr><tr>
                          <th> </th><th>122</th><td class="r"><ins>REPLACE INTO creature_template_addon VALUES (33060, 0, 0, 0, 0, 0, 336, NULL, NULL); </ins> </td>
                  </tr><tr>
                          <th> </th><th>123</th><td class="r"><ins>REPLACE INTO vehicle_data VALUES (336, 12, 62345, 62522, 62346, 0, 0, 0, 0, 0, 0, 0, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>124</th><td class="r"><ins>REPLACE INTO vehicle_seat_data VALUES (3006, 1);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>125</th><td class="r"><ins>UPDATE `creature` SET `spawntimesecs` = 600 WHERE `id` IN (33109, 33060, 33062);</ins> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/AggressorAI.cpp</a>
        </h2>
        <pre>diff --git a/src/game/AggressorAI.cpp b/src/game/AggressorAI.cpp
index 4ab9a7a..9509b1c 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/AggressorAI.cpp">
                      a
                  </th>
                  <th title="File b/src/game/AggressorAI.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>104</th><th>104</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; //i_tracker.Reset(TIME_INTERVAL_LOOK);</span> </td>
                  </tr><tr>
                          <th>105</th><th>105</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>106</th><th>106</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>107</th><th> </th><td class="l"><span>&nbsp; &nbsp; if<del>&nbsp;(!m_creature-&gt;isCharmed</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>107</th><td class="r"><span>&nbsp; &nbsp; if<ins>(!m_creature-&gt;isCharmed() &amp;&amp; !m_creature-&gt;GetVehicleGUID</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>108</th><th>108</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>109</th><th>109</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_creature-&gt;RemoveAllAuras();</span> </td>
                  </tr><tr>
                          <th>110</th><th>110</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/BattleGroundMgr.cpp</a>
        </h2>
        <pre>diff --git a/src/game/BattleGroundMgr.cpp b/src/game/BattleGroundMgr.cpp
index b1cd408..cf2870d 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/BattleGroundMgr.cpp">
                      a
                  </th>
                  <th title="File b/src/game/BattleGroundMgr.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>1379</th><th>1379</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint32)0x00000001;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // count of next fields</span> </td>
                  </tr><tr>
                          <th>1380</th><th>1380</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint32)((BattleGroundEYScore*)itr-&gt;second)-&gt;FlagCaptures;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// flag captures</span> </td>
                  </tr><tr>
                          <th>1381</th><th>1381</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1382</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_SA:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1383</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint32)0x00000002;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // count of next fields</ins> </td>
                  </tr><tr>
                          <th> </th><th>1384</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint32)((BattleGroundSAScore*)itr-&gt;second)-&gt;DemolishersDestroyed; // demolishers destroyed</ins> </td>
                  </tr><tr>
                          <th> </th><th>1385</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint32)((BattleGroundSAScore*)itr-&gt;second)-&gt;GatesDestroyed;&nbsp; &nbsp; &nbsp; &nbsp;// gates destroyed</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1386</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1382</th><th>1387</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_NA:</span> </td>
                  </tr><tr>
                          <th>1383</th><th>1388</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_BE:</span> </td>
                  </tr><tr>
                          <th>1384</th><th>1389</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_AA:</span> </td>
                  </tr><tr>
                          <th>1385</th><th>1390</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_RL:</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>1386</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_SA:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// wotlk</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1387</th><th>1391</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_DS:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// wotlk</span> </td>
                  </tr><tr>
                          <th>1388</th><th>1392</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_RV:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// wotlk</span> </td>
                  </tr><tr>
                          <th>1389</th><th>1393</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case BATTLEGROUND_IC:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// wotlk</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/BattleGroundSA.h</a>
        </h2>
        <pre>diff --git a/src/game/BattleGroundSA.h b/src/game/BattleGroundSA.h
index 31a3ffa..9324999 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/BattleGroundSA.h">
                      a
                  </th>
                  <th title="File b/src/game/BattleGroundSA.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>24</th><th>24</th><td class="l"><span>class BattleGroundSAScore : public BattleGroundScore</span> </td>
                  </tr><tr>
                          <th>25</th><th>25</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>26</th><th>26</th><td class="l"><span>&nbsp; &nbsp; public:</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>27</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; BattleGroundSAScore()<del></del> {};</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>27</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; BattleGroundSAScore()<ins>: DemolishersDestroyed(0), GatesDestroyed(0)</ins> {};</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>28</th><th>28</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; virtual ~BattleGroundSAScore() {};</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>29</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 DemolishersDestroyed;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>30</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GatesDestroyed;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>29</th><th>31</th><td class="l"><span>};</span> </td>
                  </tr><tr>
                          <th>30</th><th>32</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>31</th><th>33</th><td class="l"><span>class BattleGroundSA : public BattleGround</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Chat.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Chat.cpp b/src/game/Chat.cpp
index 5111aec..003f2a0 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Chat.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Chat.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>474</th><th>474</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; { "spell_scripts",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SEC_ADMINISTRATOR, true,&nbsp; &amp;ChatHandler::HandleReloadSpellScriptsCommand,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "", NULL },</span> </td>
                  </tr><tr>
                          <th>475</th><th>475</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; { "spell_target_position",&nbsp; &nbsp; &nbsp; &nbsp;SEC_ADMINISTRATOR, true,&nbsp; &amp;ChatHandler::HandleReloadSpellTargetPositionCommand,&nbsp; &nbsp; &nbsp;"", NULL },</span> </td>
                  </tr><tr>
                          <th>476</th><th>476</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; { "spell_threats",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SEC_ADMINISTRATOR, true,&nbsp; &amp;ChatHandler::HandleReloadSpellThreatsCommand,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; "", NULL },</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>477</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; { "vehicle_data",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SEC_ADMINISTRATOR, true,&nbsp; &amp;ChatHandler::HandleReloadVehicleDataCommand,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"", NULL },</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>478</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; { "vehicle_seat_data",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SEC_ADMINISTRATOR, true,&nbsp; &amp;ChatHandler::HandleReloadVehicleSeatDataCommand,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"", NULL },</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>477</th><th>479</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>478</th><th>480</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; { NULL,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 0,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;false, NULL,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"", NULL }</span> </td>
                  </tr><tr>
                          <th>479</th><th>481</th><td class="l"><span>&nbsp; &nbsp; };</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1815">…</a></th>
                  <th><a href="#L1817">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1815</th><th>1817</th><td class="l"><span>&nbsp; &nbsp; if(!m_session)</span> </td>
                  </tr><tr>
                          <th>1816</th><th>1818</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</span> </td>
                  </tr><tr>
                          <th>1817</th><th>1819</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1818</th><th> </th><td class="l"><span>&nbsp; &nbsp; return <del>m_session-&gt;GetPlayer()-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(</del>m_session-&gt;GetPlayer()-&gt;GetSelection());</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>1820</th><td class="r"><span>&nbsp; &nbsp; return <ins>ObjectAccessor::GetCreatureOrPetOrVehicle(*m_session-&gt;GetPlayer(),</ins>m_session-&gt;GetPlayer()-&gt;GetSelection());</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1819</th><th>1821</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>1820</th><th>1822</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1821</th><th>1823</th><td class="l"><span>char* ChatHandler::extractKeyFromLink(char* text, char const* linkType, char** something1)</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Chat.h</a>
        </h2>
        <pre>diff --git a/src/game/Chat.h b/src/game/Chat.h
index da0563e..e7ba487 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Chat.h">
                      a
                  </th>
                  <th title="File b/src/game/Chat.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>396</th><th>396</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleReloadSpellTargetPositionCommand(const char* args);</span> </td>
                  </tr><tr>
                          <th>397</th><th>397</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleReloadSpellThreatsCommand(const char* args);</span> </td>
                  </tr><tr>
                          <th>398</th><th>398</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleReloadSpellPetAurasCommand(const char* args);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>399</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleReloadVehicleDataCommand(const char* args);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>400</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleReloadVehicleSeatDataCommand(const char* args);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>399</th><th>401</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>400</th><th>402</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleResetAchievementsCommand(const char * args);</span> </td>
                  </tr><tr>
                          <th>401</th><th>403</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HandleResetAllCommand(const char * args);</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Creature.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Creature.cpp b/src/game/Creature.cpp
index 8520861..f789325 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Creature.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Creature.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>43</th><th>43</th><td class="l"><span>#include "GridNotifiers.h"</span> </td>
                  </tr><tr>
                          <th>44</th><th>44</th><td class="l"><span>#include "GridNotifiersImpl.h"</span> </td>
                  </tr><tr>
                          <th>45</th><th>45</th><td class="l"><span>#include "CellImpl.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>46</th><td class="r"><ins>#include "Vehicle.h"</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>46</th><th>47</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>47</th><th>48</th><td class="l"><span>// apply implementation of the singletons</span> </td>
                  </tr><tr>
                          <th>48</th><th>49</th><td class="l"><span>#include "Policies/SingletonImp.h"</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L266">…</a></th>
                  <th><a href="#L267">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>266</th><th>267</th><td class="l"><span>&nbsp; &nbsp; SetSpeedRate(MOVE_WALK, cinfo-&gt;speed);</span> </td>
                  </tr><tr>
                          <th>267</th><th>268</th><td class="l"><span>&nbsp; &nbsp; SetSpeedRate(MOVE_RUN,&nbsp; cinfo-&gt;speed);</span> </td>
                  </tr><tr>
                          <th>268</th><th>269</th><td class="l"><span>&nbsp; &nbsp; SetSpeedRate(MOVE_SWIM, cinfo-&gt;speed);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>270</th><td class="r"><ins>&nbsp; &nbsp; SetSpeedRate(MOVE_FLIGHT, cinfo-&gt;speed);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>269</th><th>271</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>270</th><th>272</th><td class="l"><span>&nbsp; &nbsp; SetFloatValue(OBJECT_FIELD_SCALE_X, cinfo-&gt;scale);</span> </td>
                  </tr><tr>
                          <th>271</th><th>273</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1284">…</a></th>
                  <th><a href="#L1286">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1284</th><th>1286</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>1285</th><th>1287</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1286</th><th>1288</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Unit::setDeathState(CORPSE);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1289</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(isVehicle())</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1290</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Vehicle*)this)-&gt;Die();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1287</th><th>1291</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>1288</th><th>1292</th><td class="l"><span>&nbsp; &nbsp; if (s == JUST_ALIVED)</span> </td>
                  </tr><tr>
                          <th>1289</th><th>1293</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1387">…</a></th>
                  <th><a href="#L1391">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1387</th><th>1391</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return true;</span> </td>
                  </tr><tr>
                          <th>1388</th><th>1392</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>1389</th><th>1393</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1394</th><td class="r"><ins>&nbsp; &nbsp; // Heal immunity</ins> </td>
                  </tr><tr>
                          <th> </th><th>1395</th><td class="r"><ins>&nbsp; &nbsp; if (isVehicle() &amp;&amp; !(((Vehicle*)this)-&gt;GetVehicleFlags() &amp; VF_CAN_BE_HEALED))</ins> </td>
                  </tr><tr>
                          <th> </th><th>1396</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1397</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; switch(spellInfo-&gt;Effect[index])</ins> </td>
                  </tr><tr>
                          <th> </th><th>1398</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1399</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_EFFECT_APPLY_AURA:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1400</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switch(spellInfo-&gt;EffectApplyAuraName[index])</ins> </td>
                  </tr><tr>
                          <th> </th><th>1401</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1402</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_AURA_PERIODIC_HEAL:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1403</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_AURA_OBS_MOD_HEALTH:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1404</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_AURA_PERIODIC_HEALTH_FUNNEL:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1405</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_AURA_MOD_REGEN:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1406</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return true;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1407</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default: break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1408</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1409</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1410</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_EFFECT_HEAL:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1411</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_EFFECT_HEAL_MAX_HEALTH:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1412</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // NOTE : this too?</ins> </td>
                  </tr><tr>
                          <th> </th><th>1413</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_EFFECT_HEAL_MECHANICAL:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1414</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SPELL_EFFECT_HEAL_PCT:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1415</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return true;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1416</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default : break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1417</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1418</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1419</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1390</th><th>1420</th><td class="l"><span>&nbsp; &nbsp; return Unit::IsImmunedToSpellEffect(spellInfo, index);</span> </td>
                  </tr><tr>
                          <th>1391</th><th>1421</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>1392</th><th>1422</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1855">…</a></th>
                  <th><a href="#L1885">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1855</th><th>1885</th><td class="l"><span>&nbsp; &nbsp; return !i_motionMaster.empty() &amp;&amp; i_motionMaster.GetCurrentMovementGeneratorType() == HOME_MOTION_TYPE;</span> </td>
                  </tr><tr>
                          <th>1856</th><th>1886</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>1857</th><th>1887</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1888</th><td class="r"><ins>float Creature::GetBaseSpeed() const</ins> </td>
                  </tr><tr>
                          <th> </th><th>1889</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>1890</th><td class="r"><ins>&nbsp; &nbsp; if( isPet() )</ins> </td>
                  </tr><tr>
                          <th> </th><th>1891</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1892</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; switch( ((Pet*)this)-&gt;getPetType() )</ins> </td>
                  </tr><tr>
                          <th> </th><th>1893</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1894</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SUMMON_PET:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1895</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case HUNTER_PET:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1896</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1897</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //fixed speed fur hunter (and summon!?) pets</ins> </td>
                  </tr><tr>
                          <th> </th><th>1898</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return 1.15f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1899</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1900</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case GUARDIAN_PET:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1901</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case MINI_PET:</ins> </td>
                  </tr><tr>
                          <th> </th><th>1902</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1903</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //speed of CreatureInfo for guardian- and minipets</ins> </td>
                  </tr><tr>
                          <th> </th><th>1904</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1905</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1906</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1907</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1908</th><td class="r"><ins>&nbsp; &nbsp; return m_creatureInfo-&gt;speed;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1909</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1910</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1858</th><th>1911</th><td class="l"><span>bool Creature::HasSpell(uint32 spellID) const</span> </td>
                  </tr><tr>
                          <th>1859</th><th>1912</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>1860</th><th>1913</th><td class="l"><span>&nbsp; &nbsp; uint8 i;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Creature.h</a>
        </h2>
        <pre>diff --git a/src/game/Creature.h b/src/game/Creature.h
index dfbcb77..9bb7940 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Creature.h">
                      a
                  </th>
                  <th title="File b/src/game/Creature.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>210</th><th>210</th><td class="l"><span>&nbsp; &nbsp; SpellEffectIndex effect_idx;</span> </td>
                  </tr><tr>
                          <th>211</th><th>211</th><td class="l"><span>};</span> </td>
                  </tr><tr>
                          <th>212</th><th>212</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>213</th><td class="r"><ins>struct CreatureDataAddonPassengers</ins> </td>
                  </tr><tr>
                          <th> </th><th>214</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>215</th><td class="r"><ins>&nbsp; &nbsp; CreatureDataAddonPassengers() : entry(0), guid(0), seat_idx(-1) {}</ins> </td>
                  </tr><tr>
                          <th> </th><th>216</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>217</th><td class="r"><ins>&nbsp; &nbsp; uint32 entry;</ins> </td>
                  </tr><tr>
                          <th> </th><th>218</th><td class="r"><ins>&nbsp; &nbsp; uint32 guid;</ins> </td>
                  </tr><tr>
                          <th> </th><th>219</th><td class="r"><ins>&nbsp; &nbsp; int8 seat_idx;</ins> </td>
                  </tr><tr>
                          <th> </th><th>220</th><td class="r"><ins>};</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>221</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>213</th><th>222</th><td class="l"><span>// from `creature_addon` table</span> </td>
                  </tr><tr>
                          <th>214</th><th>223</th><td class="l"><span>struct CreatureDataAddon</span> </td>
                  </tr><tr>
                          <th>215</th><th>224</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L218">…</a></th>
                  <th><a href="#L227">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>218</th><th>227</th><td class="l"><span>&nbsp; &nbsp; uint32 bytes1;</span> </td>
                  </tr><tr>
                          <th>219</th><th>228</th><td class="l"><span>&nbsp; &nbsp; uint32 bytes2;</span> </td>
                  </tr><tr>
                          <th>220</th><th>229</th><td class="l"><span>&nbsp; &nbsp; uint32 emote;</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>221</th><th> </th><td class="l"><span>&nbsp; &nbsp; uint32 splineFlags;</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>230</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 splineFlags;</span> </td>
                      </tr><tr>
                        <th> </th><th>231</th><td class="r"><span>&nbsp; &nbsp; uint32 vehicle_id;</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>232</th><td class="r"><span>&nbsp; &nbsp; CreatureDataAddonPassengers const* passengers;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // loaded as char* "entry1 seatid1 entry2 seatid2 ... "&nbsp; </span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>222</th><th>233</th><td class="l"><span>&nbsp; &nbsp; CreatureDataAddonAura const* auras;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// loaded as char* "spell1 eff1 spell2 eff2 ... "</span> </td>
                  </tr><tr>
                          <th>223</th><th>234</th><td class="l"><span>};</span> </td>
                  </tr><tr>
                          <th>224</th><th>235</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L395">…</a></th>
                  <th><a href="#L406">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>395</th><th>406</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void GetRespawnCoord(float &amp;x, float &amp;y, float &amp;z, float* ori = NULL, float* dist =NULL) const;</span> </td>
                  </tr><tr>
                          <th>396</th><th>407</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetEquipmentId() const { return m_equipmentId; }</span> </td>
                  </tr><tr>
                          <th>397</th><th>408</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>409</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bool CreateVehicleKit(uint32 id);</ins> </td>
                  </tr><tr>
                          <th> </th><th>410</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle *GetVehicleKit()const { return m_vehicleKit; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>411</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>398</th><th>412</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; CreatureSubtype GetSubtype() const { return m_subtype; }</span> </td>
                  </tr><tr>
                          <th>399</th><th>413</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool isPet() const { return m_subtype == CREATURE_SUBTYPE_PET; }</span> </td>
                  </tr><tr>
                          <th>400</th><th>414</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool isVehicle() const { return m_subtype == CREATURE_SUBTYPE_VEHICLE; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L558">…</a></th>
                  <th><a href="#L572">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>558</th><th>572</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>559</th><th>573</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; MovementGeneratorType GetDefaultMovementType() const { return m_defaultMovementType; }</span> </td>
                  </tr><tr>
                          <th>560</th><th>574</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetDefaultMovementType(MovementGeneratorType mgt) { m_defaultMovementType = mgt; }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>575</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; float GetBaseSpeed() const;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>561</th><th>576</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>562</th><th>577</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // for use only in LoadHelper, Map::Add Map::CreatureCellRelocation</span> </td>
                  </tr><tr>
                          <th>563</th><th>578</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Cell const&amp; GetCurrentCell() const { return m_currentCell; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L664">…</a></th>
                  <th><a href="#L679">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>664</th><th>679</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; float CombatStartX;</span> </td>
                  </tr><tr>
                          <th>665</th><th>680</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; float CombatStartY;</span> </td>
                  </tr><tr>
                          <th>666</th><th>681</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; float CombatStartZ;</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>667</th><th> </th><td class="l"><span></span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>682</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle* m_vehicleKit;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>668</th><th>683</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; float m_summonXpoint;</span> </td>
                  </tr><tr>
                          <th>669</th><th>684</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; float m_summonYpoint;</span> </td>
                  </tr><tr>
                          <th>670</th><th>685</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; float m_summonZpoint;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/CreatureAI.cpp</a>
        </h2>
        <pre>diff --git a/src/game/CreatureAI.cpp b/src/game/CreatureAI.cpp
index b650b65..944442b 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/CreatureAI.cpp">
                      a
                  </th>
                  <th title="File b/src/game/CreatureAI.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>26</th><th>26</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>27</th><th>27</th><td class="l"><span>void CreatureAI::AttackedBy( Unit* attacker )</span> </td>
                  </tr><tr>
                          <th>28</th><th>28</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>29</th><td class="r"><ins>&nbsp; &nbsp; // vehicle dont have threat list, so this is unnecessary, because it calls move chase</ins> </td>
                  </tr><tr>
                          <th> </th><th>30</th><td class="r"><ins>&nbsp; &nbsp; if(m_creature-&gt;isVehicle())</ins> </td>
                  </tr><tr>
                          <th> </th><th>31</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>32</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>29</th><th>33</th><td class="l"><span>&nbsp; &nbsp; if(!m_creature-&gt;getVictim())</span> </td>
                  </tr><tr>
                          <th>30</th><th>34</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; AttackStart(attacker);</span> </td>
                  </tr><tr>
                          <th>31</th><th>35</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/CreatureEventAI.cpp</a>
        </h2>
        <pre>diff --git a/src/game/CreatureEventAI.cpp b/src/game/CreatureEventAI.cpp
index d036e99..55798c6 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/CreatureEventAI.cpp">
                      a
                  </th>
                  <th title="File b/src/game/CreatureEventAI.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>851</th><th>851</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>852</th><th>852</th><td class="l"><span>void CreatureEventAI::EnterEvadeMode()</span> </td>
                  </tr><tr>
                          <th>853</th><th>853</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>854</th><td class="r"><ins>&nbsp; &nbsp; m_creature-&gt;ExitVehicle();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>854</th><th>855</th><td class="l"><span>&nbsp; &nbsp; m_creature-&gt;RemoveAllAuras();</span> </td>
                  </tr><tr>
                          <th>855</th><th>856</th><td class="l"><span>&nbsp; &nbsp; m_creature-&gt;DeleteThreatList();</span> </td>
                  </tr><tr>
                          <th>856</th><th>857</th><td class="l"><span>&nbsp; &nbsp; m_creature-&gt;CombatStop(true);</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/DBCStructure.h</a>
        </h2>
        <pre>diff --git a/src/game/DBCStructure.h b/src/game/DBCStructure.h
index 3df6e72..2e74b7a 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/DBCStructure.h">
                      a
                  </th>
                  <th title="File b/src/game/DBCStructure.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>1690</th><th>1690</th><td class="l"><span>&nbsp; &nbsp; uint32&nbsp; m_uiLocomotionType;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 34</span> </td>
                  </tr><tr>
                          <th>1691</th><th>1691</th><td class="l"><span>&nbsp; &nbsp; float&nbsp; &nbsp;m_msslTrgtImpactTexRadius;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 35</span> </td>
                  </tr><tr>
                          <th>1692</th><th>1692</th><td class="l"><span>&nbsp; &nbsp; uint32&nbsp; m_uiSeatIndicatorType;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 36</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1693</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del></del>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 37, new in 3.1</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>1693</th><td class="r"><span>&nbsp; &nbsp; <ins>uint32&nbsp; m_powerType;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 37, new in 3.1</ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 37, new in 3.1</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1694</th><th>1694</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 38, new in 3.1</span> </td>
                  </tr><tr>
                          <th>1695</th><th>1695</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 39, new in 3.1</span> </td>
                  </tr><tr>
                          <th>1696</th><th>1696</th><td class="l"><span>};</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/DBCfmt.h</a>
        </h2>
        <pre>diff --git a/src/game/DBCfmt.h b/src/game/DBCfmt.h
index 4743476..a7d6c3f 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/DBCfmt.h">
                      a
                  </th>
                  <th title="File b/src/game/DBCfmt.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>103</th><th>103</th><td class="l"><span>const char TaxiPathEntryfmt[]="niii";</span> </td>
                  </tr><tr>
                          <th>104</th><th>104</th><td class="l"><span>const char TaxiPathNodeEntryfmt[]="diiifffiixx";</span> </td>
                  </tr><tr>
                          <th>105</th><th>105</th><td class="l"><span>const char TotemCategoryEntryfmt[]="nxxxxxxxxxxxxxxxxxii";</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>106</th><th> </th><td class="l"><span>const char VehicleEntryfmt[]="niffffiiiiiiiifffffffffffffffssssfifi<del>x</del>xx";</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>106</th><td class="r"><span>const char VehicleEntryfmt[]="niffffiiiiiiiifffffffffffffffssssfifi<ins>i</ins>xx";</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>107</th><th>107</th><td class="l"><span>const char VehicleSeatEntryfmt[]="niiffffffffffiiiiiifffffffiiifffiiiiiiiffiiiiixxxxxxxxxxxx";</span> </td>
                  </tr><tr>
                          <th>108</th><th>108</th><td class="l"><span>const char WorldMapAreaEntryfmt[]="xinxffffixx";</span> </td>
                  </tr><tr>
                          <th>109</th><th>109</th><td class="l"><span>const char WorldMapOverlayEntryfmt[]="nxiiiixxxxxxxxxxx";</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/GameObject.cpp</a>
        </h2>
        <pre>diff --git a/src/game/GameObject.cpp b/src/game/GameObject.cpp
index e146a0a..7df9bbe 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/GameObject.cpp">
                      a
                  </th>
                  <th title="File b/src/game/GameObject.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>436</th><th>436</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!m_respawnDelayTime)</span> </td>
                  </tr><tr>
                          <th>437</th><th>437</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>438</th><th>438</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>439</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!m_spawnedByDefault)</span> </td>
                      </tr><tr>
                        <th>440</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>441</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_respawnTime = 0;</span> </td>
                      </tr><tr>
                        <th>442</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th>443</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>439</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_respawnTime = m_spawnedByDefault ? time(NULL) + m_respawnDelayTime : 0;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>444</th><th>440</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>445</th><th>441</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // since pool system can fail to roll unspawned object, this one can remain spawned, so must set respawn nevertheless</span> </td>
                  </tr><tr>
                          <th>446</th><th>442</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_respawnTime = time(NULL) + m_respawnDelayTime;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1536">…</a></th>
                  <th><a href="#L1532">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1536</th><th>1532</th><td class="l"><span>&nbsp; &nbsp; return tester_faction-&gt;IsFriendlyTo(*target_faction);</span> </td>
                  </tr><tr>
                          <th>1537</th><th>1533</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>1538</th><th>1534</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1535</th><td class="r"><ins>void GameObject::DealSiegeDamage(uint32 damage)</ins> </td>
                  </tr><tr>
                          <th> </th><th>1536</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>1537</th><td class="r"><ins>&nbsp; &nbsp; m_actualHealth -= damage;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1538</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1539</th><td class="r"><ins>&nbsp; &nbsp; // TODO : there are a lot of thinghts to do here</ins> </td>
                  </tr><tr>
                          <th> </th><th>1540</th><td class="r"><ins>&nbsp; &nbsp; if(m_actualHealth &lt; 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>1541</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1542</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_actualHealth = GetGOInfo()-&gt;destructibleBuilding.intactNumHits;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1543</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetLootState(GO_JUST_DEACTIVATED);</ins> </td>
                  </tr><tr>
                          <th> </th><th>1544</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1545</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1546</th><td class="r"><ins><em>&nbsp;No newline at end of file</em></ins> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/GameObject.h</a>
        </h2>
        <pre>diff --git a/src/game/GameObject.h b/src/game/GameObject.h
index 9cf06b3..8d51222 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/GameObject.h">
                      a
                  </th>
                  <th title="File b/src/game/GameObject.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>691</th><th>691</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>692</th><th>692</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool isActiveObject() const { return false; }</span> </td>
                  </tr><tr>
                          <th>693</th><th>693</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint64 GetRotation() const { return m_rotation; }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>694</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void DealSiegeDamage(uint32 damage);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>694</th><th>695</th><td class="l"><span>&nbsp; &nbsp; protected:</span> </td>
                  </tr><tr>
                          <th>695</th><th>696</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32&nbsp; &nbsp; &nbsp; m_spellId;</span> </td>
                  </tr><tr>
                          <th>696</th><th>697</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; time_t&nbsp; &nbsp; &nbsp; m_respawnTime;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // (secs) time of next respawn (or despawn if GO have owner()),</span> </td>
                  </tr><tr>
                          <th>697</th><th>698</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32&nbsp; &nbsp; &nbsp; m_respawnDelayTime;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// (secs) if 0 then current GO state no dependent from timer</span> </td>
                  </tr><tr>
                          <th>698</th><th>699</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; LootState&nbsp; &nbsp;m_lootState;</span> </td>
                  </tr><tr>
                          <th>699</th><th>700</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool&nbsp; &nbsp; &nbsp; &nbsp; m_spawnedByDefault;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>701</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; int32&nbsp; &nbsp; &nbsp; &nbsp;m_actualHealth;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// current health state</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>700</th><th>702</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; time_t&nbsp; &nbsp; &nbsp; m_cooldownTime;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// used as internal reaction delay time store (not state change reaction).</span> </td>
                  </tr><tr>
                          <th>701</th><th>703</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // For traps this: spell casting cooldown, for doors/buttons: reset time.</span> </td>
                  </tr><tr>
                          <th>702</th><th>704</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; std::list&lt;uint32&gt; m_SkillupList;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/GridNotifiers.cpp</a>
        </h2>
        <pre>diff --git a/src/game/GridNotifiers.cpp b/src/game/GridNotifiers.cpp
index e654cc7..f3bde20 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/GridNotifiers.cpp">
                      a
                  </th>
                  <th title="File b/src/game/GridNotifiers.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>141</th><th>141</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>142</th><th>142</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // target aura duration for caster show only if target exist at caster client</span> </td>
                  </tr><tr>
                          <th>143</th><th>143</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((*vItr)!=&amp;i_player &amp;&amp; (*vItr)-&gt;isType(TYPEMASK_UNIT))</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>144</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>144</th><th>145</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i_player.SendAurasForTarget((Unit*)(*vItr));</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>146</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i_player.BuildVehicleInfo((Unit*)(*vItr));</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>147</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>145</th><th>148</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>146</th><th>149</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // non finished movements show to player</span> </td>
                  </tr><tr>
                          <th>147</th><th>150</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((*vItr)-&gt;GetTypeId()==TYPEID_UNIT &amp;&amp; ((Creature*)(*vItr))-&gt;isAlive())</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Group.h</a>
        </h2>
        <pre>diff --git a/src/game/Group.h b/src/game/Group.h
index 3024438..88eda30 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Group.h">
                      a
                  </th>
                  <th title="File b/src/game/Group.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>92</th><th>92</th><td class="l"><span>&nbsp; &nbsp; GROUP_UPDATE_FLAG_PET_AURAS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x00040000,&nbsp; &nbsp; &nbsp; &nbsp;// uint64 mask, for each bit set uint32 spellid + uint8 unk, pet auras...</span> </td>
                  </tr><tr>
                          <th>93</th><th>93</th><td class="l"><span>&nbsp; &nbsp; GROUP_UPDATE_FLAG_VEHICLE_SEAT&nbsp; &nbsp; &nbsp; = 0x00080000,&nbsp; &nbsp; &nbsp; &nbsp;// uint32 vehicle_seat_id (index from VehicleSeat.dbc)</span> </td>
                  </tr><tr>
                          <th>94</th><th>94</th><td class="l"><span>&nbsp; &nbsp; GROUP_UPDATE_PET&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 0x0007FC00,&nbsp; &nbsp; &nbsp; &nbsp;// all pet flags</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>95</th><th> </th><td class="l"><span>&nbsp; &nbsp; GROUP_UPDATE_FULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0007FFFF,&nbsp; &nbsp; &nbsp; &nbsp;// all known flags</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>95</th><td class="r"><span>&nbsp; &nbsp; GROUP_UPDATE_VEHICLE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 0x000FFC00,&nbsp; &nbsp; &nbsp; &nbsp;// all vehicle flags</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>96</th><td class="r"><span>&nbsp; &nbsp; GROUP_UPDATE_FULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x000FFFFF,&nbsp; &nbsp; &nbsp; &nbsp;// all known flags</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>96</th><th>97</th><td class="l"><span>};</span> </td>
                  </tr><tr>
                          <th>97</th><th>98</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>98</th><th>99</th><td class="l"><span>#define GROUP_UPDATE_FLAGS_COUNT&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 20</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/GroupHandler.cpp</a>
        </h2>
        <pre>diff --git a/src/game/GroupHandler.cpp b/src/game/GroupHandler.cpp
index e52a855..145e55f 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/GroupHandler.cpp">
                      a
                  </th>
                  <th title="File b/src/game/GroupHandler.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>28</th><th>28</th><td class="l"><span>#include "Group.h"</span> </td>
                  </tr><tr>
                          <th>29</th><th>29</th><td class="l"><span>#include "SocialMgr.h"</span> </td>
                  </tr><tr>
                          <th>30</th><th>30</th><td class="l"><span>#include "Util.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>31</th><td class="r"><ins>#include "Vehicle.h"</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>31</th><th>32</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>32</th><th>33</th><td class="l"><span>/* differeces from off:</span> </td>
                  </tr><tr>
                          <th>33</th><th>34</th><td class="l"><span>&nbsp; &nbsp; -you can uninvite yourself - is is useful</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L690">…</a></th>
                  <th><a href="#L691">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>690</th><th>691</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>691</th><th>692</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>692</th><th>693</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>693</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del>Pet *pet = player-&gt;Get</del>Pet();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>694</th><td class="r"><span>&nbsp; &nbsp; <ins>Unit *pet = player-&gt;GetCharmOr</ins>Pet();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>694</th><th>695</th><td class="l"><span>&nbsp; &nbsp; if (mask &amp; GROUP_UPDATE_FLAG_PET_GUID)</span> </td>
                  </tr><tr>
                          <th>695</th><th>696</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>696</th><th>697</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L773">…</a></th>
                  <th><a href="#L774">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>773</th><th>774</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>774</th><th>775</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint64) 0;</span> </td>
                  </tr><tr>
                          <th>775</th><th>776</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>777</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>778</th><td class="r"><ins>&nbsp; &nbsp; if (mask &amp; GROUP_UPDATE_FLAG_VEHICLE_SEAT)</ins> </td>
                  </tr><tr>
                          <th> </th><th>779</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>780</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; *data &lt;&lt; (uint32) player-&gt;m_SeatData.dbc_seat;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>781</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>776</th><th>782</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>777</th><th>783</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>778</th><th>784</th><td class="l"><span>/*this procedure handles clients CMSG_REQUEST_PARTY_MEMBER_STATS request*/</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L794">…</a></th>
                  <th><a href="#L800">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>794</th><th>800</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>795</th><th>801</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>796</th><th>802</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>797</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del>Pet *pet = player-&gt;Get</del>Pet();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>803</th><td class="r"><span>&nbsp; &nbsp; <ins>Unit *pet = player-&gt;GetCharmOr</ins>Pet();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>798</th><th>804</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>799</th><th>805</th><td class="l"><span>&nbsp; &nbsp; WorldPacket data(SMSG_PARTY_MEMBER_STATS_FULL, 4+2+2+2+1+2*6+8+1+8);</span> </td>
                  </tr><tr>
                          <th>800</th><th>806</th><td class="l"><span>&nbsp; &nbsp; data &lt;&lt; uint8(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// only for SMSG_PARTY_MEMBER_STATS_FULL, probably arena/bg related</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L802">…</a></th>
                  <th><a href="#L808">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>802</th><th>808</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>803</th><th>809</th><td class="l"><span>&nbsp; &nbsp; uint32 mask1 = 0x00040BFF;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // common mask, real flags used 0x000040BFF</span> </td>
                  </tr><tr>
                          <th>804</th><th>810</th><td class="l"><span>&nbsp; &nbsp; if(pet)</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>805</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; mask1 = 0x<del>7</del>FFFFFFF;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// for hunters and other classes with pets</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>811</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; mask1 = 0x<ins>F</ins>FFFFFFF;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// for hunters and other classes with pets</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>806</th><th>812</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>807</th><th>813</th><td class="l"><span>&nbsp; &nbsp; Powers powerType = player-&gt;getPowerType();</span> </td>
                  </tr><tr>
                          <th>808</th><th>814</th><td class="l"><span>&nbsp; &nbsp; data &lt;&lt; (uint32) mask1;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// group update mask</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L856">…</a></th>
                  <th><a href="#L862">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>856</th><th>862</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>857</th><th>863</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>858</th><th>864</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data.put&lt;uint64&gt;(petMaskPos,petauramask);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// GROUP_UPDATE_FLAG_PET_AURAS</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>865</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; (uint32) player-&gt;m_SeatData.dbc_seat;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>859</th><th>866</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>860</th><th>867</th><td class="l"><span>&nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>861</th><th>868</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Level3.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Level3.cpp b/src/game/Level3.cpp
index e8a3d18..070a79e 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Level3.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Level3.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>73</th><th>73</th><td class="l"><span>&nbsp; &nbsp; HandleReloadReservedNameCommand("");</span> </td>
                  </tr><tr>
                          <th>74</th><th>74</th><td class="l"><span>&nbsp; &nbsp; HandleReloadMangosStringCommand("");</span> </td>
                  </tr><tr>
                          <th>75</th><th>75</th><td class="l"><span>&nbsp; &nbsp; HandleReloadGameTeleCommand("");</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>76</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>77</th><td class="r"><ins>&nbsp; &nbsp; HandleReloadVehicleDataCommand("");</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>78</th><td class="r"><ins>&nbsp; &nbsp; HandleReloadVehicleSeatDataCommand("");</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>76</th><th>79</th><td class="l"><span>&nbsp; &nbsp; return true;</span> </td>
                  </tr><tr>
                          <th>77</th><th>80</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>78</th><th>81</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L890">…</a></th>
                  <th><a href="#L893">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>890</th><th>893</th><td class="l"><span>&nbsp; &nbsp; return true;</span> </td>
                  </tr><tr>
                          <th>891</th><th>894</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>892</th><th>895</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>896</th><td class="r"><ins>bool ChatHandler::HandleReloadVehicleDataCommand(const char*)</ins> </td>
                  </tr><tr>
                          <th> </th><th>897</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>898</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString( "Re-Loading `vehicle_data` Table!" );</ins> </td>
                  </tr><tr>
                          <th> </th><th>899</th><td class="r"><ins>&nbsp; &nbsp; sObjectMgr.LoadVehicleData();</ins> </td>
                  </tr><tr>
                          <th> </th><th>900</th><td class="r"><ins>&nbsp; &nbsp; SendGlobalSysMessage("DB table `vehicle_data` reloaded.");</ins> </td>
                  </tr><tr>
                          <th> </th><th>901</th><td class="r"><ins>&nbsp; &nbsp; return true;</ins> </td>
                  </tr><tr>
                          <th> </th><th>902</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>903</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>904</th><td class="r"><ins>bool ChatHandler::HandleReloadVehicleSeatDataCommand(const char*)</ins> </td>
                  </tr><tr>
                          <th> </th><th>905</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>906</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString( "Re-Loading `vehicle_seat_data` Table!" );</ins> </td>
                  </tr><tr>
                          <th> </th><th>907</th><td class="r"><ins>&nbsp; &nbsp; sObjectMgr.LoadVehicleSeatData();</ins> </td>
                  </tr><tr>
                          <th> </th><th>908</th><td class="r"><ins>&nbsp; &nbsp; SendGlobalSysMessage("DB table `vehicle_seat_data` reloaded.");</ins> </td>
                  </tr><tr>
                          <th> </th><th>909</th><td class="r"><ins>&nbsp; &nbsp; return true;</ins> </td>
                  </tr><tr>
                          <th> </th><th>910</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>911</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>893</th><th>912</th><td class="l"><span>bool ChatHandler::HandleLoadScriptsCommand(const char* args)</span> </td>
                  </tr><tr>
                          <th>894</th><th>913</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>895</th><th>914</th><td class="l"><span>&nbsp; &nbsp; if(!LoadScriptingModule(args)) return true;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Map.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Map.cpp b/src/game/Map.cpp
index 7c00f9d..edabfaf 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Map.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Map.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>206</th><th>206</th><td class="l"><span>&nbsp; m_VisibleDistance(DEFAULT_VISIBILITY_DISTANCE),</span> </td>
                  </tr><tr>
                          <th>207</th><th>207</th><td class="l"><span>&nbsp; m_activeNonPlayersIter(m_activeNonPlayers.end()),</span> </td>
                  </tr><tr>
                          <th>208</th><th>208</th><td class="l"><span>&nbsp; i_gridExpiry(expiry), m_parentMap(_parent ? _parent : this),</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>209</th><th> </th><td class="l"><span>&nbsp; m_hiDynObjectGuid(1), m_hiPetGuid(1)<del>, m_hiVehicleGuid(1)</del></span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>209</th><td class="r"><span>&nbsp; m_hiDynObjectGuid(1), m_hiPetGuid(1)<ins></ins></span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>210</th><th>210</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>211</th><th>211</th><td class="l"><span>&nbsp; &nbsp; for(unsigned int idx=0; idx &lt; MAX_NUMBER_OF_GRIDS; ++idx)</span> </td>
                  </tr><tr>
                          <th>212</th><th>212</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3518">…</a></th>
                  <th><a href="#L3518">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3518</th><th>3518</th><td class="l"><span>&nbsp; &nbsp; return ret;</span> </td>
                  </tr><tr>
                          <th>3519</th><th>3519</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>3520</th><th>3520</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3521</th><th> </th><td class="l"><span><del>Creature* Map::GetCreatureOrPetOrVehicle</del>(uint64 guid)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3521</th><td class="r"><span><ins>Unit* Map::GetCreatureOrPet</ins>(uint64 guid)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3522</th><th>3522</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3523</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (IS_PLAYER_GUID(guid))</span> </td>
                      </tr><tr>
                        <th>3524</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</span> </td>
                      </tr><tr>
                        <th>3525</th><th> </th><td class="l"><span></span> </td>
                      </tr><tr>
                        <th>3526</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (IS_PET_GUID(guid))</span> </td>
                      </tr><tr>
                        <th>3527</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return GetPet(guid);</span> </td>
                      </tr><tr>
                        <th>3528</th><th> </th><td class="l"><span></span> </td>
                      </tr><tr>
                        <th>3529</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (IS_VEHICLE_GUID(guid))</span> </td>
                      </tr><tr>
                        <th>3530</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return GetVehicle(guid);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>3523</th><td class="r"><span>&nbsp; &nbsp; if (Unit* ret = GetCreature(guid))</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>3524</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return ret;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3531</th><th>3525</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3532</th><th> </th><td class="l"><span>&nbsp; &nbsp; return Get<del>Creature</del>(guid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3526</th><td class="r"><span>&nbsp; &nbsp; return Get<ins>Pet</ins>(guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3533</th><th>3527</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>3534</th><th>3528</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>3535</th><th>3529</th><td class="l"><span>GameObject* Map::GetGameObject(uint64 guid)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3600">…</a></th>
                  <th><a href="#L3594">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3600</th><th>3594</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; World::StopNow(ERROR_EXIT_CODE);</span> </td>
                  </tr><tr>
                          <th>3601</th><th>3595</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>3602</th><th>3596</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return m_hiPetGuid++;</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3603</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del></del>case HIGHGUID_VEHICLE:</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3597</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>/*</ins>case HIGHGUID_VEHICLE:</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3604</th><th>3598</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_hiVehicleGuid&gt;=0x00FFFFFF)</span> </td>
                  </tr><tr>
                          <th>3605</th><th>3599</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>3606</th><th>3600</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("Vehicle guid overflow!! Can't continue, shutting down server. ");</span> </td>
                  </tr><tr>
                          <th>3607</th><th>3601</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; World::StopNow(ERROR_EXIT_CODE);</span> </td>
                  </tr><tr>
                          <th>3608</th><th>3602</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3609</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return m_hiVehicleGuid++;<del></del></span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3603</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return m_hiVehicleGuid++;<ins>*/</ins></span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3610</th><th>3604</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; default:</span> </td>
                  </tr><tr>
                          <th>3611</th><th>3605</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ASSERT(0);</span> </td>
                  </tr><tr>
                          <th>3612</th><th>3606</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Map.h</a>
        </h2>
        <pre>diff --git a/src/game/Map.h b/src/game/Map.h
index af153a2..72d665b 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Map.h">
                      a
                  </th>
                  <th title="File b/src/game/Map.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>37</th><th>37</th><td class="l"><span>#include &lt;bitset&gt;</span> </td>
                  </tr><tr>
                          <th>38</th><th>38</th><td class="l"><span>#include &lt;list&gt;</span> </td>
                  </tr><tr>
                          <th>39</th><th>39</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>40</th><th> </th><td class="l"><del>class Creature;</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>41</th><th>40</th><td class="l"><span>class Unit;</span> </td>
                  </tr><tr>
                          <th>42</th><th>41</th><td class="l"><span>class WorldPacket;</span> </td>
                  </tr><tr>
                          <th>43</th><th>42</th><td class="l"><span>class InstanceData;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L399">…</a></th>
                  <th><a href="#L398">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>399</th><th>398</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Creature* GetCreature(uint64 guid);</span> </td>
                  </tr><tr>
                          <th>400</th><th>399</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle* GetVehicle(uint64 guid);</span> </td>
                  </tr><tr>
                          <th>401</th><th>400</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet* GetPet(uint64 guid);</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>402</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>Creature* GetCreatureOrPetOrVehicle</del>(uint64 guid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>401</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>Unit* GetCreatureOrPet</ins>(uint64 guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>403</th><th>402</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; GameObject* GetGameObject(uint64 guid);</span> </td>
                  </tr><tr>
                          <th>404</th><th>403</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; DynamicObject* GetDynamicObject(uint64 guid);</span> </td>
                  </tr><tr>
                          <th>405</th><th>404</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Corpse* GetCorpse(uint64 guid);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L497">…</a></th>
                  <th><a href="#L496">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>497</th><th>496</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Map local low guid counters</span> </td>
                  </tr><tr>
                          <th>498</th><th>497</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiDynObjectGuid;</span> </td>
                  </tr><tr>
                          <th>499</th><th>498</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiPetGuid;</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>500</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiVehicleGuid;</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>501</th><th>499</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>502</th><th>500</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Type specific code for add/remove to/from grid</span> </td>
                  </tr><tr>
                          <th>503</th><th>501</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; template&lt;class T&gt;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/MiscHandler.cpp</a>
        </h2>
        <pre>diff --git a/src/game/MiscHandler.cpp b/src/game/MiscHandler.cpp
index 455891c..2ff843d 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/MiscHandler.cpp">
                      a
                  </th>
                  <th title="File b/src/game/MiscHandler.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>266</th><th>266</th><td class="l"><span>&nbsp; &nbsp; //Can not logout if...</span> </td>
                  </tr><tr>
                          <th>267</th><th>267</th><td class="l"><span>&nbsp; &nbsp; if( GetPlayer()-&gt;isInCombat() ||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //...is in combat</span> </td>
                  </tr><tr>
                          <th>268</th><th>268</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; GetPlayer()-&gt;duel&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //...is in Duel</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>269</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GetPlayer()-&gt;GetVehicleGUID() ||&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //...is in vehicle</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>269</th><th>270</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //...is jumping ...is falling</span> </td>
                  </tr><tr>
                          <th>270</th><th>271</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; GetPlayer()-&gt;m_movementInfo.HasMovementFlag(MovementFlags(MOVEFLAG_FALLING | MOVEFLAG_FALLINGFAR)))</span> </td>
                  </tr><tr>
                          <th>271</th><th>272</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/MovementHandler.cpp</a>
        </h2>
        <pre>diff --git a/src/game/MovementHandler.cpp b/src/game/MovementHandler.cpp
index e01acc7..10822e9 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/MovementHandler.cpp">
                      a
                  </th>
                  <th title="File b/src/game/MovementHandler.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>248</th><th>248</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>249</th><th>249</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>250</th><th>250</th><td class="l"><span>&nbsp; &nbsp; /* handle special cases */</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>251</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (movementInfo.HasMovementFlag(MOVEFLAG_ONTRANSPORT)<del></del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>251</th><td class="r"><span>&nbsp; &nbsp; if (movementInfo.HasMovementFlag(MOVEFLAG_ONTRANSPORT)<ins>&nbsp;&amp;&amp; !mover-&gt;GetVehicleGUID()</ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>252</th><th>252</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>253</th><th>253</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // transports size limited</span> </td>
                  </tr><tr>
                          <th>254</th><th>254</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // (also received at zeppelin/lift leave by some reason with t_* as absolute in continent coordinates, can be safely skipped)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L296">…</a></th>
                  <th><a href="#L296">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>296</th><th>296</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // now client not include swimming flag in case jumping under water</span> </td>
                  </tr><tr>
                          <th>297</th><th>297</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; plMover-&gt;SetInWater( !plMover-&gt;IsInWater() || plMover-&gt;GetBaseMap()-&gt;IsUnderWater(movementInfo.GetPos()-&gt;x, movementInfo.GetPos()-&gt;y, movementInfo.GetPos()-&gt;z) );</span> </td>
                  </tr><tr>
                          <th>298</th><th>298</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>299</th><td class="r"><ins>&nbsp; &nbsp; if (movementInfo.HasMovementFlag(MOVEFLAG_SWIMMING))</ins> </td>
                  </tr><tr>
                          <th> </th><th>300</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>301</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(mover-&gt;GetTypeId() == TYPEID_UNIT)</ins> </td>
                  </tr><tr>
                          <th> </th><th>302</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>303</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Creature*)mover)-&gt;isVehicle() &amp;&amp; !((Creature*)mover)-&gt;canSwim())</ins> </td>
                  </tr><tr>
                          <th> </th><th>304</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>305</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // NOTE : we should enter evade mode here, but...</ins> </td>
                  </tr><tr>
                          <th> </th><th>306</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Vehicle*)mover)-&gt;SetSpawnDuration(1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>307</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>308</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>309</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>299</th><th>310</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>300</th><th>311</th><td class="l"><span>&nbsp; &nbsp; /*----------------------*/</span> </td>
                  </tr><tr>
                          <th>301</th><th>312</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L354">…</a></th>
                  <th><a href="#L365">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>354</th><th>365</th><td class="l"><span>&nbsp; &nbsp; else&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // creature charmed</span> </td>
                  </tr><tr>
                          <th>355</th><th>366</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>356</th><th>367</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(mover-&gt;IsInWorld())</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>368</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>357</th><th>369</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; mover-&gt;GetMap()-&gt;CreatureRelocation((Creature*)mover, movementInfo.GetPos()-&gt;x, movementInfo.GetPos()-&gt;y, movementInfo.GetPos()-&gt;z, movementInfo.GetPos()-&gt;o);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>370</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Creature*)mover)-&gt;isVehicle())</ins> </td>
                  </tr><tr>
                          <th> </th><th>371</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Vehicle*)mover)-&gt;RellocatePassengers(mover-&gt;GetMap());</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>372</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>358</th><th>373</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>359</th><th>374</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>360</th><th>375</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L437">…</a></th>
                  <th><a href="#L452">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>437</th><th>452</th><td class="l"><span>&nbsp; &nbsp; uint64 guid;</span> </td>
                  </tr><tr>
                          <th>438</th><th>453</th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; guid;</span> </td>
                  </tr><tr>
                          <th>439</th><th>454</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>455</th><td class="r"><ins>&nbsp; &nbsp; if(_player-&gt;m_mover_in_queve &amp;&amp; _player-&gt;m_mover_in_queve-&gt;GetGUID() == guid)</ins> </td>
                  </tr><tr>
                          <th> </th><th>456</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>457</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;m_mover = _player-&gt;m_mover_in_queve;</ins> </td>
                  </tr><tr>
                          <th> </th><th>458</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;m_mover_in_queve = NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>459</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>460</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>440</th><th>461</th><td class="l"><span>&nbsp; &nbsp; if(_player-&gt;m_mover-&gt;GetGUID() != guid)</span> </td>
                  </tr><tr>
                          <th>441</th><th>462</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>442</th><th>463</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("HandleSetActiveMoverOpcode: incorrect mover guid: mover is " I64FMT " and should be " I64FMT, _player-&gt;m_mover-&gt;GetGUID(), guid);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L447">…</a></th>
                  <th><a href="#L468">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>447</th><th>468</th><td class="l"><span>void WorldSession::HandleMoveNotActiveMover(WorldPacket &amp;recv_data)</span> </td>
                  </tr><tr>
                          <th>448</th><th>469</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>449</th><th>470</th><td class="l"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: Recvd CMSG_MOVE_NOT_ACTIVE_MOVER");</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>450</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del></del>recv_data.hexlike();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>471</th><td class="r"><span>&nbsp; &nbsp; <ins>//</ins>recv_data.hexlike();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>451</th><th>472</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>452</th><th> </th><td class="l"><span>&nbsp; &nbsp; ObjectGuid <del>old_</del>mover_guid;</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>473</th><td class="r"><span>&nbsp; &nbsp; ObjectGuid <ins></ins>mover_guid;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>453</th><th>474</th><td class="l"><span>&nbsp; &nbsp; MovementInfo mi;</span> </td>
                  </tr><tr>
                          <th>454</th><th>475</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>455</th><th> </th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; <del>old_</del>mover_guid.ReadAsPacked();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>476</th><td class="r"><span>&nbsp; &nbsp; recv_data &gt;&gt; <ins></ins>mover_guid.ReadAsPacked();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>456</th><th>477</th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; mi;</span> </td>
                  </tr><tr>
                          <th>457</th><th>478</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>458</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(_player-&gt;m_mover-&gt;GetGUID() <del>== old_</del>mover_guid.GetRawValue())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>479</th><td class="r"><span>&nbsp; &nbsp; if(_player-&gt;m_mover-&gt;GetGUID() <ins>!= </ins>mover_guid.GetRawValue())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>459</th><th>480</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>460</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("HandleMoveNotActiveMover: incorrect mover guid: mover is " I64FMT " and should be " I64FMT " instead of " UI64FMTD, _player-&gt;m_mover-&gt;GetGUID(), _player-&gt;GetGUID(), <del>old_</del>mover_guid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>481</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("HandleMoveNotActiveMover: incorrect mover guid: mover is " I64FMT " and should be " I64FMT " instead of " UI64FMTD, _player-&gt;m_mover-&gt;GetGUID(), _player-&gt;GetGUID(), <ins></ins>mover_guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>461</th><th>482</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; recv_data.rpos(recv_data.wpos());&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// prevent warnings spam</span> </td>
                  </tr><tr>
                          <th>462</th><th>483</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>463</th><th>484</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L476">…</a></th>
                  <th><a href="#L497">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>476</th><th>497</th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; guid.ReadAsPacked();</span> </td>
                  </tr><tr>
                          <th>477</th><th>498</th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; mi;</span> </td>
                  </tr><tr>
                          <th>478</th><th>499</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>479</th><th> </th><td class="l"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;Get<del>Charm</del>GUID();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>500</th><td class="r"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;Get<ins>Vehicle</ins>GUID();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>480</th><th>501</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>481</th><th>502</th><td class="l"><span>&nbsp; &nbsp; if(!vehicleGUID)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // something wrong here...</span> </td>
                  </tr><tr>
                          <th>482</th><th>503</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>483</th><th>504</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>484</th><th>505</th><td class="l"><span>&nbsp; &nbsp; _player-&gt;m_movementInfo = mi;</span> </td>
                  </tr><tr>
                          <th>485</th><th>506</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>486</th><th> </th><td class="l"><span>&nbsp; &nbsp; // using charm guid, because we don't have vehicle guid...</span> </td>
                      </tr><tr>
                        <th>487</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(Vehicle *vehicle = _player-&gt;GetMap()-&gt;GetVehicle(vehicleGUID))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>507</th><td class="r"><span>&nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</span> </td>
                      </tr><tr>
                        <th> </th><th>508</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>509</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(vehicle-&gt;GetVehicleFlags() &amp; VF_DESPAWN_AT_LEAVE)</span> </td>
                      </tr><tr>
                        <th> </th><th>510</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;Dismiss();</span> </td>
                      </tr><tr>
                        <th> </th><th>511</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                      </tr><tr>
                        <th> </th><th>512</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;ExitVehicle();</span> </td>
                      </tr><tr>
                        <th> </th><th>513</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>514</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>515</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>516</th><td class="r"><span>void WorldSession::HandleRequestVehicleExit(WorldPacket &amp;recv_data)</span> </td>
                      </tr><tr>
                        <th> </th><th>517</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>518</th><td class="r"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: Recvd CMSG_REQUEST_VEHICLE_EXIT");</span> </td>
                      </tr><tr>
                        <th> </th><th>519</th><td class="r"><span>&nbsp; &nbsp; recv_data.hexlike();</span> </td>
                      </tr><tr>
                        <th> </th><th>520</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>521</th><td class="r"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;GetVehicleGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>522</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>523</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleGUID)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // something wrong here...</span> </td>
                      </tr><tr>
                        <th> </th><th>524</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>525</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>526</th><td class="r"><span>&nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</span> </td>
                      </tr><tr>
                        <th> </th><th>527</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>528</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;ExitVehicle();</span> </td>
                      </tr><tr>
                        <th> </th><th>529</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>530</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>531</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>532</th><td class="r"><span>void WorldSession::HandleRequestVehiclePrevSeat(WorldPacket &amp;recv_data)</span> </td>
                      </tr><tr>
                        <th> </th><th>533</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>534</th><td class="r"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: Recvd CMSG_REQUEST_VEHICLE_PREV_SEAT");</span> </td>
                      </tr><tr>
                        <th> </th><th>535</th><td class="r"><span>&nbsp; &nbsp; recv_data.hexlike();</span> </td>
                      </tr><tr>
                        <th> </th><th>536</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>537</th><td class="r"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;GetVehicleGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>538</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>539</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleGUID)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // something wrong here...</span> </td>
                      </tr><tr>
                        <th> </th><th>540</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>541</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>542</th><td class="r"><span>&nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</span> </td>
                      </tr><tr>
                        <th> </th><th>543</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>544</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int8 prv_seat = _player-&gt;m_SeatData.seat;</span> </td>
                      </tr><tr>
                        <th> </th><th>545</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = vehicle-&gt;GetNextEmptySeat(&amp;prv_seat, false, false))</span> </td>
                      </tr><tr>
                        <th> </th><th>546</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>547</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(_player);</span> </td>
                      </tr><tr>
                        <th> </th><th>548</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle(v, prv_seat, false);</span> </td>
                      </tr><tr>
                        <th> </th><th>549</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>550</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>551</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>552</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>553</th><td class="r"><span>void WorldSession::HandleRequestVehicleNextSeat(WorldPacket &amp;recv_data)</span> </td>
                      </tr><tr>
                        <th> </th><th>554</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>555</th><td class="r"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: Recvd CMSG_REQUEST_VEHICLE_NEXT_SEAT");</span> </td>
                      </tr><tr>
                        <th> </th><th>556</th><td class="r"><span>&nbsp; &nbsp; recv_data.hexlike();</span> </td>
                      </tr><tr>
                        <th> </th><th>557</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>558</th><td class="r"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;GetVehicleGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>559</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>560</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleGUID)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // something wrong here...</span> </td>
                      </tr><tr>
                        <th> </th><th>561</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>562</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>563</th><td class="r"><span>&nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</span> </td>
                      </tr><tr>
                        <th> </th><th>564</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>565</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int8 nxt_seat = _player-&gt;m_SeatData.seat;</span> </td>
                      </tr><tr>
                        <th> </th><th>566</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = vehicle-&gt;GetNextEmptySeat(&amp;nxt_seat, true, false))</span> </td>
                      </tr><tr>
                        <th> </th><th>567</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>568</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(_player);</span> </td>
                      </tr><tr>
                        <th> </th><th>569</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle(v, nxt_seat, false);</span> </td>
                      </tr><tr>
                        <th> </th><th>570</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>571</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>572</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>573</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>574</th><td class="r"><span>void WorldSession::HandleRequestVehicleSwitchSeat(WorldPacket &amp;recv_data)</span> </td>
                      </tr><tr>
                        <th> </th><th>575</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>576</th><td class="r"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: Recvd CMSG_REQUEST_VEHICLE_SWITCH_SEAT");</span> </td>
                      </tr><tr>
                        <th> </th><th>577</th><td class="r"><span>&nbsp; &nbsp; recv_data.hexlike();</span> </td>
                      </tr><tr>
                        <th> </th><th>578</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>579</th><td class="r"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;GetVehicleGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>580</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>581</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleGUID)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // something wrong here...</span> </td>
                      </tr><tr>
                        <th> </th><th>582</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>583</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>584</th><td class="r"><span>&nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</span> </td>
                      </tr><tr>
                        <th> </th><th>585</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>586</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint64 guid = 0;</span> </td>
                      </tr><tr>
                        <th> </th><th>587</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; //if(!recv_data.readPackGUID(guid))</span> </td>
                      </tr><tr>
                        <th> </th><th>588</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>589</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>590</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int8 seatId = 0;</span> </td>
                      </tr><tr>
                        <th> </th><th>591</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; recv_data &gt;&gt; seatId;</span> </td>
                      </tr><tr>
                        <th> </th><th>592</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>593</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(guid)</span> </td>
                      </tr><tr>
                        <th> </th><th>594</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>595</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(vehicleGUID != guid)</span> </td>
                      </tr><tr>
                        <th> </th><th>596</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>597</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *veh = ObjectAccessor::GetVehicle(guid))</span> </td>
                      </tr><tr>
                        <th> </th><th>598</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>599</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!_player-&gt;IsWithinDistInMap(veh, 10))</span> </td>
                      </tr><tr>
                        <th> </th><th>600</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>601</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>602</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = veh-&gt;FindFreeSeat(&amp;seatId, false))</span> </td>
                      </tr><tr>
                        <th> </th><th>603</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>604</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(_player);</span> </td>
                      </tr><tr>
                        <th> </th><th>605</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle(v, seatId, false);</span> </td>
                      </tr><tr>
                        <th> </th><th>606</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>607</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>608</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>609</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>610</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>611</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = vehicle-&gt;FindFreeSeat(&amp;seatId, false))</span> </td>
                      </tr><tr>
                        <th> </th><th>612</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>613</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(_player);</span> </td>
                      </tr><tr>
                        <th> </th><th>614</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle(v, seatId, false);</span> </td>
                      </tr><tr>
                        <th> </th><th>615</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>616</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>617</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>618</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>619</th><td class="r"><span>void WorldSession::HandleChangeSeatsOnControlledVehicle(WorldPacket &amp;recv_data)</span> </td>
                      </tr><tr>
                        <th> </th><th>620</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>621</th><td class="r"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: Recvd CMSG_CHANGE_SEATS_ON_CONTROLLED_VEHICLE");</span> </td>
                      </tr><tr>
                        <th> </th><th>622</th><td class="r"><span>&nbsp; &nbsp; recv_data.hexlike();</span> </td>
                      </tr><tr>
                        <th> </th><th>623</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>624</th><td class="r"><span>&nbsp; &nbsp; uint64 vehicleGUID = _player-&gt;GetVehicleGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>625</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>626</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleGUID)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // something wrong here...</span> </td>
                      </tr><tr>
                        <th> </th><th>627</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>628</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>629</th><td class="r"><span>&nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>488</th><th>630</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>489</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Aura::HandleAuraControlVehicle will call Player::ExitVehicle</span> </td>
                      </tr><tr>
                        <th>490</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemoveSpellsCausingAura(SPELL_AURA_CONTROL_VEHICLE);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>631</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; MovementInfo mi;</span> </td>
                      </tr><tr>
                        <th> </th><th>632</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;m_movementInfo = mi;</span> </td>
                      </tr><tr>
                        <th> </th><th>633</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>634</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint64 guid = 0;</span> </td>
                      </tr><tr>
                        <th> </th><th>635</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; //if(!recv_data.readPackGUID(guid))</span> </td>
                      </tr><tr>
                        <th> </th><th>636</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>637</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>638</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int8 seatId = 0;</span> </td>
                      </tr><tr>
                        <th> </th><th>639</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; recv_data &gt;&gt; seatId;</span> </td>
                      </tr><tr>
                        <th> </th><th>640</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>641</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(guid)</span> </td>
                      </tr><tr>
                        <th> </th><th>642</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>643</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(vehicleGUID != guid)</span> </td>
                      </tr><tr>
                        <th> </th><th>644</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>645</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *veh = ObjectAccessor::GetVehicle(guid))</span> </td>
                      </tr><tr>
                        <th> </th><th>646</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>647</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!_player-&gt;IsWithinDistInMap(veh, 10))</span> </td>
                      </tr><tr>
                        <th> </th><th>648</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>649</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>650</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = veh-&gt;FindFreeSeat(&amp;seatId, false))</span> </td>
                      </tr><tr>
                        <th> </th><th>651</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>652</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(_player);</span> </td>
                      </tr><tr>
                        <th> </th><th>653</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle(v, seatId, false);</span> </td>
                      </tr><tr>
                        <th> </th><th>654</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>655</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>656</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>657</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>658</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>659</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = vehicle-&gt;FindFreeSeat(&amp;seatId, false))</span> </td>
                      </tr><tr>
                        <th> </th><th>660</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>661</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(_player);</span> </td>
                      </tr><tr>
                        <th> </th><th>662</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle(v, seatId, false);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>663</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>491</th><th>664</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>492</th><th>665</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>493</th><th>666</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Object.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Object.cpp b/src/game/Object.cpp
index 9ec6a5b..a4b431f 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Object.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Object.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>284</th><th>284</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>285</th><th>285</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>286</th><th>286</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>287</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Unit*)this)-&gt;GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>288</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; moveFlags2 |= (MOVEFLAG_ONTRANSPORT | MOVEFLAG_ROOT);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>289</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>287</th><th>290</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>288</th><th>291</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>289</th><th>292</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case TYPEID_PLAYER:</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L298">…</a></th>
                  <th><a href="#L301">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>298</th><th>301</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // remove unknown, unused etc flags for now</span> </td>
                  </tr><tr>
                          <th>299</th><th>302</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; player-&gt;m_movementInfo.RemoveMovementFlag(MOVEFLAG_SPLINE_ENABLED);</span> </td>
                  </tr><tr>
                          <th>300</th><th>303</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>304</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Unit*)this)-&gt;GetVehicleGUID())</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>305</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; moveFlags2 |= (MOVEFLAG_ONTRANSPORT | MOVEFLAG_ROOT);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>301</th><th>306</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(player-&gt;isInFlight())</span> </td>
                  </tr><tr>
                          <th>302</th><th>307</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>303</th><th>308</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ASSERT(player-&gt;GetMotionMaster()-&gt;GetCurrentMovementGeneratorType() == FLIGHT_MOTION_TYPE);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1675">…</a></th>
                  <th><a href="#L1680">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1675</th><th>1680</th><td class="l"><span>&nbsp; &nbsp; return pCreature;</span> </td>
                  </tr><tr>
                          <th>1676</th><th>1681</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>1677</th><th>1682</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1683</th><td class="r"><ins>Vehicle* WorldObject::SummonVehicle(uint32 id, float x, float y, float z, float ang, uint32 vehicleId)</ins> </td>
                  </tr><tr>
                          <th> </th><th>1684</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>1685</th><td class="r"><ins>&nbsp; &nbsp; Vehicle *v = new Vehicle;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1686</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1687</th><td class="r"><ins>&nbsp; &nbsp; Map *map = GetMap();</ins> </td>
                  </tr><tr>
                          <th> </th><th>1688</th><td class="r"><ins>&nbsp; &nbsp; uint32 team = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1689</th><td class="r"><ins>&nbsp; &nbsp; if (GetTypeId()==TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>1690</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; team = ((Player*)this)-&gt;GetTeam();</ins> </td>
                  </tr><tr>
                          <th> </th><th>1691</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1692</th><td class="r"><ins>&nbsp; &nbsp; if(!v-&gt;Create(sObjectMgr.GenerateLowGuid(HIGHGUID_VEHICLE), map, GetPhaseMask(), id, vehicleId, team))</ins> </td>
                  </tr><tr>
                          <th> </th><th>1693</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1694</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; delete v;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1695</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1696</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1697</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1698</th><td class="r"><ins>&nbsp; &nbsp; if (x == 0.0f &amp;&amp; y == 0.0f &amp;&amp; z == 0.0f)</ins> </td>
                  </tr><tr>
                          <th> </th><th>1699</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GetClosePoint(x, y, z, v-&gt;GetObjectSize());</ins> </td>
                  </tr><tr>
                          <th> </th><th>1700</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1701</th><td class="r"><ins>&nbsp; &nbsp; v-&gt;Relocate(x, y, z, ang);</ins> </td>
                  </tr><tr>
                          <th> </th><th>1702</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1703</th><td class="r"><ins>&nbsp; &nbsp; if(!v-&gt;IsPositionValid())</ins> </td>
                  </tr><tr>
                          <th> </th><th>1704</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>1705</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("ERROR: Vehicle (guidlow %d, entry %d) not created. Suggested coordinates isn't valid (X: %f Y: %f)",</ins> </td>
                  </tr><tr>
                          <th> </th><th>1706</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v-&gt;GetGUIDLow(), v-&gt;GetEntry(), v-&gt;GetPositionX(), v-&gt;GetPositionY());</ins> </td>
                  </tr><tr>
                          <th> </th><th>1707</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; delete v;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1708</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1709</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1710</th><td class="r"><ins>&nbsp; &nbsp; map-&gt;Add((Creature*)v);</ins> </td>
                  </tr><tr>
                          <th> </th><th>1711</th><td class="r"><ins>&nbsp; &nbsp; v-&gt;AIM_Initialize();</ins> </td>
                  </tr><tr>
                          <th> </th><th>1712</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1713</th><td class="r"><ins>&nbsp; &nbsp; if(GetTypeId()==TYPEID_UNIT &amp;&amp; ((Creature*)this)-&gt;AI())</ins> </td>
                  </tr><tr>
                          <th> </th><th>1714</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ((Creature*)this)-&gt;AI()-&gt;JustSummoned((Creature*)v);</ins> </td>
                  </tr><tr>
                          <th> </th><th>1715</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1716</th><td class="r"><ins>&nbsp; &nbsp; return v;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1717</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1718</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1678</th><th>1719</th><td class="l"><span>namespace MaNGOS</span> </td>
                  </tr><tr>
                          <th>1679</th><th>1720</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>1680</th><th>1721</th><td class="l"><span>&nbsp; &nbsp; class NearUsedPosDo</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Object.h</a>
        </h2>
        <pre>diff --git a/src/game/Object.h b/src/game/Object.h
index dec9fea..ab35097 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Object.h">
                      a
                  </th>
                  <th title="File b/src/game/Object.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>69</th><th>69</th><td class="l"><span>class Map;</span> </td>
                  </tr><tr>
                          <th>70</th><th>70</th><td class="l"><span>class UpdateMask;</span> </td>
                  </tr><tr>
                          <th>71</th><th>71</th><td class="l"><span>class InstanceData;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>72</th><td class="r"><ins>class Vehicle;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>72</th><th>73</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>73</th><th>74</th><td class="l"><span>typedef UNORDERED_MAP&lt;Player*, UpdateData&gt; UpdateDataMapType;</span> </td>
                  </tr><tr>
                          <th>74</th><th>75</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L475">…</a></th>
                  <th><a href="#L476">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>475</th><th>476</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void BuildUpdateData(UpdateDataMapType &amp;);</span> </td>
                  </tr><tr>
                          <th>476</th><th>477</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>477</th><th>478</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Creature* SummonCreature(uint32 id, float x, float y, float z, float ang,TempSummonType spwtype,uint32 despwtime);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>479</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle* SummonVehicle(uint32 id, float x, float y, float z, float ang, uint32 vehicleId = NULL);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>480</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>478</th><th>481</th><td class="l"><span>&nbsp; &nbsp; protected:</span> </td>
                  </tr><tr>
                          <th>479</th><th>482</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; explicit WorldObject();</span> </td>
                  </tr><tr>
                          <th>480</th><th>483</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/ObjectAccessor.cpp</a>
        </h2>
        <pre>diff --git a/src/game/ObjectAccessor.cpp b/src/game/ObjectAccessor.cpp
index df80b81..3bdd668 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/ObjectAccessor.cpp">
                      a
                  </th>
                  <th title="File b/src/game/ObjectAccessor.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>53</th><th>53</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>54</th><th>54</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>55</th><th>55</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>56</th><td class="r"><ins>Creature*</ins> </td>
                  </tr><tr>
                          <th> </th><th>57</th><td class="r"><ins>ObjectAccessor::GetCreatureOrPetOrVehicle(WorldObject const &amp;u, uint64 guid)</ins> </td>
                  </tr><tr>
                          <th> </th><th>58</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>59</th><td class="r"><ins>&nbsp; &nbsp; if(IS_PLAYER_GUID(guid) || !u.IsInWorld())</ins> </td>
                  </tr><tr>
                          <th> </th><th>60</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>61</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>62</th><td class="r"><ins>&nbsp; &nbsp; if(IS_PET_GUID(guid))</ins> </td>
                  </tr><tr>
                          <th> </th><th>63</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return u.GetMap()-&gt;GetPet(guid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>64</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>65</th><td class="r"><ins>&nbsp; &nbsp; if(IS_VEHICLE_GUID(guid))</ins> </td>
                  </tr><tr>
                          <th> </th><th>66</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return u.GetMap()-&gt;GetVehicle(guid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>67</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>68</th><td class="r"><ins>&nbsp; &nbsp; return u.GetMap()-&gt;GetCreature(guid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>69</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>70</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>56</th><th>71</th><td class="l"><span>Unit*</span> </td>
                  </tr><tr>
                          <th>57</th><th>72</th><td class="l"><span>ObjectAccessor::GetUnit(WorldObject const &amp;u, uint64 guid)</span> </td>
                  </tr><tr>
                          <th>58</th><th>73</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L62">…</a></th>
                  <th><a href="#L77">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>62</th><th>77</th><td class="l"><span>&nbsp; &nbsp; if(IS_PLAYER_GUID(guid))</span> </td>
                  </tr><tr>
                          <th>63</th><th>78</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return FindPlayer(guid);</span> </td>
                  </tr><tr>
                          <th>64</th><th>79</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>65</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (!u.IsInWorld())</span> </td>
                      </tr><tr>
                        <th>66</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</span> </td>
                      </tr><tr>
                        <th>67</th><th> </th><td class="l"><span></span> </td>
                      </tr><tr>
                        <th>68</th><th> </th><td class="l"><span>&nbsp; &nbsp; return u.GetMap()-&gt;GetCreatureOrPetOrVehicle(guid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>80</th><td class="r"><span>&nbsp; &nbsp; return GetCreatureOrPetOrVehicle(u, guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>69</th><th>81</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>70</th><th>82</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>71</th><th>83</th><td class="l"><span>Corpse* ObjectAccessor::GetCorpseInMap( uint64 guid, uint32 mapid )</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/ObjectAccessor.h</a>
        </h2>
        <pre>diff --git a/src/game/ObjectAccessor.h b/src/game/ObjectAccessor.h
index d704045..b87e84c 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/ObjectAccessor.h">
                      a
                  </th>
                  <th title="File b/src/game/ObjectAccessor.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>38</th><th>38</th><td class="l"><span>class Creature;</span> </td>
                  </tr><tr>
                          <th>39</th><th>39</th><td class="l"><span>class Unit;</span> </td>
                  </tr><tr>
                          <th>40</th><th>40</th><td class="l"><span>class GameObject;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>41</th><td class="r"><ins>class Vehicle;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>41</th><th>42</th><td class="l"><span>class WorldObject;</span> </td>
                  </tr><tr>
                          <th>42</th><th>43</th><td class="l"><span>class Map;</span> </td>
                  </tr><tr>
                          <th>43</th><th>44</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L91">…</a></th>
                  <th><a href="#L92">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>91</th><th>92</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // global (obj used for map only location local guid objects (pets currently)</span> </td>
                  </tr><tr>
                          <th>92</th><th>93</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; static Unit*&nbsp; &nbsp;GetUnitInWorld(WorldObject const&amp; obj, uint64 guid);</span> </td>
                  </tr><tr>
                          <th>93</th><th>94</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>94</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // <del>FIXME: </del>map local object with global search</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>95</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; // <ins></ins>map local object with global search</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>95</th><th>96</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; static Creature*&nbsp; &nbsp;GetCreatureInWorld(uint64 guid)&nbsp; &nbsp;{ return FindHelper&lt;Creature&gt;(guid); }</span> </td>
                  </tr><tr>
                          <th>96</th><th>97</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; static GameObject* GetGameObjectInWorld(uint64 guid) { return FindHelper&lt;GameObject&gt;(guid); }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>98</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; static Pet*&nbsp; &nbsp; &nbsp; &nbsp; GetGameObjectInWorld(uint64 guid, Pet*&nbsp; &nbsp; &nbsp; &nbsp; /*fake*/) { return FindHelper&lt;Pet&gt;(guid); }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>99</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; static Vehicle*&nbsp; &nbsp; GetGameObjectInWorld(uint64 guid, Vehicle*&nbsp; &nbsp; /*fake*/) { return FindHelper&lt;Vehicle&gt;(guid); }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>97</th><th>100</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>98</th><th>101</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // possible local search for specific object map</span> </td>
                  </tr><tr>
                          <th>99</th><th>102</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; static Object* GetObjectByTypeMask(WorldObject const &amp;, uint64, uint32 typemask);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>103</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; static Creature* GetCreatureOrPetOrVehicle(WorldObject const &amp;, uint64);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>100</th><th>104</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; static Unit* GetUnit(WorldObject const &amp;, uint64);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>105</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; //static Player* GetPlayer(Unit const &amp;, uint64 guid) { return FindPlayer(guid); }</ins> </td>
                  </tr><tr>
                          <th> </th><th>106</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; //static Corpse* GetCorpse(WorldObject const &amp;u, uint64 guid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>107</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; //static Pet* GetPet(uint64 guid) { return GetObjectInWorld(guid, (Pet*)NULL); }</ins> </td>
                  </tr><tr>
                          <th> </th><th>108</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; static Vehicle* GetVehicle(uint64 guid) { return GetGameObjectInWorld(guid, (Vehicle*)NULL); }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>109</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; //static Player* FindPlayer(uint64);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>101</th><th>110</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>102</th><th>111</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Player access</span> </td>
                  </tr><tr>
                          <th>103</th><th>112</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; static Player* FindPlayer(uint64 guid);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L165">…</a></th>
                  <th><a href="#L174">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>165</th><th>174</th><td class="l"><span>&nbsp; &nbsp; if (IS_PET_GUID(guid))</span> </td>
                  </tr><tr>
                          <th>166</th><th>175</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return obj.IsInWorld() ? obj.GetMap()-&gt;GetPet(guid) : NULL;</span> </td>
                  </tr><tr>
                          <th>167</th><th>176</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>177</th><td class="r"><ins>&nbsp; &nbsp; if (IS_VEHICLE_GUID(guid))</ins> </td>
                  </tr><tr>
                          <th> </th><th>178</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return obj.IsInWorld() ? ((Unit*)obj.GetMap()-&gt;GetVehicle(guid)) : NULL;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>179</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>168</th><th>180</th><td class="l"><span>&nbsp; &nbsp; return GetCreatureInWorld(guid);</span> </td>
                  </tr><tr>
                          <th>169</th><th>181</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>170</th><th>182</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/ObjectMgr.cpp</a>
        </h2>
        <pre>diff --git a/src/game/ObjectMgr.cpp b/src/game/ObjectMgr.cpp
index 7fea7af..a998e25 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/ObjectMgr.cpp">
                      a
                  </th>
                  <th title="File b/src/game/ObjectMgr.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>132</th><th>132</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>133</th><th>133</th><td class="l"><span>&nbsp; &nbsp; m_hiCharGuid&nbsp; &nbsp; &nbsp; &nbsp; = 1;</span> </td>
                  </tr><tr>
                          <th>134</th><th>134</th><td class="l"><span>&nbsp; &nbsp; m_hiCreatureGuid&nbsp; &nbsp; = 1;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>135</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_hiVehicleGuid&nbsp; &nbsp; &nbsp;= 1;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>135</th><th>136</th><td class="l"><span>&nbsp; &nbsp; m_hiItemGuid&nbsp; &nbsp; &nbsp; &nbsp; = 1;</span> </td>
                  </tr><tr>
                          <th>136</th><th>137</th><td class="l"><span>&nbsp; &nbsp; m_hiGoGuid&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 1;</span> </td>
                  </tr><tr>
                          <th>137</th><th>138</th><td class="l"><span>&nbsp; &nbsp; m_hiCorpseGuid&nbsp; &nbsp; &nbsp; = 1;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L819">…</a></th>
                  <th><a href="#L820">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>819</th><th>820</th><td class="l"><span>&nbsp; &nbsp; endAura.effect_idx = EFFECT_INDEX_0;</span> </td>
                  </tr><tr>
                          <th>820</th><th>821</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>821</th><th>822</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>823</th><td class="r"><ins>void ObjectMgr::ConvertCreatureAddonPassengers(CreatureDataAddon* addon, char const* table, char const* guidEntryStr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>824</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>825</th><td class="r"><ins>&nbsp; &nbsp; // Now add the passengers, format "creature_entry/guid seatindex creature_entry/guid seatindex..."</ins> </td>
                  </tr><tr>
                          <th> </th><th>826</th><td class="r"><ins>&nbsp; &nbsp; char *p,*s;</ins> </td>
                  </tr><tr>
                          <th> </th><th>827</th><td class="r"><ins>&nbsp; &nbsp; std::vector&lt;int&gt; val;</ins> </td>
                  </tr><tr>
                          <th> </th><th>828</th><td class="r"><ins>&nbsp; &nbsp; s=p=(char*)reinterpret_cast&lt;char const*&gt;(addon-&gt;passengers);</ins> </td>
                  </tr><tr>
                          <th> </th><th>829</th><td class="r"><ins>&nbsp; &nbsp; if(p)</ins> </td>
                  </tr><tr>
                          <th> </th><th>830</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>831</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; while (p[0]!=0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>832</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>833</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ++p;</ins> </td>
                  </tr><tr>
                          <th> </th><th>834</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (p[0]==' ')</ins> </td>
                  </tr><tr>
                          <th> </th><th>835</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>836</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val.push_back(atoi(s));</ins> </td>
                  </tr><tr>
                          <th> </th><th>837</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; s=++p;</ins> </td>
                  </tr><tr>
                          <th> </th><th>838</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>839</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>840</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if (p!=s)</ins> </td>
                  </tr><tr>
                          <th> </th><th>841</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; val.push_back(atoi(s));</ins> </td>
                  </tr><tr>
                          <th> </th><th>842</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>843</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; // free char* loaded memory</ins> </td>
                  </tr><tr>
                          <th> </th><th>844</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; delete[] (char*)reinterpret_cast&lt;char const*&gt;(addon-&gt;passengers);</ins> </td>
                  </tr><tr>
                          <th> </th><th>845</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>846</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; // wrong list</ins> </td>
                  </tr><tr>
                          <th> </th><th>847</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if (val.size()%2)</ins> </td>
                  </tr><tr>
                          <th> </th><th>848</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>849</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addon-&gt;auras = NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>850</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Creature (%s: %u) has wrong `passengers` data in `%s`.",guidEntryStr,addon-&gt;guidOrEntry,table);</ins> </td>
                  </tr><tr>
                          <th> </th><th>851</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>852</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>853</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>854</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>855</th><td class="r"><ins>&nbsp; &nbsp; // empty list</ins> </td>
                  </tr><tr>
                          <th> </th><th>856</th><td class="r"><ins>&nbsp; &nbsp; if(val.empty())</ins> </td>
                  </tr><tr>
                          <th> </th><th>857</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>858</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; addon-&gt;passengers = NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>859</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>860</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>861</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>862</th><td class="r"><ins>&nbsp; &nbsp; // replace by new structures array</ins> </td>
                  </tr><tr>
                          <th> </th><th>863</th><td class="r"><ins>&nbsp; &nbsp; const_cast&lt;CreatureDataAddonPassengers*&amp;&gt;(addon-&gt;passengers) = new CreatureDataAddonPassengers[val.size()/2+1];</ins> </td>
                  </tr><tr>
                          <th> </th><th>864</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>865</th><td class="r"><ins>&nbsp; &nbsp; int i=0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>866</th><td class="r"><ins>&nbsp; &nbsp; for(int j=0;j&lt;val.size()/2;++j)</ins> </td>
                  </tr><tr>
                          <th> </th><th>867</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>868</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; CreatureDataAddonPassengers&amp; cPas = const_cast&lt;CreatureDataAddonPassengers&amp;&gt;(addon-&gt;passengers[i]);</ins> </td>
                  </tr><tr>
                          <th> </th><th>869</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(guidEntryStr == "Entry")</ins> </td>
                  </tr><tr>
                          <th> </th><th>870</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cPas.entry = (uint32)val[2*j+0];</ins> </td>
                  </tr><tr>
                          <th> </th><th>871</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>872</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cPas.guid = (uint32)val[2*j+0];</ins> </td>
                  </tr><tr>
                          <th> </th><th>873</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; cPas.seat_idx = (int8)val[2*j+1];</ins> </td>
                  </tr><tr>
                          <th> </th><th>874</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if ( cPas.seat_idx &gt; 7 )</ins> </td>
                  </tr><tr>
                          <th> </th><th>875</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>876</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Creature (%s: %u) has wrong seat %u for creature %u in `passengers` field in `%s`.",guidEntryStr,addon-&gt;guidOrEntry,cPas.seat_idx,cPas.entry,table);</ins> </td>
                  </tr><tr>
                          <th> </th><th>877</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>878</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>879</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(cPas.entry == 0 &amp;&amp; cPas.guid == 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>880</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>881</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Creature (%s: %u) has NULL creature entry/guid in `passengers` field in `%s`.",guidEntryStr,addon-&gt;guidOrEntry,table);</ins> </td>
                  </tr><tr>
                          <th> </th><th>882</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>883</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>884</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(cPas.entry &gt; 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>885</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>886</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!sCreatureStorage.LookupEntry&lt;CreatureInfo&gt;(cPas.entry))</ins> </td>
                  </tr><tr>
                          <th> </th><th>887</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>888</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Creature (%s: %u) has wrong creature entry/guid %u `passengers` field in `%s`.",guidEntryStr,addon-&gt;guidOrEntry,cPas.entry,table);</ins> </td>
                  </tr><tr>
                          <th> </th><th>889</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>890</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>891</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>892</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>893</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>894</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(mCreatureDataMap.find(cPas.guid)==mCreatureDataMap.end())</ins> </td>
                  </tr><tr>
                          <th> </th><th>895</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>896</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Creature (%s: %u) has wrong creature entry/guid %u `passengers` field in `%s`.",guidEntryStr,addon-&gt;guidOrEntry,cPas.guid,table);</ins> </td>
                  </tr><tr>
                          <th> </th><th>897</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>898</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>899</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>900</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ++i;</ins> </td>
                  </tr><tr>
                          <th> </th><th>901</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>902</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>903</th><td class="r"><ins>&nbsp; &nbsp; // fill terminator element (after last added)</ins> </td>
                  </tr><tr>
                          <th> </th><th>904</th><td class="r"><ins>&nbsp; &nbsp; CreatureDataAddonPassengers&amp; endPassenger = const_cast&lt;CreatureDataAddonPassengers&amp;&gt;(addon-&gt;passengers[i]);</ins> </td>
                  </tr><tr>
                          <th> </th><th>905</th><td class="r"><ins>&nbsp; &nbsp; endPassenger.entry = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>906</th><td class="r"><ins>&nbsp; &nbsp; endPassenger.guid = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>907</th><td class="r"><ins>&nbsp; &nbsp; endPassenger.seat_idx = -1;</ins> </td>
                  </tr><tr>
                          <th> </th><th>908</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>909</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>822</th><th>910</th><td class="l"><span>void ObjectMgr::LoadCreatureAddons(SQLStorage&amp; creatureaddons, char const* entryName, char const* comment)</span> </td>
                  </tr><tr>
                          <th>823</th><th>911</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>824</th><th>912</th><td class="l"><span>&nbsp; &nbsp; creatureaddons.Load();</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L852">…</a></th>
                  <th><a href="#L940">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>852</th><th>940</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>853</th><th>941</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>854</th><th>942</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ConvertCreatureAddonAuras(const_cast&lt;CreatureDataAddon*&gt;(addon), creatureaddons.GetTableName(), entryName);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>943</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ConvertCreatureAddonPassengers(const_cast&lt;CreatureDataAddon*&gt;(addon), creatureaddons.GetTableName(), entryName);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>855</th><th>944</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>856</th><th>945</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>857</th><th>946</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L5859">…</a></th>
                  <th><a href="#L5948">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>5859</th><th>5948</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; World::StopNow(ERROR_EXIT_CODE);</span> </td>
                  </tr><tr>
                          <th>5860</th><th>5949</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>5861</th><th>5950</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return m_hiCreatureGuid++;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>5951</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case HIGHGUID_VEHICLE:</ins> </td>
                  </tr><tr>
                          <th> </th><th>5952</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_hiVehicleGuid&gt;=0x00FFFFFF)</ins> </td>
                  </tr><tr>
                          <th> </th><th>5953</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>5954</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("Vehicle guid overflow!! Can't continue, shutting down server. ");</ins> </td>
                  </tr><tr>
                          <th> </th><th>5955</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; World::StopNow(ERROR_EXIT_CODE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>5956</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>5957</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return m_hiVehicleGuid++;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>5862</th><th>5958</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case HIGHGUID_PLAYER:</span> </td>
                  </tr><tr>
                          <th>5863</th><th>5959</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_hiCharGuid&gt;=0xFFFFFFFE)</span> </td>
                  </tr><tr>
                          <th>5864</th><th>5960</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L8592">…</a></th>
                  <th><a href="#L8688">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>8592</th><th>8688</th><td class="l"><span>&nbsp; &nbsp; return sCreatureStorage.LookupEntry&lt;CreatureInfo&gt;(entry);</span> </td>
                  </tr><tr>
                          <th>8593</th><th>8689</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>8594</th><th>8690</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>8691</th><td class="r"><ins>void ObjectMgr::LoadVehicleData()</ins> </td>
                  </tr><tr>
                          <th> </th><th>8692</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>8693</th><td class="r"><ins>&nbsp; &nbsp; mVehicleData.clear();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8694</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8695</th><td class="r"><ins>&nbsp; &nbsp; QueryResult *result = WorldDatabase.Query("SELECT entry, flags, Spell1, Spell2, Spell3, Spell4, Spell5, Spell6, Spell7, Spell8, Spell9, Spell10, req_aura FROM vehicle_data");</ins> </td>
                  </tr><tr>
                          <th> </th><th>8696</th><td class="r"><ins>&nbsp; &nbsp; if(!result)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8697</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8698</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; barGoLink bar( 1 );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8699</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bar.step();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8700</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8701</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outString();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8702</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outString( "&gt;&gt; Loaded 0 vehicle data" );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8703</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("`vehicle_data` table is empty!");</ins> </td>
                  </tr><tr>
                          <th> </th><th>8704</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8705</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8706</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8707</th><td class="r"><ins>&nbsp; &nbsp; uint32 count = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8708</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8709</th><td class="r"><ins>&nbsp; &nbsp; barGoLink bar( result-&gt;GetRowCount() );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8710</th><td class="r"><ins>&nbsp; &nbsp; do</ins> </td>
                  </tr><tr>
                          <th> </th><th>8711</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8712</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bar.step();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8713</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8714</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Field* fields = result-&gt;Fetch();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8715</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8716</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleDataStructure VDS;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8717</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; // NOTE : we can use spellid or creature id</ins> </td>
                  </tr><tr>
                          <th> </th><th>8718</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 v_entry&nbsp; &nbsp; &nbsp; = fields[0].GetUInt32();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8719</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VDS.v_flags&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= fields[1].GetUInt32();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8720</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; for(uint8 j = 0; j &lt; MAX_VEHICLE_SPELLS; j++)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8721</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8722</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; VDS.v_spells[j] = fields[j+2].GetUInt32();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8723</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8724</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VDS.req_aura&nbsp; &nbsp; &nbsp; &nbsp; = fields[12].GetUInt32();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8725</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8726</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleEntry const *vehicleInfo = sVehicleStore.LookupEntry(v_entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8727</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(!vehicleInfo)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8728</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8729</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Vehicle id %u listed in `vehicle_data` does not exist",v_entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8730</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8731</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8732</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; for(uint8 j = 0; j &lt; MAX_VEHICLE_SPELLS; j++)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8733</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8734</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(VDS.v_spells[j])</ins> </td>
                  </tr><tr>
                          <th> </th><th>8735</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8736</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SpellEntry const* j_spell = sSpellStore.LookupEntry(VDS.v_spells[j]);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8737</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!j_spell)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8738</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8739</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Spell %u listed in `vehicle_data` does not exist, skipped",VDS.v_spells[j]);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8740</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; VDS.v_spells[j] = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8741</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8742</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8743</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8744</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(VDS.req_aura)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8745</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8746</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SpellEntry const* i_spell = sSpellStore.LookupEntry(VDS.req_aura);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8747</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!i_spell)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8748</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8749</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Spell %u listed in `vehicle_data` does not exist, skipped",VDS.req_aura);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8750</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; VDS.req_aura = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8751</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8752</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8753</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8754</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; mVehicleData[v_entry] = VDS;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8755</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ++count;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8756</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8757</th><td class="r"><ins>&nbsp; &nbsp; while (result-&gt;NextRow());</ins> </td>
                  </tr><tr>
                          <th> </th><th>8758</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8759</th><td class="r"><ins>&nbsp; &nbsp; delete result;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8760</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8761</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8762</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString( "&gt;&gt; Loaded %u vehicle data", count );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8763</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>8764</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8765</th><td class="r"><ins>void ObjectMgr::LoadVehicleSeatData()</ins> </td>
                  </tr><tr>
                          <th> </th><th>8766</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>8767</th><td class="r"><ins>&nbsp; &nbsp; mVehicleSeatData.clear();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8768</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8769</th><td class="r"><ins>&nbsp; &nbsp; QueryResult *result = WorldDatabase.Query("SELECT seat,flags FROM vehicle_seat_data");</ins> </td>
                  </tr><tr>
                          <th> </th><th>8770</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8771</th><td class="r"><ins>&nbsp; &nbsp; if( !result )</ins> </td>
                  </tr><tr>
                          <th> </th><th>8772</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8773</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; barGoLink bar( 1 );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8774</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8775</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bar.step();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8776</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8777</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outString();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8778</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outString( "&gt;&gt; Loaded 0 vehicle seat data" );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8779</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("`vehicle_seat_data` table is empty!");</ins> </td>
                  </tr><tr>
                          <th> </th><th>8780</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8781</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8782</th><td class="r"><ins>&nbsp; &nbsp; uint32 count = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8783</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8784</th><td class="r"><ins>&nbsp; &nbsp; barGoLink bar( result-&gt;GetRowCount() );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8785</th><td class="r"><ins>&nbsp; &nbsp; do</ins> </td>
                  </tr><tr>
                          <th> </th><th>8786</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8787</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bar.step();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8788</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8789</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Field *fields = result-&gt;Fetch();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8790</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 entry&nbsp; = fields[0].GetUInt32();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8791</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 flag&nbsp; &nbsp;= fields[1].GetUInt32();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8792</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8793</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleSeatEntry const *vsInfo = sVehicleSeatStore.LookupEntry(entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8794</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(!vsInfo)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8795</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>8796</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Vehicle seat %u listed in `vehicle_seat_data` does not exist",entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8797</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8798</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8799</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8800</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; mVehicleSeatData[entry] = flag;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8801</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ++count;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8802</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>8803</th><td class="r"><ins>&nbsp; &nbsp; while (result-&gt;NextRow());</ins> </td>
                  </tr><tr>
                          <th> </th><th>8804</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8805</th><td class="r"><ins>&nbsp; &nbsp; delete result;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8806</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8807</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString();</ins> </td>
                  </tr><tr>
                          <th> </th><th>8808</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString( "&gt;&gt; Loaded %u vehicle seat data", count );</ins> </td>
                  </tr><tr>
                          <th> </th><th>8809</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>8810</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8595</th><th>8811</th><td class="l"><span>Quest const* GetQuestTemplateStore(uint32 entry)</span> </td>
                  </tr><tr>
                          <th>8596</th><th>8812</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>8597</th><th>8813</th><td class="l"><span>&nbsp; &nbsp; return sObjectMgr.GetQuestTemplate(entry);</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/ObjectMgr.h</a>
        </h2>
        <pre>diff --git a/src/game/ObjectMgr.h b/src/game/ObjectMgr.h
index e565570..686b3ad 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/ObjectMgr.h">
                      a
                  </th>
                  <th title="File b/src/game/ObjectMgr.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>371</th><th>371</th><td class="l"><span>MANGOS_DLL_SPEC LanguageDesc const* GetLanguageDescByID(uint32 lang);</span> </td>
                  </tr><tr>
                          <th>372</th><th>372</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>373</th><th>373</th><td class="l"><span>class PlayerDumpReader;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>374</th><td class="r"><ins>// vehicle system</ins> </td>
                  </tr><tr>
                          <th> </th><th>375</th><td class="r"><ins>#define MAX_VEHICLE_SPELLS 6</ins> </td>
                  </tr><tr>
                          <th> </th><th>376</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>377</th><td class="r"><ins>struct VehicleDataStructure</ins> </td>
                  </tr><tr>
                          <th> </th><th>378</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>379</th><td class="r"><ins>&nbsp; &nbsp; uint32 v_flags;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle flags, see enum CustomVehicleFLags</ins> </td>
                  </tr><tr>
                          <th> </th><th>380</th><td class="r"><ins>&nbsp; &nbsp; uint32 v_spells[MAX_VEHICLE_SPELLS];&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // spells</ins> </td>
                  </tr><tr>
                          <th> </th><th>381</th><td class="r"><ins>&nbsp; &nbsp; uint32 req_aura;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // requieres aura on player to enter (eg. in wintergrasp)</ins> </td>
                  </tr><tr>
                          <th> </th><th>382</th><td class="r"><ins>};</ins> </td>
                  </tr><tr>
                          <th> </th><th>383</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>384</th><td class="r"><ins>typedef UNORDERED_MAP&lt;uint32, VehicleDataStructure&gt; VehicleDataMap;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>385</th><td class="r"><ins>typedef std::map&lt;uint32,uint32&gt; VehicleSeatDataMap;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>374</th><th>386</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>375</th><th>387</th><td class="l"><span>class ObjectMgr</span> </td>
                  </tr><tr>
                          <th>376</th><th>388</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L638">…</a></th>
                  <th><a href="#L650">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>638</th><th>650</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void LoadVendors();</span> </td>
                  </tr><tr>
                          <th>639</th><th>651</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void LoadTrainerSpell();</span> </td>
                  </tr><tr>
                          <th>640</th><th>652</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>653</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void LoadVehicleData();</ins> </td>
                  </tr><tr>
                          <th> </th><th>654</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void LoadVehicleSeatData();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>655</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>641</th><th>656</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; std::string GeneratePetName(uint32 entry);</span> </td>
                  </tr><tr>
                          <th>642</th><th>657</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetBaseXP(uint32 level) const;</span> </td>
                  </tr><tr>
                          <th>643</th><th>658</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetXPForLevel(uint32 level) const;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L866">…</a></th>
                  <th><a href="#L881">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>866</th><th>881</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>867</th><th>882</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; int GetOrNewIndexForLocale(LocaleConstant loc);</span> </td>
                  </tr><tr>
                          <th>868</th><th>883</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>884</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleDataMap mVehicleData;</ins> </td>
                  </tr><tr>
                          <th> </th><th>885</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleSeatDataMap mVehicleSeatData;</ins> </td>
                  </tr><tr>
                          <th> </th><th>886</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>887</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetSeatFlags(uint32 seatid)</ins> </td>
                  </tr><tr>
                          <th> </th><th>888</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>889</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; VehicleSeatDataMap::iterator i = mVehicleSeatData.find(seatid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>890</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i == mVehicleSeatData.end())</ins> </td>
                  </tr><tr>
                          <th> </th><th>891</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>892</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>893</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return i-&gt;second;</ins> </td>
                  </tr><tr>
                          <th> </th><th>894</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>895</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleDataStructure const* GetVehicleData(uint32 entry) const</ins> </td>
                  </tr><tr>
                          <th> </th><th>896</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>897</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; VehicleDataMap::const_iterator itr = mVehicleData.find(entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>898</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(itr==mVehicleData.end()) return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>899</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return &amp;itr-&gt;second;</ins> </td>
                  </tr><tr>
                          <th> </th><th>900</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>901</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>869</th><th>902</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; SpellClickInfoMapBounds GetSpellClickInfoMapBounds(uint32 creature_id) const</span> </td>
                  </tr><tr>
                          <th>870</th><th>903</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>871</th><th>904</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return SpellClickInfoMapBounds(mSpellClickInfoMap.lower_bound(creature_id),mSpellClickInfoMap.upper_bound(creature_id));</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L901">…</a></th>
                  <th><a href="#L934">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>901</th><th>934</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // first free low guid for selected guid type</span> </td>
                  </tr><tr>
                          <th>902</th><th>935</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiCharGuid;</span> </td>
                  </tr><tr>
                          <th>903</th><th>936</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiCreatureGuid;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>937</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiVehicleGuid;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>904</th><th>938</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiItemGuid;</span> </td>
                  </tr><tr>
                          <th>905</th><th>939</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiGoGuid;</span> </td>
                  </tr><tr>
                          <th>906</th><th>940</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_hiCorpseGuid;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L960">…</a></th>
                  <th><a href="#L994">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>960</th><th>994</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void CheckScripts(ScriptMapMap const&amp; scripts,std::set&lt;int32&gt;&amp; ids);</span> </td>
                  </tr><tr>
                          <th>961</th><th>995</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void LoadCreatureAddons(SQLStorage&amp; creatureaddons, char const* entryName, char const* comment);</span> </td>
                  </tr><tr>
                          <th>962</th><th>996</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void ConvertCreatureAddonAuras(CreatureDataAddon* addon, char const* table, char const* guidEntryStr);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>997</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void ConvertCreatureAddonPassengers(CreatureDataAddon* addon, char const* table, char const* guidEntryStr);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>963</th><th>998</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void LoadQuestRelationsHelper(QuestRelations&amp; map,char const* table);</span> </td>
                  </tr><tr>
                          <th>964</th><th>999</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>965</th><th>1000</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; MailLevelRewardMap m_mailLevelRewardMap;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Opcodes.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Opcodes.cpp b/src/game/Opcodes.cpp
index 8d84bd2..c2be94d 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Opcodes.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Opcodes.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>1168</th><th>1168</th><td class="l"><span>&nbsp; &nbsp; /*0x473*/ { "CMSG_CHAR_CUSTOMIZE",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_AUTHED,&nbsp; &nbsp;&amp;WorldSession::HandleCharCustomize&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr><tr>
                          <th>1169</th><th>1169</th><td class="l"><span>&nbsp; &nbsp; /*0x474*/ { "SMSG_CHAR_CUSTOMIZE",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr><tr>
                          <th>1170</th><th>1170</th><td class="l"><span>&nbsp; &nbsp; /*0x475*/ { "SMSG_PET_RENAMEABLE",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1171</th><th> </th><td class="l"><span>&nbsp; &nbsp; /*0x476*/ { "CMSG_REQUEST_VEHICLE_EXIT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_<del>NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_NULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>&nbsp; &nbsp; &nbsp; &nbsp; },</span> </td>
                      </tr><tr>
                        <th>1172</th><th> </th><td class="l"><span>&nbsp; &nbsp; /*0x477*/ { "CMSG_REQUEST_VEHICLE_PREV_SEAT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_<del>NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_NULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>&nbsp; &nbsp; },</span> </td>
                      </tr><tr>
                        <th>1173</th><th> </th><td class="l"><span>&nbsp; &nbsp; /*0x478*/ { "CMSG_REQUEST_VEHICLE_NEXT_SEAT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_<del>NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_NULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>&nbsp; &nbsp; },</span> </td>
                      </tr><tr>
                        <th>1174</th><th> </th><td class="l"><span>&nbsp; &nbsp; /*0x479*/ { "CMSG_REQUEST_VEHICLE_SWITCH_SEAT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_<del>NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_NULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>&nbsp; },</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>1171</th><td class="r"><span>&nbsp; &nbsp; /*0x476*/ { "CMSG_REQUEST_VEHICLE_EXIT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_<ins>LOGGEDIN, &amp;WorldSession::HandleRequestVehicleExit</ins>&nbsp; &nbsp; &nbsp; &nbsp; },</span> </td>
                      </tr><tr>
                        <th> </th><th>1172</th><td class="r"><span>&nbsp; &nbsp; /*0x477*/ { "CMSG_REQUEST_VEHICLE_PREV_SEAT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_<ins>LOGGEDIN, &amp;WorldSession::HandleRequestVehiclePrevSeat</ins>&nbsp; &nbsp; },</span> </td>
                      </tr><tr>
                        <th> </th><th>1173</th><td class="r"><span>&nbsp; &nbsp; /*0x478*/ { "CMSG_REQUEST_VEHICLE_NEXT_SEAT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_<ins>LOGGEDIN, &amp;WorldSession::HandleRequestVehicleNextSeat</ins>&nbsp; &nbsp; },</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>1174</th><td class="r"><span>&nbsp; &nbsp; /*0x479*/ { "CMSG_REQUEST_VEHICLE_SWITCH_SEAT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_<ins>LOGGEDIN, &amp;WorldSession::HandleRequestVehicleSwitchSeat</ins>&nbsp; },</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1175</th><th>1175</th><td class="l"><span>&nbsp; &nbsp; /*0x47A*/ { "CMSG_PET_LEARN_TALENT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_LOGGEDIN, &amp;WorldSession::HandlePetLearnTalent&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },</span> </td>
                  </tr><tr>
                          <th>1176</th><th>1176</th><td class="l"><span>&nbsp; &nbsp; /*0x47B*/ { "CMSG_PET_UNLEARN_TALENTS",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_NULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr><tr>
                          <th>1177</th><th>1177</th><td class="l"><span>&nbsp; &nbsp; /*0x47C*/ { "SMSG_SET_PHASE_SHIFT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1205">…</a></th>
                  <th><a href="#L1205">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1205</th><th>1205</th><td class="l"><span>&nbsp; &nbsp; /*0x498*/ { "SMSG_SERVER_FIRST_ACHIEVEMENT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr><tr>
                          <th>1206</th><th>1206</th><td class="l"><span>&nbsp; &nbsp; /*0x499*/ { "SMSG_PET_LEARNED_SPELL",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr><tr>
                          <th>1207</th><th>1207</th><td class="l"><span>&nbsp; &nbsp; /*0x49A*/ { "SMSG_PET_REMOVED_SPELL",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1208</th><th> </th><td class="l"><span>&nbsp; &nbsp; /*0x49B*/ { "CMSG_CHANGE_SEATS_ON_CONTROLLED_VEHICLE",&nbsp; &nbsp; &nbsp; STATUS_<del>NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_NULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</del>},</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>1208</th><td class="r"><span>&nbsp; &nbsp; /*0x49B*/ { "CMSG_CHANGE_SEATS_ON_CONTROLLED_VEHICLE",&nbsp; &nbsp; &nbsp; STATUS_<ins>LOGGEDIN, &amp;WorldSession::HandleChangeSeatsOnControlledVehicle</ins>},</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1209</th><th>1209</th><td class="l"><span>&nbsp; &nbsp; /*0x49C*/ { "CMSG_HEARTH_AND_RESURRECT",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_LOGGEDIN, &amp;WorldSession::HandleHearthandResurrect&nbsp; &nbsp; &nbsp; &nbsp; },</span> </td>
                  </tr><tr>
                          <th>1210</th><th>1210</th><td class="l"><span>&nbsp; &nbsp; /*0x49D*/ { "SMSG_ON_CANCEL_EXPECTED_RIDE_VEHICLE_AURA",&nbsp; &nbsp; STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr><tr>
                          <th>1211</th><th>1211</th><td class="l"><span>&nbsp; &nbsp; /*0x49E*/ { "SMSG_CRITERIA_DELETED",&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; STATUS_NEVER,&nbsp; &nbsp; &amp;WorldSession::Handle_ServerSide&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;},</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Pet.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Pet.cpp b/src/game/Pet.cpp
index 9881020..294439b 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Pet.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Pet.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>39</th><th>39</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>40</th><th>40</th><td class="l"><span>Pet::Pet(PetType type) :</span> </td>
                  </tr><tr>
                          <th>41</th><th>41</th><td class="l"><span>Creature(CREATURE_SUBTYPE_PET), m_removed(false), m_petType(type), m_happinessTimer(7500), m_duration(0), m_resetTalentsCost(0),</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>42</th><th> </th><td class="l"><span>m_bonusdamage(0), m_resetTalentsTime(0), m_usedTalentCount(0), m_<del>auraUpdateMask(0), m_</del>loading(false),</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>42</th><td class="r"><span>m_bonusdamage(0), m_resetTalentsTime(0), m_usedTalentCount(0), m_<ins></ins>loading(false),</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>43</th><th>43</th><td class="l"><span>m_declinedname(NULL), m_petModeFlags(PET_MODE_DEFAULT)</span> </td>
                  </tr><tr>
                          <th>44</th><th>44</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>45</th><th>45</th><td class="l"><span>&nbsp; &nbsp; m_name = "Pet";</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Pet.h</a>
        </h2>
        <pre>diff --git a/src/game/Pet.h b/src/game/Pet.h
index 2e35117..c811825 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Pet.h">
                      a
                  </th>
                  <th title="File b/src/game/Pet.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>235</th><th>235</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; time_t&nbsp; m_resetTalentsTime;</span> </td>
                  </tr><tr>
                          <th>236</th><th>236</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32&nbsp; m_usedTalentCount;</span> </td>
                  </tr><tr>
                          <th>237</th><th>237</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>238</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; const uint64&amp; GetAuraUpdateMask() const { return m_auraUpdateMask; }</del> </td>
                  </tr><tr>
                          <th>239</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; void SetAuraUpdateMask(uint8 slot) { m_auraUpdateMask |= (uint64(1) &lt;&lt; slot); }</del> </td>
                  </tr><tr>
                          <th>240</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; void ResetAuraUpdateMask() { m_auraUpdateMask = 0; }</del> </td>
                  </tr><tr class="last">
                          <th>241</th><th> </th><td class="l"><del></del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>242</th><th>238</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // overwrite Creature function for name localization back to WorldObject version without localization</span> </td>
                  </tr><tr>
                          <th>243</th><th>239</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; const char* GetNameForLocaleIdx(int32 locale_idx) const { return WorldObject::GetNameForLocaleIdx(locale_idx); }</span> </td>
                  </tr><tr>
                          <th>244</th><th>240</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L250">…</a></th>
                  <th><a href="#L246">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>250</th><th>246</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; PetType m_petType;</span> </td>
                  </tr><tr>
                          <th>251</th><th>247</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; int32&nbsp; &nbsp;m_duration;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// time until unsummon (used mostly for summoned guardians and not used for controlled pets)</span> </td>
                  </tr><tr>
                          <th>252</th><th>248</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; int32&nbsp; &nbsp;m_bonusdamage;</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>253</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; uint64&nbsp; m_auraUpdateMask;</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>254</th><th>249</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool&nbsp; &nbsp; m_loading;</span> </td>
                  </tr><tr>
                          <th>255</th><th>250</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>256</th><th>251</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; DeclinedName *m_declinedname;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/PetHandler.cpp</a>
        </h2>
        <pre>diff --git a/src/game/PetHandler.cpp b/src/game/PetHandler.cpp
index 9ae70b7..652ed9c 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/PetHandler.cpp">
                      a
                  </th>
                  <th title="File b/src/game/PetHandler.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>286</th><th>286</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>287</th><th>287</th><td class="l"><span>void WorldSession::SendPetNameQuery( uint64 petguid, uint32 petnumber)</span> </td>
                  </tr><tr>
                          <th>288</th><th>288</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>289</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature* pet = <del>_player-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(</del>petguid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>289</th><td class="r"><span>&nbsp; &nbsp; Creature* pet = <ins>ObjectAccessor::GetCreatureOrPetOrVehicle(*_player, </ins>petguid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>290</th><th>290</th><td class="l"><span>&nbsp; &nbsp; if(!pet || !pet-&gt;GetCharmInfo() || pet-&gt;GetCharmInfo()-&gt;GetPetNumber() != petnumber)</span> </td>
                  </tr><tr>
                          <th>291</th><th>291</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>292</th><th>292</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L318">…</a></th>
                  <th><a href="#L318">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>318</th><th>318</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>319</th><th>319</th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; petguid;</span> </td>
                  </tr><tr>
                          <th>320</th><th>320</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>321</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature* pet = _player-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(petguid);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>321</th><td class="r"><span>&nbsp; &nbsp; // FIXME: charmed case</span> </td>
                      </tr><tr>
                        <th> </th><th>322</th><td class="r"><span>&nbsp; &nbsp; //Pet* pet = ObjectAccessor::Instance().GetPet(petguid);</span> </td>
                      </tr><tr>
                        <th> </th><th>323</th><td class="r"><span>&nbsp; &nbsp; if(ObjectAccessor::FindPlayer(petguid))</span> </td>
                      </tr><tr>
                        <th> </th><th>324</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>325</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>326</th><td class="r"><span>&nbsp; &nbsp; Creature* pet = ObjectAccessor::GetCreatureOrPetOrVehicle(*_player, petguid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>322</th><th>327</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>323</th><th>328</th><td class="l"><span>&nbsp; &nbsp; if(!pet || (pet != _player-&gt;GetPet() &amp;&amp; pet != _player-&gt;GetCharm()))</span> </td>
                  </tr><tr>
                          <th>324</th><th>329</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L506">…</a></th>
                  <th><a href="#L511">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>506</th><th>511</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>507</th><th>512</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>508</th><th>513</th><td class="l"><span>&nbsp; &nbsp; // pet/charmed</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>509</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (Creature* pet = _player-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(guid))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>514</th><td class="r"><span>&nbsp; &nbsp; Creature* pet = ObjectAccessor::GetCreatureOrPetOrVehicle(*_player, guid);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>515</th><td class="r"><span>&nbsp; &nbsp; if(pet)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>510</th><th>516</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>511</th><th>517</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isPet())</span> </td>
                  </tr><tr>
                          <th>512</th><th>518</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L560">…</a></th>
                  <th><a href="#L566">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>560</th><th>566</th><td class="l"><span>&nbsp; &nbsp; uint8&nbsp; state;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//1 for on, 0 for off</span> </td>
                  </tr><tr>
                          <th>561</th><th>567</th><td class="l"><span>&nbsp; &nbsp; recvPacket &gt;&gt; guid &gt;&gt; spellid &gt;&gt; state;</span> </td>
                  </tr><tr>
                          <th>562</th><th>568</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>563</th><th> </th><td class="l"><span>&nbsp; &nbsp; if<del></del>(!_player-&gt;GetPet() &amp;&amp; !_player-&gt;GetCharm())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>569</th><td class="r"><span>&nbsp; &nbsp; if<ins>&nbsp;</ins>(!_player-&gt;GetPet() &amp;&amp; !_player-&gt;GetCharm())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>564</th><th>570</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>565</th><th>571</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>566</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature* pet = _player-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(guid);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>572</th><td class="r"><span>&nbsp; &nbsp; if(ObjectAccessor::FindPlayer(guid))</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>573</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>567</th><th>574</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>568</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(!pet || (pet != _player-&gt;GetPet() &amp;&amp; pet != _player-&gt;GetCharm()))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>575</th><td class="r"><span>&nbsp; &nbsp; Creature* pet=ObjectAccessor::GetCreatureOrPetOrVehicle(*_player,guid);</span> </td>
                      </tr><tr>
                        <th> </th><th>576</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>577</th><td class="r"><span>&nbsp; &nbsp; if (!pet || (pet != _player-&gt;GetPet() &amp;&amp; pet != _player-&gt;GetCharm()))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>569</th><th>578</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>570</th><th>579</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outError( "HandlePetSpellAutocastOpcode.Pet %u isn't pet of player %s .", uint32(GUID_LOPART(guid)),GetPlayer()-&gt;GetName() );</span> </td>
                  </tr><tr>
                          <th>571</th><th>580</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>572</th><th>581</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>573</th><th>582</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>574</th><th>583</th><td class="l"><span>&nbsp; &nbsp; // do not add not learned spells/ passive spells</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>575</th><th> </th><td class="l"><span>&nbsp; &nbsp; if<del></del>(!pet-&gt;HasSpell(spellid) || IsPassiveSpell(spellid))</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>584</th><td class="r"><span>&nbsp; &nbsp; if<ins>&nbsp;</ins>(!pet-&gt;HasSpell(spellid) || IsPassiveSpell(spellid))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>576</th><th>585</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>577</th><th>586</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>578</th><th>587</th><td class="l"><span>&nbsp; &nbsp; CharmInfo *charmInfo = pet-&gt;GetCharmInfo();</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>579</th><th> </th><td class="l"><span>&nbsp; &nbsp; if<del></del>(!charmInfo)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>588</th><td class="r"><span>&nbsp; &nbsp; if<ins>&nbsp;</ins>(!charmInfo)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>580</th><th>589</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>581</th><th>590</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("WorldSession::HandlePetSpellAutocastOpcod: object (GUID: %u TypeId: %u) is considered pet-like but doesn't have a charminfo!", pet-&gt;GetGUIDLow(), pet-&gt;GetTypeId());</span> </td>
                  </tr><tr>
                          <th>582</th><th>591</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>583</th><th>592</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>584</th><th>593</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>585</th><th> </th><td class="l"><span>&nbsp; &nbsp; if<del></del>(pet-&gt;isCharmed())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>594</th><td class="r"><span>&nbsp; &nbsp; if<ins>&nbsp;</ins>(pet-&gt;isCharmed())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>586</th><th>595</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //state can be used as boolean</span> </td>
                  </tr><tr>
                          <th>587</th><th>596</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; pet-&gt;GetCharmInfo()-&gt;ToggleCreatureAutocast(spellid, state);</span> </td>
                  </tr><tr>
                          <th>588</th><th>597</th><td class="l"><span>&nbsp; &nbsp; else</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L607">…</a></th>
                  <th><a href="#L616">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>607</th><th>616</th><td class="l"><span>&nbsp; &nbsp; if (!_player-&gt;GetPet() &amp;&amp; !_player-&gt;GetCharm())</span> </td>
                  </tr><tr>
                          <th>608</th><th>617</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>609</th><th>618</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>610</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature* pet = _player-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(guid);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>619</th><td class="r"><span>&nbsp; &nbsp; if (GUID_HIPART(guid) == HIGHGUID_PLAYER)</span> </td>
                      </tr><tr>
                        <th> </th><th>620</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>621</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>622</th><td class="r"><span>&nbsp; &nbsp; Creature* pet = ObjectAccessor::GetCreatureOrPetOrVehicle(*_player,guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>611</th><th>623</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>612</th><th>624</th><td class="l"><span>&nbsp; &nbsp; if (!pet || (pet != _player-&gt;GetPet() &amp;&amp; pet!= _player-&gt;GetCharm()))</span> </td>
                  </tr><tr>
                          <th>613</th><th>625</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Player.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Player.cpp b/src/game/Player.cpp
index 994d669..36989aa 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Player.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Player.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>363</th><th>363</th><td class="l"><span>&nbsp; &nbsp; // group is initialized in the reference constructor</span> </td>
                  </tr><tr>
                          <th>364</th><th>364</th><td class="l"><span>&nbsp; &nbsp; SetGroupInvite(NULL);</span> </td>
                  </tr><tr>
                          <th>365</th><th>365</th><td class="l"><span>&nbsp; &nbsp; m_groupUpdateMask = 0;</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>366</th><th> </th><td class="l"><del>&nbsp; &nbsp; m_auraUpdateMask = 0;</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>367</th><th>366</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>368</th><th>367</th><td class="l"><span>&nbsp; &nbsp; duel = NULL;</span> </td>
                  </tr><tr>
                          <th>369</th><th>368</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L489">…</a></th>
                  <th><a href="#L488">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>489</th><th>488</th><td class="l"><span>&nbsp; &nbsp; m_summon_z = 0.0f;</span> </td>
                  </tr><tr>
                          <th>490</th><th>489</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>491</th><th>490</th><td class="l"><span>&nbsp; &nbsp; m_mover = this;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>491</th><td class="r"><ins>&nbsp; &nbsp; m_mover_in_queve = NULL;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>492</th><th>492</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>493</th><th>493</th><td class="l"><span>&nbsp; &nbsp; m_miniPet = 0;</span> </td>
                  </tr><tr>
                          <th>494</th><th>494</th><td class="l"><span>&nbsp; &nbsp; m_contestedPvPTimer = 0;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1651">…</a></th>
                  <th><a href="#L1651">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1651</th><th>1651</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_transport = NULL;</span> </td>
                  </tr><tr>
                          <th>1652</th><th>1652</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_movementInfo.SetTransportData(0, 0.0f, 0.0f, 0.0f, 0.0f, 0, -1);</span> </td>
                  </tr><tr>
                          <th>1653</th><th>1653</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>1654</th><td class="r"><ins>&nbsp; &nbsp; ExitVehicle();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1654</th><th>1655</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1655</th><th>1656</th><td class="l"><span>&nbsp; &nbsp; // The player was ported to another map and looses the duel immediately.</span> </td>
                  </tr><tr>
                          <th>1656</th><th>1657</th><td class="l"><span>&nbsp; &nbsp; // We have to perform this check before the teleport, otherwise the</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L2131">…</a></th>
                  <th><a href="#L2132">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>2131</th><th>2132</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</span> </td>
                  </tr><tr>
                          <th>2132</th><th>2133</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>2133</th><th>2134</th><td class="l"><span>&nbsp; &nbsp; // exist (we need look pets also for some interaction (quest/etc)</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>2134</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature *unit = <del>GetMap()-&gt;GetCreatureOrPetOrVehicle(</del>guid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>2135</th><td class="r"><span>&nbsp; &nbsp; Creature *unit = <ins>ObjectAccessor::GetCreatureOrPetOrVehicle(*this,</ins>guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2135</th><th>2136</th><td class="l"><span>&nbsp; &nbsp; if (!unit)</span> </td>
                  </tr><tr>
                          <th>2136</th><th>2137</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</span> </td>
                  </tr><tr>
                          <th>2137</th><th>2138</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L7887">…</a></th>
                  <th><a href="#L7888">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>7887</th><th>7888</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case 3703:</span> </td>
                  </tr><tr>
                          <th>7888</th><th>7889</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NumberOfFields = 11;</span> </td>
                  </tr><tr>
                          <th>7889</th><th>7890</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>7891</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 4384:</ins> </td>
                  </tr><tr>
                          <th> </th><th>7892</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NumberOfFields = 30;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>7893</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>7890</th><th>7894</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; default:</span> </td>
                  </tr><tr>
                          <th>7891</th><th>7895</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NumberOfFields = 12;</span> </td>
                  </tr><tr>
                          <th>7892</th><th>7896</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L8205">…</a></th>
                  <th><a href="#L8209">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>8205</th><th>8209</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>8206</th><th>8210</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case 3703:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Shattrath City</span> </td>
                  </tr><tr>
                          <th>8207</th><th>8211</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>8212</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 4384:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // SA</ins> </td>
                  </tr><tr>
                          <th> </th><th>8213</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*if (bg &amp;&amp; bg-&gt;GetTypeID() == BATTLEGROUND_SA)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8214</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bg-&gt;FillInitialWorldStates(data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>8215</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>8216</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>8217</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 1-3 A defend, 4-6 H defend, 7-9 unk defend, 1 - ok, 2 - half destroyed, 3 - destroyed</ins> </td>
                  </tr><tr>
                          <th> </th><th>8218</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xf09) &lt;&lt; uint32(0x4);&nbsp; &nbsp; &nbsp; &nbsp;// 7&nbsp; 3849 Gate of Temple</ins> </td>
                  </tr><tr>
                          <th> </th><th>8219</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe36) &lt;&lt; uint32(0x4);&nbsp; &nbsp; &nbsp; &nbsp;// 8&nbsp; 3638 Gate of Yellow Moon</ins> </td>
                  </tr><tr>
                          <th> </th><th>8220</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe27) &lt;&lt; uint32(0x4);&nbsp; &nbsp; &nbsp; &nbsp;// 9&nbsp; 3623 Gate of Green Emerald</ins> </td>
                  </tr><tr>
                          <th> </th><th>8221</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe24) &lt;&lt; uint32(0x4);&nbsp; &nbsp; &nbsp; &nbsp;// 10 3620 Gate of Blue Sapphire</ins> </td>
                  </tr><tr>
                          <th> </th><th>8222</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe21) &lt;&lt; uint32(0x4);&nbsp; &nbsp; &nbsp; &nbsp;// 11 3617 Gate of Red Sun</ins> </td>
                  </tr><tr>
                          <th> </th><th>8223</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe1e) &lt;&lt; uint32(0x4);&nbsp; &nbsp; &nbsp; &nbsp;// 12 3614 Gate of Purple Ametyst</ins> </td>
                  </tr><tr>
                          <th> </th><th>8224</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8225</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xdf3) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 13 3571 bonus timer (1 - on, 0 - off)</ins> </td>
                  </tr><tr>
                          <th> </th><th>8226</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xded) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 14 3565 Horde Attacker</ins> </td>
                  </tr><tr>
                          <th> </th><th>8227</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xdec) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 15 3564 Alliance Attacker</ins> </td>
                  </tr><tr>
                          <th> </th><th>8228</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // End Round (timer), better explain this by example, eg. ends in 19:59 -&gt; A:BC</ins> </td>
                  </tr><tr>
                          <th> </th><th>8229</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xde9) &lt;&lt; uint32(0x9);&nbsp; &nbsp; &nbsp; &nbsp;// 16 3561 C</ins> </td>
                  </tr><tr>
                          <th> </th><th>8230</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xde8) &lt;&lt; uint32(0x5);&nbsp; &nbsp; &nbsp; &nbsp;// 17 3560 B</ins> </td>
                  </tr><tr>
                          <th> </th><th>8231</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xde7) &lt;&lt; uint32(0x19);&nbsp; &nbsp; &nbsp; // 18 3559 A</ins> </td>
                  </tr><tr>
                          <th> </th><th>8232</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe35) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 19 3637 East g - Horde control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8233</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe34) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 20 3636 West g - Horde control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8234</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe33) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 21 3635 South g - Horde control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8235</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe32) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 22 3634 East g - Alliance control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8236</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe31) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 23 3633 West g - Alliance control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8237</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe30) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 24 3632 South g - Alliance control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8238</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe2f) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 25 3631 Chamber of Ancients - Horde control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8239</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe2e) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 26 3630 Chamber of Ancients - Alliance control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8240</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe2d) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 27 3629 Beach1 - Horde control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8241</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe2c) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp;// 28 3628 Beach2 - Horde control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8242</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe2b) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 29 3627 Beach1 - Alliance control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8243</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0xe2a) &lt;&lt; uint32(0x1);&nbsp; &nbsp; &nbsp; &nbsp;// 30 3626 Beach2 - Alliance control</ins> </td>
                  </tr><tr>
                          <th> </th><th>8244</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // and many unks...</ins> </td>
                  </tr><tr>
                          <th> </th><th>8245</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>8246</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8208</th><th>8247</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; default:</span> </td>
                  </tr><tr>
                          <th>8209</th><th>8248</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0x914) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 7</span> </td>
                  </tr><tr>
                          <th>8210</th><th>8249</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0x913) &lt;&lt; uint32(0x0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 8</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L12761">…</a></th>
                  <th><a href="#L12800">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>12761</th><th>12800</th><td class="l"><span>&nbsp; &nbsp; QuestRelations* pObjectQIR;</span> </td>
                  </tr><tr>
                          <th>12762</th><th>12801</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>12763</th><th>12802</th><td class="l"><span>&nbsp; &nbsp; // pets also can have quests</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12764</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (Creature *pCreature = GetMap()-&gt;GetCreatureOrPetOrVehicle(guid))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>12803</th><td class="r"><span>&nbsp; &nbsp; Creature *pCreature = ObjectAccessor::GetCreatureOrPetOrVehicle(*this, guid);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>12804</th><td class="r"><span>&nbsp; &nbsp; if( pCreature )</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12765</th><th>12805</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>12766</th><th>12806</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; pObject = (Object*)pCreature;</span> </td>
                  </tr><tr>
                          <th>12767</th><th>12807</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; pObjectQR&nbsp; = &amp;sObjectMgr.mCreatureQuestRelations;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L12855">…</a></th>
                  <th><a href="#L12895">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>12855</th><th>12895</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; std::string title = "";</span> </td>
                  </tr><tr>
                          <th>12856</th><th>12896</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>12857</th><th>12897</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // need pet case for some quests</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12858</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (Creature *pCreature = GetMap()-&gt;GetCreatureOrPetOrVehicle(guid))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>12898</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; Creature *pCreature = ObjectAccessor::GetCreatureOrPetOrVehicle(*this,guid);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>12899</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (pCreature)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12859</th><th>12900</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>12860</th><th>12901</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uint32 textid = GetGossipTextId(pCreature);</span> </td>
                  </tr><tr>
                          <th>12861</th><th>12902</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L12919">…</a></th>
                  <th><a href="#L12960">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>12919</th><th>12960</th><td class="l"><span>&nbsp; &nbsp; QuestRelations* pObjectQR;</span> </td>
                  </tr><tr>
                          <th>12920</th><th>12961</th><td class="l"><span>&nbsp; &nbsp; QuestRelations* pObjectQIR;</span> </td>
                  </tr><tr>
                          <th>12921</th><th>12962</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12922</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (Creature *pCreature = GetMap()-&gt;GetCreatureOrPetOrVehicle(guid))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>12963</th><td class="r"><span>&nbsp; &nbsp; Creature *pCreature = ObjectAccessor::GetCreatureOrPetOrVehicle(*this,guid);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>12964</th><td class="r"><span>&nbsp; &nbsp; if( pCreature )</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12923</th><th>12965</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>12924</th><th>12966</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; pObject = (Object*)pCreature;</span> </td>
                  </tr><tr>
                          <th>12925</th><th>12967</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; pObjectQR&nbsp; = &amp;sObjectMgr.mCreatureQuestRelations;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L17675">…</a></th>
                  <th><a href="#L17717">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>17675</th><th>17717</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // target aura duration for caster show only if target exist at caster client</span> </td>
                  </tr><tr>
                          <th>17676</th><th>17718</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // send data at target visibility change (adding to client)</span> </td>
                  </tr><tr>
                          <th>17677</th><th>17719</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if((*i)!=this &amp;&amp; (*i)-&gt;isType(TYPEMASK_UNIT))</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>17720</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>17678</th><th>17721</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SendAurasForTarget(*i);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>17722</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BuildVehicleInfo(*i);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>17723</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>17679</th><th>17724</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>17680</th><th>17725</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>17681</th><th>17726</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L17710">…</a></th>
                  <th><a href="#L17755">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>17710</th><th>17755</th><td class="l"><span>&nbsp; &nbsp; if(npc)</span> </td>
                  </tr><tr>
                          <th>17711</th><th>17756</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>17712</th><th>17757</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // not let cheating with start flight mounted</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>17713</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(IsMounted()<del></del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>17758</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(IsMounted()<ins>&nbsp;|| GetVehicleGUID()</ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>17714</th><th>17759</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>17715</th><th>17760</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data(SMSG_ACTIVATETAXIREPLY, 4);</span> </td>
                  </tr><tr>
                          <th>17716</th><th>17761</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(ERR_TAXIPLAYERALREADYMOUNTED);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L17739">…</a></th>
                  <th><a href="#L17784">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>17739</th><th>17784</th><td class="l"><span>&nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>17740</th><th>17785</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>17741</th><th>17786</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; RemoveSpellsCausingAura(SPELL_AURA_MOUNTED);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>17787</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ExitVehicle();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>17742</th><th>17788</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>17743</th><th>17789</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if( m_ShapeShiftFormSpellId &amp;&amp; m_form != FORM_BATTLESTANCE &amp;&amp; m_form != FORM_BERSERKERSTANCE &amp;&amp; m_form != FORM_DEFENSIVESTANCE &amp;&amp; m_form != FORM_SHADOW )</span> </td>
                  </tr><tr>
                          <th>17744</th><th>17790</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RemoveAurasDueToSpell(m_ShapeShiftFormSpellId);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L18864">…</a></th>
                  <th><a href="#L18910">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>18864</th><th>18910</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // target aura duration for caster show only if target exist at caster client</span> </td>
                  </tr><tr>
                          <th>18865</th><th>18911</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // send data at target visibility change (adding to client)</span> </td>
                  </tr><tr>
                          <th>18866</th><th>18912</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(target!=this &amp;&amp; target-&gt;isType(TYPEMASK_UNIT))</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>18913</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>18867</th><th>18914</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SendAurasForTarget((Unit*)target);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>18915</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BuildVehicleInfo((Unit*)target);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>18916</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>18868</th><th>18917</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>18869</th><th>18918</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(target-&gt;GetTypeId()==TYPEID_UNIT &amp;&amp; ((Creature*)target)-&gt;isAlive())</span> </td>
                  </tr><tr>
                          <th>18870</th><th>18919</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Creature*)target)-&gt;SendMonsterMoveWithSpeedToCurrentDestination(this);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L18933">…</a></th>
                  <th><a href="#L18982">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>18933</th><th>18982</th><td class="l"><span>void Player::SendComboPoints()</span> </td>
                  </tr><tr>
                          <th>18934</th><th>18983</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>18935</th><th>18984</th><td class="l"><span>&nbsp; &nbsp; Unit *combotarget = ObjectAccessor::GetUnit(*this, m_comboTarget);</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>18936</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del></del>if (combotarget)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>18985</th><td class="r"><span>&nbsp; &nbsp; <ins>/*</ins>if (combotarget)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>18937</th><th>18986</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>18938</th><th>18987</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data(SMSG_UPDATE_COMBO_POINTS, combotarget-&gt;GetPackGUID().size()+1);</span> </td>
                  </tr><tr>
                          <th>18939</th><th>18988</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; combotarget-&gt;GetPackGUID();</span> </td>
                  </tr><tr>
                          <th>18940</th><th>18989</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint8(m_comboPoints);</span> </td>
                  </tr><tr>
                          <th>18941</th><th>18990</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; GetSession()-&gt;SendPacket(&amp;data);</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>18942</th><th> </th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>18991</th><td class="r"><span>&nbsp; &nbsp; }*/</span> </td>
                      </tr><tr>
                        <th> </th><th>18992</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>18993</th><td class="r"><span>&nbsp; &nbsp; if (!combotarget)</span> </td>
                      </tr><tr>
                        <th> </th><th>18994</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>18995</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>18996</th><td class="r"><span>&nbsp; &nbsp; WorldPacket data;</span> </td>
                      </tr><tr>
                        <th> </th><th>18997</th><td class="r"><span>&nbsp; &nbsp; if(!GetVehicleGUID())</span> </td>
                      </tr><tr>
                        <th> </th><th>18998</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; data.Initialize(SMSG_UPDATE_COMBO_POINTS, combotarget-&gt;GetPackGUID().size()+1);</span> </td>
                      </tr><tr>
                        <th> </th><th>18999</th><td class="r"><span>&nbsp; &nbsp; else{</span> </td>
                      </tr><tr>
                        <th> </th><th>19000</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp;if(Unit *vehicle = ObjectAccessor::GetUnit(*this, GetVehicleGUID()))</span> </td>
                      </tr><tr>
                        <th> </th><th>19001</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp;{</span> </td>
                      </tr><tr>
                        <th> </th><th>19002</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;data.Initialize(SMSG_PET_UPDATE_COMBO_POINTS, vehicle-&gt;GetPackGUID().size()+combotarget-&gt;GetPackGUID().size()+1);</span> </td>
                      </tr><tr>
                        <th> </th><th>19003</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;data &lt;&lt; vehicle-&gt;GetPackGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>19004</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp;}else return;</span> </td>
                      </tr><tr>
                        <th> </th><th>19005</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>19006</th><td class="r"><span>&nbsp; &nbsp; data &lt;&lt; combotarget-&gt;GetPackGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>19007</th><td class="r"><span>&nbsp; &nbsp; data &lt;&lt; uint8(m_comboPoints);</span> </td>
                      </tr><tr>
                        <th> </th><th>19008</th><td class="r"><span>&nbsp; &nbsp; GetSession()-&gt;SendPacket(&amp;data);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>19009</th><td class="r"><span></span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>18943</th><th>19010</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>18944</th><th>19011</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>18945</th><th>19012</th><td class="l"><span>void Player::AddComboPoints(Unit* target, int8 count)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19058">…</a></th>
                  <th><a href="#L19125">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19058</th><th>19125</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_movementInfo.AddMovementFlag(MOVEFLAG_FLYING);</span> </td>
                  </tr><tr>
                          <th>19059</th><th>19126</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19060</th><th>19127</th><td class="l"><span>&nbsp; &nbsp; m_mover = this;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>19128</th><td class="r"><ins>&nbsp; &nbsp; m_mover_in_queve = NULL;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19061</th><th>19129</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>19062</th><th>19130</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19063</th><th>19131</th><td class="l"><span>void Player::SendInitialPacketsAfterAddToMap()</span> </td>
                  </tr><tr>
                          <th>19064</th><th>19132</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>19133</th><td class="r"><ins>&nbsp; &nbsp; if(getClass() == CLASS_DEATH_KNIGHT)</ins> </td>
                  </tr><tr>
                          <th> </th><th>19134</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ResyncRunes(MAX_RUNES);</ins> </td>
                  </tr><tr>
                          <th> </th><th>19135</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>19136</th><td class="r"><ins>&nbsp; &nbsp; WorldPacket data0(SMSG_SET_PHASE_SHIFT, 4);</ins> </td>
                  </tr><tr>
                          <th> </th><th>19137</th><td class="r"><ins>&nbsp; &nbsp; data0 &lt;&lt; uint32(GetPhaseMask());</ins> </td>
                  </tr><tr>
                          <th> </th><th>19138</th><td class="r"><ins>&nbsp; &nbsp; GetSession()-&gt;SendPacket(&amp;data0);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>19139</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19065</th><th>19140</th><td class="l"><span>&nbsp; &nbsp; // update zone</span> </td>
                  </tr><tr>
                          <th>19066</th><th>19141</th><td class="l"><span>&nbsp; &nbsp; uint32 newzone, newarea;</span> </td>
                  </tr><tr>
                          <th>19067</th><th>19142</th><td class="l"><span>&nbsp; &nbsp; GetZoneAndAreaId(newzone,newarea);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19101">…</a></th>
                  <th><a href="#L19176">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19101</th><th>19176</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; SendMessageToSet(&amp;data2,true);</span> </td>
                  </tr><tr>
                          <th>19102</th><th>19177</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>19103</th><th>19178</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>19179</th><td class="r"><ins>&nbsp; &nbsp; if(GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>19180</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>19181</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data3(SMSG_FORCE_MOVE_ROOT, 10);</ins> </td>
                  </tr><tr>
                          <th> </th><th>19182</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data3 &lt;&lt; GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>19183</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data3 &lt;&lt; (uint32)((m_SeatData.s_flags &amp; SF_CAN_CAST) ? 2 : 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>19184</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SendMessageToSet(&amp;data3,true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>19185</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>19186</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19104</th><th>19187</th><td class="l"><span>&nbsp; &nbsp; SendAurasForTarget(this);</span> </td>
                  </tr><tr>
                          <th>19105</th><th>19188</th><td class="l"><span>&nbsp; &nbsp; SendEnchantmentDurations();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// must be after add to map</span> </td>
                  </tr><tr>
                          <th>19106</th><th>19189</th><td class="l"><span>&nbsp; &nbsp; SendItemDurations();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // must be after add to map</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19115">…</a></th>
                  <th><a href="#L19198">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19115</th><th>19198</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19116</th><th>19199</th><td class="l"><span>&nbsp; &nbsp; m_groupUpdateMask = GROUP_UPDATE_FLAG_NONE;</span> </td>
                  </tr><tr>
                          <th>19117</th><th>19200</th><td class="l"><span>&nbsp; &nbsp; m_auraUpdateMask = 0;</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>19118</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(<del>Pet *pet = Get</del>Pet())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>19201</th><td class="r"><span>&nbsp; &nbsp; if(<ins>Unit *pet = GetCharmOr</ins>Pet())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19119</th><th>19202</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; pet-&gt;ResetAuraUpdateMask();</span> </td>
                  </tr><tr>
                          <th>19120</th><th>19203</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>19121</th><th>19204</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19367">…</a></th>
                  <th><a href="#L19450">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19367</th><th>19450</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19368</th><th>19451</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!(auraFlags &amp; AFLAG_NOT_CASTER))</span> </td>
                  </tr><tr>
                          <th>19369</th><th>19452</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>19370</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint8(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// packed GUID of someone (caster?)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>19453</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(aura-&gt;GetCaster())</span> </td>
                      </tr><tr>
                        <th> </th><th>19454</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; aura-&gt;GetCaster()-&gt;GetPackGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>19455</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>19456</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint8(0);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19371</th><th>19457</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>19372</th><th>19458</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19373</th><th>19459</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(auraFlags &amp; AFLAG_DURATION)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // include aura duration</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19534">…</a></th>
                  <th><a href="#L19620">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19534</th><th>19620</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>19535</th><th>19621</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else if(IS_CREATURE_GUID(*itr) || IS_VEHICLE_GUID(*itr))</span> </td>
                  </tr><tr>
                          <th>19536</th><th>19622</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>19537</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Creature *obj = <del>GetMap()-&gt;GetCreatureOrPetOrVehicle(</del>*itr);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>19623</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Creature *obj = <ins>ObjectAccessor::GetCreatureOrPetOrVehicle(*this, </ins>*itr);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19538</th><th>19624</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!obj)</span> </td>
                  </tr><tr>
                          <th>19539</th><th>19625</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</span> </td>
                  </tr><tr>
                          <th>19540</th><th>19626</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19819">…</a></th>
                  <th><a href="#L19905">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19819</th><th>19905</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>19820</th><th>19906</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /// not get Xp in PvP or no not gray players in group</span> </td>
                  </tr><tr>
                          <th>19821</th><th>19907</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xp = (PvP || !not_gray_member_with_max_level) ? 0 : MaNGOS::XP::Gain(not_gray_member_with_max_level, pVictim);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>19908</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(GetVehicleGUID() &amp;&amp; !(m_SeatData.v_flags &amp; VF_GIVE_EXP))</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>19909</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xp = 0;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19822</th><th>19910</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19823</th><th>19911</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /// skip in check PvP case (for speed, not used)</span> </td>
                  </tr><tr>
                          <th>19824</th><th>19912</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bool is_raid = PvP ? false : sMapStore.LookupEntry(GetMapId())-&gt;IsRaid() &amp;&amp; pGroup-&gt;isRaidGroup();</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L19872">…</a></th>
                  <th><a href="#L19960">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>19872</th><th>19960</th><td class="l"><span>&nbsp; &nbsp; else&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // if (!pGroup)</span> </td>
                  </tr><tr>
                          <th>19873</th><th>19961</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>19874</th><th>19962</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; xp = PvP ? 0 : MaNGOS::XP::Gain(this, pVictim);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>19963</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(GetVehicleGUID() &amp;&amp; !(m_SeatData.v_flags &amp; VF_GIVE_EXP))</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>19964</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; xp = 0;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>19875</th><th>19965</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19876</th><th>19966</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // honor can be in PvP and !PvP (racial leader) cases</span> </td>
                  </tr><tr>
                          <th>19877</th><th>19967</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(RewardHonor(pVictim,1))</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L20354">…</a></th>
                  <th><a href="#L20444">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>20354</th><th>20444</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ApplyGlyph(i,apply);</span> </td>
                  </tr><tr>
                          <th>20355</th><th>20445</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>20356</th><th>20446</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>20357</th><th> </th><td class="l"><span><del></del>void Player::EnterVehicle(Vehicle *vehicle)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>20447</th><td class="r"><span><ins>/*</ins>void Player::EnterVehicle(Vehicle *vehicle)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>20358</th><th>20448</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>20359</th><th>20449</th><td class="l"><span>&nbsp; &nbsp; VehicleEntry const *ve = sVehicleStore.LookupEntry(vehicle-&gt;GetVehicleId());</span> </td>
                  </tr><tr>
                          <th>20360</th><th>20450</th><td class="l"><span>&nbsp; &nbsp; if(!ve)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L20444">…</a></th>
                  <th><a href="#L20534">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>20444</th><th>20534</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>20445</th><th>20535</th><td class="l"><span>&nbsp; &nbsp; // maybe called at dummy aura remove?</span> </td>
                  </tr><tr>
                          <th>20446</th><th>20536</th><td class="l"><span>&nbsp; &nbsp; // CastSpell(this, 45472, true);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Parachute</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>20537</th><td class="r"><ins>}*/</ins> </td>
                  </tr><tr>
                          <th> </th><th>20538</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>20539</th><td class="r"><ins>void Player::SendEnterVehicle(Vehicle *vehicle)</ins> </td>
                  </tr><tr>
                          <th> </th><th>20540</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>20541</th><td class="r"><ins>&nbsp; &nbsp; m_movementInfo.AddMovementFlag(MOVEFLAG_ONTRANSPORT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20542</th><td class="r"><ins>&nbsp; &nbsp; m_movementInfo.AddMovementFlag(MOVEFLAG_ROOT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20543</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>20544</th><td class="r"><ins>&nbsp; &nbsp; if(m_transport)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// if we were on a transport, leave</ins> </td>
                  </tr><tr>
                          <th> </th><th>20545</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>20546</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_transport-&gt;RemovePassenger(this);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20547</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_transport = NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>20548</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>20549</th><td class="r"><ins>&nbsp; &nbsp; // vehicle is our transport from now, if we get to zeppelin or boat</ins> </td>
                  </tr><tr>
                          <th> </th><th>20550</th><td class="r"><ins>&nbsp; &nbsp; // with vehicle, ONLY my vehicle will be passenger on that transport</ins> </td>
                  </tr><tr>
                          <th> </th><th>20551</th><td class="r"><ins>&nbsp; &nbsp; // player ----&gt; vehicle ----&gt; zeppelin</ins> </td>
                  </tr><tr>
                          <th> </th><th>20552</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>20553</th><td class="r"><ins>&nbsp; &nbsp; WorldPacket data(SMSG_BREAK_TARGET, 8);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20554</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; vehicle-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>20555</th><td class="r"><ins>&nbsp; &nbsp; GetSession()-&gt;SendPacket(&amp;data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20556</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>20557</th><td class="r"><ins>&nbsp; &nbsp; /*data.Initialize(SMSG_UNKNOWN_1191, 12);</ins> </td>
                  </tr><tr>
                          <th> </th><th>20558</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint64(GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>20559</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint64(vehicle-&gt;GetVehicleId());&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // not sure</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>20560</th><td class="r"><ins>&nbsp; &nbsp; SendMessageToSet(&amp;data, true);*/</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>20447</th><th>20561</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>20448</th><th>20562</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>20449</th><th>20563</th><td class="l"><span>bool Player::isTotalImmune()</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L20508">…</a></th>
                  <th><a href="#L20622">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>20508</th><th>20622</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>20509</th><th>20623</th><td class="l"><span>void Player::ResyncRunes(uint8 count)</span> </td>
                  </tr><tr>
                          <th>20510</th><th>20624</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>20511</th><th> </th><td class="l"><span>&nbsp; &nbsp; WorldPacket data(SMSG_RESYNC_RUNES, count * 2);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>20625</th><td class="r"><span>&nbsp; &nbsp; WorldPacket data(SMSG_RESYNC_RUNES, 4 + count * 2);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>20626</th><td class="r"><span>&nbsp; &nbsp; data &lt;&lt; uint32(count + 1);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>20512</th><th>20627</th><td class="l"><span>&nbsp; &nbsp; for(uint32 i = 0; i &lt; count; ++i)</span> </td>
                  </tr><tr>
                          <th>20513</th><th>20628</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>20514</th><th>20629</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint8(GetCurrentRune(i));&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// rune type</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Player.h</a>
        </h2>
        <pre>diff --git a/src/game/Player.h b/src/game/Player.h
index 75ab413..04140fa 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Player.h">
                      a
                  </th>
                  <th title="File b/src/game/Player.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>2124</th><th>2124</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HasMovementFlag(MovementFlags f) const;&nbsp; &nbsp; &nbsp; &nbsp; // for script access to m_movementInfo.HasMovementFlag</span> </td>
                  </tr><tr>
                          <th>2125</th><th>2125</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void UpdateFallInformationIfNeed(MovementInfo const&amp; minfo,uint16 opcode);</span> </td>
                  </tr><tr>
                          <th>2126</th><th>2126</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Unit *m_mover;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>2127</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Unit *m_mover_in_queve;</ins> </td>
                  </tr><tr>
                          <th> </th><th>2128</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>2129</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void SetMoverInQueve(Unit* pet) {m_mover_in_queve = pet ? pet : this; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>2130</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2127</th><th>2131</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetFallInformation(uint32 time, float z)</span> </td>
                  </tr><tr>
                          <th>2128</th><th>2132</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>2129</th><th>2133</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_lastFallTime = time;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L2143">…</a></th>
                  <th><a href="#L2147">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>2143</th><th>2147</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetClientControl(Unit* target, uint8 allowMove);</span> </td>
                  </tr><tr>
                          <th>2144</th><th>2148</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetMover(Unit* target) { m_mover = target ? target : this; }</span> </td>
                  </tr><tr>
                          <th>2145</th><th>2149</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>2146</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del>void EnterVehicle(Vehicle *vehicle);</del></span> </td>
                      </tr><tr>
                        <th>2147</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void <del>Exit</del>Vehicle(Vehicle *vehicle);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>2150</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>// vehicle system</ins></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>2151</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void <ins>SendEnter</ins>Vehicle(Vehicle *vehicle);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2148</th><th>2152</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>2149</th><th>2153</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint64 GetFarSight() const { return GetUInt64Value(PLAYER_FARSIGHT); }</span> </td>
                  </tr><tr>
                          <th>2150</th><th>2154</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetFarSightGUID(uint64 guid);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L2245">…</a></th>
                  <th><a href="#L2249">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>2245</th><th>2249</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint8 GetSubGroup() const { return m_group.getSubGroup(); }</span> </td>
                  </tr><tr>
                          <th>2246</th><th>2250</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetGroupUpdateFlag() const { return m_groupUpdateMask; }</span> </td>
                  </tr><tr>
                          <th>2247</th><th>2251</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetGroupUpdateFlag(uint32 flag) { m_groupUpdateMask |= flag; }</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>2248</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; const uint64&amp; GetAuraUpdateMask() const { return m_auraUpdateMask; }</del> </td>
                  </tr><tr class="last">
                          <th>2249</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; void SetAuraUpdateMask(uint8 slot) { m_auraUpdateMask |= (uint64(1) &lt;&lt; slot); }</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2250</th><th>2252</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Player* GetNextRandomRaidMember(float radius);</span> </td>
                  </tr><tr>
                          <th>2251</th><th>2253</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; PartyResult CanUninviteFromGroup() const;</span> </td>
                  </tr><tr>
                          <th>2252</th><th>2254</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // BattleGround Group System</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L2495">…</a></th>
                  <th><a href="#L2497">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>2495</th><th>2497</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; GroupReference m_originalGroup;</span> </td>
                  </tr><tr>
                          <th>2496</th><th>2498</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Group *m_groupInvite;</span> </td>
                  </tr><tr>
                          <th>2497</th><th>2499</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_groupUpdateMask;</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>2498</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; uint64 m_auraUpdateMask;</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2499</th><th>2500</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>2500</th><th>2501</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint64 m_miniPet;</span> </td>
                  </tr><tr>
                          <th>2501</th><th>2502</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/QuestHandler.cpp</a>
        </h2>
        <pre>diff --git a/src/game/QuestHandler.cpp b/src/game/QuestHandler.cpp
index fdac5cb..2ed9257 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/QuestHandler.cpp">
                      a
                  </th>
                  <th title="File b/src/game/QuestHandler.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>647</th><th>647</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (IS_CREATURE_OR_PET_GUID(*itr))</span> </td>
                  </tr><tr>
                          <th>648</th><th>648</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>649</th><th>649</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // need also pet quests case support</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>650</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Creature *questgiver = <del>GetPlayer()-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(</del>*itr);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>650</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Creature *questgiver = <ins>ObjectAccessor::GetCreatureOrPetOrVehicle(*GetPlayer(),</ins>*itr);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>651</th><th>651</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!questgiver || questgiver-&gt;IsHostileTo(_player))</span> </td>
                  </tr><tr>
                          <th>652</th><th>652</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</span> </td>
                  </tr><tr>
                          <th>653</th><th>653</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!questgiver-&gt;HasFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_QUESTGIVER))</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/ReactorAI.cpp</a>
        </h2>
        <pre>diff --git a/src/game/ReactorAI.cpp b/src/game/ReactorAI.cpp
index 2ea08d4..0b9bdd3 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/ReactorAI.cpp">
                      a
                  </th>
                  <th title="File b/src/game/ReactorAI.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>116</th><th>116</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; DEBUG_LOG("Creature stopped attacking, victim %s [guid=%u]", victim-&gt;isAlive() ? "out run him" : "is dead", m_creature-&gt;GetGUIDLow());</span> </td>
                  </tr><tr>
                          <th>117</th><th>117</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>118</th><th>118</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>119</th><td class="r"><ins>&nbsp; &nbsp; m_creature-&gt;ExitVehicle();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>119</th><th>120</th><td class="l"><span>&nbsp; &nbsp; m_creature-&gt;RemoveAllAuras();</span> </td>
                  </tr><tr>
                          <th>120</th><th>121</th><td class="l"><span>&nbsp; &nbsp; m_creature-&gt;DeleteThreatList();</span> </td>
                  </tr><tr>
                          <th>121</th><th>122</th><td class="l"><span>&nbsp; &nbsp; i_victimGuid = 0;</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/SharedDefines.h</a>
        </h2>
        <pre>diff --git a/src/game/SharedDefines.h b/src/game/SharedDefines.h
index b2b62f0..382132a 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/SharedDefines.h">
                      a
                  </th>
                  <th title="File b/src/game/SharedDefines.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>2446</th><th>2446</th><td class="l"><span>&nbsp; &nbsp; DIMINISHING_LIMITONLY</span> </td>
                  </tr><tr>
                          <th>2447</th><th>2447</th><td class="l"><span>};</span> </td>
                  </tr><tr>
                          <th>2448</th><th>2448</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>2449</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>2450</th><td class="r"><ins>/* NOTE : vehicles and seats has their own flags in DBC,</ins> </td>
                  </tr><tr>
                          <th> </th><th>2451</th><td class="r"><ins>but for now, they are too unknown for us, to use them */</ins> </td>
                  </tr><tr>
                          <th> </th><th>2452</th><td class="r"><ins>enum CustomVehicleFLags</ins> </td>
                  </tr><tr>
                          <th> </th><th>2453</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>2454</th><td class="r"><ins>&nbsp; &nbsp; VF_CANT_MOVE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 0x0001,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle cant move, only turn, maybe handle by some auras?</ins> </td>
                  </tr><tr>
                          <th> </th><th>2455</th><td class="r"><ins>&nbsp; &nbsp; VF_FACTION&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 0x0002,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle retain its own faction</ins> </td>
                  </tr><tr>
                          <th> </th><th>2456</th><td class="r"><ins>&nbsp; &nbsp; VF_DESPAWN_NPC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 0x0004,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle will delete npc on spellclick</ins> </td>
                  </tr><tr>
                          <th> </th><th>2457</th><td class="r"><ins>&nbsp; &nbsp; VF_DESPAWN_AT_LEAVE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0008,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle will be deleted when rider leaves</ins> </td>
                  </tr><tr>
                          <th> </th><th>2458</th><td class="r"><ins>&nbsp; &nbsp; VF_CAN_BE_HEALED&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = 0x0010,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle can be healed</ins> </td>
                  </tr><tr>
                          <th> </th><th>2459</th><td class="r"><ins>&nbsp; &nbsp; VF_GIVE_EXP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0020,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle will give exp for killing enemies</ins> </td>
                  </tr><tr>
                          <th> </th><th>2460</th><td class="r"><ins>&nbsp; &nbsp; VF_MOVEMENT&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0040,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle will move on its own, not depending on rider, however rider can cast spells</ins> </td>
                  </tr><tr>
                          <th> </th><th>2461</th><td class="r"><ins>&nbsp; &nbsp; VF_NON_SELECTABLE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0080&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // vehicle will be not selectable after rider enter</ins> </td>
                  </tr><tr>
                          <th> </th><th>2462</th><td class="r"><ins>&nbsp; &nbsp; //VF_HAS_FUEL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0100,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// TODO : find out what energy type is fuel and implement this</ins> </td>
                  </tr><tr>
                          <th> </th><th>2463</th><td class="r"><ins>};</ins> </td>
                  </tr><tr>
                          <th> </th><th>2464</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>2465</th><td class="r"><ins>enum CustomVehicleSeatFLags</ins> </td>
                  </tr><tr>
                          <th> </th><th>2466</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>2467</th><td class="r"><ins>&nbsp; &nbsp; SF_MAIN_RIDER&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0001,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// the one who controlls vehicle, can also cast spells</ins> </td>
                  </tr><tr>
                          <th> </th><th>2468</th><td class="r"><ins>&nbsp; &nbsp; SF_UNATTACKABLE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0002,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// hided inside, and unatackable until vehicle is destroyed</ins> </td>
                  </tr><tr>
                          <th> </th><th>2469</th><td class="r"><ins>&nbsp; &nbsp; SF_CAN_CAST&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0004,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// player/npc can rotate, and cast OWN spells</ins> </td>
                  </tr><tr>
                          <th> </th><th>2470</th><td class="r"><ins>&nbsp; &nbsp; SF_UNACCESSIBLE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x0008&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // player cant enter this seat by normal way (only by script)</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>2471</th><td class="r"><ins>};</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>2449</th><th>2472</th><td class="l"><span>enum ResponseCodes</span> </td>
                  </tr><tr>
                          <th>2450</th><th>2473</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>2451</th><th>2474</th><td class="l"><span>&nbsp; &nbsp; RESPONSE_SUCCESS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x00,</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Spell.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Spell.cpp b/src/game/Spell.cpp
index 037a6fa..c550065 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Spell.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Spell.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>204</th><th>204</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>205</th><th>205</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>206</th><th>206</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>207</th><th> </th><td class="l"><span>void SpellCastTargets::read( ByteBuffer&amp; data, Unit *caster<del></del> )</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>207</th><td class="r"><span>void SpellCastTargets::read( ByteBuffer&amp; data, Unit *caster<ins>, SpellEntry const* spell</ins> )</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>208</th><th>208</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>209</th><th>209</th><td class="l"><span>&nbsp; &nbsp; data &gt;&gt; m_targetMask;</span> </td>
                  </tr><tr>
                          <th>210</th><th>210</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L213">…</a></th>
                  <th><a href="#L213">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>213</th><th>213</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_destX = caster-&gt;GetPositionX();</span> </td>
                  </tr><tr>
                          <th>214</th><th>214</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_destY = caster-&gt;GetPositionY();</span> </td>
                  </tr><tr>
                          <th>215</th><th>215</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_destZ = caster-&gt;GetPositionZ();</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>216</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_unitTarget = caster;</span> </td>
                      </tr><tr>
                        <th>217</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_unitTargetGUID = caster-&gt;GetGUID();</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>216</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool skiptarget = false;</span> </td>
                      </tr><tr>
                        <th> </th><th>217</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(spell)</span> </td>
                      </tr><tr>
                        <th> </th><th>218</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>219</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(int j=0;j&lt;3;j++)</span> </td>
                      </tr><tr>
                        <th> </th><th>220</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>221</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // this is requiered, otherwise it will return SPELL_FAILED_BAD_TARGETS</span> </td>
                      </tr><tr>
                        <th> </th><th>222</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; skiptarget |= (spell-&gt;EffectImplicitTargetA[j] == TARGET_IN_FRONT_OF_CASTER || spell-&gt;EffectImplicitTargetA[j] == TARGET_SCRIPT || spell-&gt;EffectImplicitTargetA[j] == TARGET_EFFECT_SELECT);</span> </td>
                      </tr><tr>
                        <th> </th><th>223</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>224</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>225</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!skiptarget)</span> </td>
                      </tr><tr>
                        <th> </th><th>226</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>227</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_unitTarget = caster;</span> </td>
                      </tr><tr>
                        <th> </th><th>228</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_unitTargetGUID = caster-&gt;GetGUID();</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>229</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>218</th><th>230</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>219</th><th>231</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>220</th><th>232</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1406">…</a></th>
                  <th><a href="#L1418">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1406</th><th>1418</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case TARGET_SELF2:</span> </td>
                  </tr><tr>
                          <th>1407</th><th>1419</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case TARGET_AREAEFFECT_CUSTOM:</span> </td>
                  </tr><tr>
                          <th>1408</th><th>1420</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case TARGET_AREAEFFECT_CUSTOM_2:</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1421</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1422</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // used for targeting gameobjects</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1409</th><th>1423</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; targetUnitMap.push_back(m_caster);</span> </td>
                  </tr><tr>
                          <th>1410</th><th>1424</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>1425</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1411</th><th>1426</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case TARGET_RANDOM_ENEMY_CHAIN_IN_AREA:</span> </td>
                  </tr><tr>
                          <th>1412</th><th>1427</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>1413</th><th>1428</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_targets.m_targetMask = 0;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1655">…</a></th>
                  <th><a href="#L1670">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1655</th><th>1670</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>1656</th><th>1671</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default:</span> </td>
                  </tr><tr>
                          <th>1657</th><th>1672</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; FillAreaTargets(targetUnitMap, m_targets.m_destX, m_targets.m_destY, radius, PUSH_DEST_CENTER, SPELL_TARGETS_AOE_DAMAGE);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1673</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1674</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // exclude caster (this can be important if this not original caster, for example vehicle)</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1675</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; targetUnitMap.remove(m_caster);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1658</th><th>1676</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>1659</th><th>1677</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>1660</th><th>1678</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3046">…</a></th>
                  <th><a href="#L3064">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3046</th><th>3064</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_caster-&gt;resetAttackTimer(RANGED_ATTACK);*/</span> </td>
                  </tr><tr>
                          <th>3047</th><th>3065</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>3048</th><th>3066</th><td class="l"><span>&nbsp; &nbsp; // Clear combo at finish state</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3049</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(<del>m_caster-&gt;GetTypeId() == TYPEID_PLAYER</del> &amp;&amp; NeedsComboPoints(m_spellInfo))</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3067</th><td class="r"><span>&nbsp; &nbsp; if(<ins>(m_caster-&gt;GetTypeId() == TYPEID_PLAYER || ((Creature*)m_caster)-&gt;isVehicle())</ins> &amp;&amp; NeedsComboPoints(m_spellInfo))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3050</th><th>3068</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>3051</th><th>3069</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Not drop combopoints if negative spell and if any miss on enemy exist</span> </td>
                  </tr><tr>
                          <th>3052</th><th>3070</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool needDrop = true;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3062">…</a></th>
                  <th><a href="#L3080">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3062</th><th>3080</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>3063</th><th>3081</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>3064</th><th>3082</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (needDrop)</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3065</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_caster)-&gt;ClearComboPoints();</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>3083</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>3084</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_caster-&gt;GetTypeId() == TYPEID_PLAYER)</span> </td>
                      </tr><tr>
                        <th> </th><th>3085</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_caster)-&gt;ClearComboPoints();</span> </td>
                      </tr><tr>
                        <th> </th><th>3086</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                      </tr><tr>
                        <th> </th><th>3087</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_caster-&gt;GetCharmer())-&gt;ClearComboPoints();</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>3088</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3066</th><th>3089</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>3067</th><th>3090</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>3068</th><th>3091</th><td class="l"><span>&nbsp; &nbsp; // potions disabled by client, send event "not in combat" if need</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L4256">…</a></th>
                  <th><a href="#L4279">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>4256</th><th>4279</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return locRes;</span> </td>
                  </tr><tr>
                          <th>4257</th><th>4280</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>4258</th><th>4281</th><td class="l"><span>&nbsp; &nbsp; // not let players cast spells at mount (and let do it to creatures)</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>4259</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (<del>m_caster-&gt;IsMounted(</del>) &amp;&amp; m_caster-&gt;GetTypeId()==TYPEID_PLAYER &amp;&amp; !m_IsTriggeredSpell &amp;&amp;</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>4282</th><td class="r"><span>&nbsp; &nbsp; if (<ins>(m_caster-&gt;IsMounted() || m_caster-&gt;GetVehicleGUID()</ins>) &amp;&amp; m_caster-&gt;GetTypeId()==TYPEID_PLAYER &amp;&amp; !m_IsTriggeredSpell &amp;&amp;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>4260</th><th>4283</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; !IsPassiveSpell(m_spellInfo-&gt;Id) &amp;&amp; !(m_spellInfo-&gt;Attributes &amp; SPELL_ATTR_CASTABLE_WHILE_MOUNTED))</span> </td>
                  </tr><tr>
                          <th>4261</th><th>4284</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>4262</th><th>4285</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (m_caster-&gt;isInFlight())</span> </td>
                  </tr><tr>
                          <th>4263</th><th>4286</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return SPELL_FAILED_NOT_ON_TAXI;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>4287</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else if(m_caster-&gt;GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>4288</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>4289</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!(m_caster-&gt;m_SeatData.s_flags &amp; SF_CAN_CAST))</ins> </td>
                  </tr><tr>
                          <th> </th><th>4290</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return SPELL_FAILED_NOT_MOUNTED;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>4291</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>4264</th><th>4292</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>4265</th><th>4293</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return SPELL_FAILED_NOT_MOUNTED;</span> </td>
                  </tr><tr>
                          <th>4266</th><th>4294</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L5080">…</a></th>
                  <th><a href="#L5108">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>5080</th><th>5108</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //TARGET_DUELVSPLAYER is positive AND negative</span> </td>
                  </tr><tr>
                          <th>5081</th><th>5109</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; duelvsplayertar |= (m_spellInfo-&gt;EffectImplicitTargetA[j] == TARGET_DUELVSPLAYER);</span> </td>
                  </tr><tr>
                          <th>5082</th><th>5110</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>5083</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_caster-&gt;IsFriendlyTo(<del></del>target) &amp;&amp; !duelvsplayertar)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>5111</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_caster-&gt;IsFriendlyTo(<ins>_</ins>target) &amp;&amp; !duelvsplayertar)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>5084</th><th>5112</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>5085</th><th>5113</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return SPELL_FAILED_BAD_TARGETS;</span> </td>
                  </tr><tr>
                          <th>5086</th><th>5114</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L5091">…</a></th>
                  <th><a href="#L5119">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>5091</th><th>5119</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return SPELL_FAILED_NOT_READY;</span> </td>
                  </tr><tr>
                          <th>5092</th><th>5120</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>5093</th><th>5121</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>5122</th><td class="r"><ins>&nbsp; &nbsp; // NOTE : this is done twice, also in spell-&gt;prepare(&amp;(spell-&gt;m_targets));</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>5094</th><th>5123</th><td class="l"><span>&nbsp; &nbsp; return CheckCast(true);</span> </td>
                  </tr><tr>
                          <th>5095</th><th>5124</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>5096</th><th>5125</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L6024">…</a></th>
                  <th><a href="#L6053">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>6024</th><th>6053</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if ((!m_IsTriggeredSpell || target != m_targets.getUnitTarget()) &amp;&amp;</span> </td>
                  </tr><tr>
                          <th>6025</th><th>6054</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; target-&gt;HasFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE) &amp;&amp;</span> </td>
                  </tr><tr>
                          <th>6026</th><th>6055</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_spellInfo-&gt;EffectImplicitTargetA[eff] != TARGET_SCRIPT &amp;&amp;</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>6027</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_spellInfo-&gt;EffectImplicitTargetB[eff] != TARGET_SCRIPT )</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>6056</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_spellInfo-&gt;EffectImplicitTargetB[eff] != TARGET_SCRIPT &amp;&amp;</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>6057</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_spellInfo-&gt;EffectImplicitTargetA[eff] != TARGET_MASTER )</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>6028</th><th>6058</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                  </tr><tr>
                          <th>6029</th><th>6059</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>6030</th><th>6060</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Spell.h</a>
        </h2>
        <pre>diff --git a/src/game/Spell.h b/src/game/Spell.h
index a09c7c0..dbdb0d7 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Spell.h">
                      a
                  </th>
                  <th title="File b/src/game/Spell.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>118</th><th>118</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; SpellCastTargets();</span> </td>
                  </tr><tr>
                          <th>119</th><th>119</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ~SpellCastTargets();</span> </td>
                  </tr><tr>
                          <th>120</th><th>120</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>121</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void read( ByteBuffer&amp; data, Unit *caster<del></del> );</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>121</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void read( ByteBuffer&amp; data, Unit *caster<ins>, SpellEntry const* spell = NULL</ins> );</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>122</th><th>122</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void write( ByteBuffer&amp; data ) const;</span> </td>
                  </tr><tr>
                          <th>123</th><th>123</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>124</th><th>124</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; SpellCastTargetsReader ReadForCaster(Unit* caster) { return SpellCastTargetsReader(*this,caster); }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L354">…</a></th>
                  <th><a href="#L354">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>354</th><th>354</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void EffectPlayMusic(SpellEffectIndex eff_idx);</span> </td>
                  </tr><tr>
                          <th>355</th><th>355</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void EffectSpecCount(SpellEffectIndex eff_idx);</span> </td>
                  </tr><tr>
                          <th>356</th><th>356</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void EffectActivateSpec(SpellEffectIndex eff_idx);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>357</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void EffectSummonVehicle(SpellEffectIndex eff_idx);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>358</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void EffectDamageBuilding(SpellEffectIndex eff_idx);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>357</th><th>359</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>358</th><th>360</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Spell( Unit* Caster, SpellEntry const *info, bool triggered, uint64 originalCasterGUID = 0, Spell** triggeringContainer = NULL );</span> </td>
                  </tr><tr>
                          <th>359</th><th>361</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ~Spell();</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/SpellAuras.cpp</a>
        </h2>
        <pre>diff --git a/src/game/SpellAuras.cpp b/src/game/SpellAuras.cpp
index 636e64c..f812234 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/SpellAuras.cpp">
                      a
                  </th>
                  <th title="File b/src/game/SpellAuras.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>1249</th><th>1249</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1250</th><th>1250</th><td class="l"><span>&nbsp; &nbsp; if(!(auraFlags &amp; AFLAG_NOT_CASTER))</span> </td>
                  </tr><tr>
                          <th>1251</th><th>1251</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>1252</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint8(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// pguid</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>1252</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(GetCaster())</span> </td>
                      </tr><tr>
                        <th> </th><th>1253</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; GetCaster()-&gt;GetPackGUID();</span> </td>
                      </tr><tr>
                        <th> </th><th>1254</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>1255</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint8(0);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1253</th><th>1256</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>1254</th><th>1257</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1255</th><th>1258</th><td class="l"><span>&nbsp; &nbsp; if(auraFlags &amp; AFLAG_DURATION)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3627">…</a></th>
                  <th><a href="#L3630">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3627</th><th>3630</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;GetMotionMaster()-&gt;Clear();</span> </td>
                  </tr><tr>
                          <th>3628</th><th>3631</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;GetMotionMaster()-&gt;MoveIdle();</span> </td>
                  </tr><tr>
                          <th>3629</th><th>3632</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3630</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; else if(m_target-&gt;GetTypeId() == TYPEID_PLAYER<del></del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3633</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; else if(m_target-&gt;GetTypeId() == TYPEID_PLAYER<ins>&nbsp;&amp;&amp; !m_target-&gt;GetVehicleGUID()</ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3631</th><th>3634</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>3632</th><th>3635</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_target)-&gt;SetClientControl(m_target, 0);</span> </td>
                  </tr><tr>
                          <th>3633</th><th>3636</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3644">…</a></th>
                  <th><a href="#L3647">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3644</th><th>3647</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SetCharmerGUID(0);</span> </td>
                  </tr><tr>
                          <th>3645</th><th>3648</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; p_caster-&gt;InterruptSpell(CURRENT_CHANNELED_SPELL);&nbsp; // the spell is not automatically canceled when interrupted, do it now</span> </td>
                  </tr><tr>
                          <th>3646</th><th>3649</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3647</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(m_target-&gt;GetTypeId() == TYPEID_PLAYER<del></del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3650</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(m_target-&gt;GetTypeId() == TYPEID_PLAYER<ins>&nbsp;&amp;&amp; !m_target-&gt;GetVehicleGUID()</ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3648</th><th>3651</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>3649</th><th>3652</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_target)-&gt;setFactionForRace(m_target-&gt;getRace());</span> </td>
                  </tr><tr>
                          <th>3650</th><th>3653</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_target)-&gt;SetClientControl(m_target, 1);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3918">…</a></th>
                  <th><a href="#L3921">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3918</th><th>3921</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0);</span> </td>
                  </tr><tr>
                          <th>3919</th><th>3922</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SendMessageToSet(&amp;data, true);</span> </td>
                  </tr><tr>
                          <th>3920</th><th>3923</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>3924</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(!m_target-&gt;hasUnitState(UNIT_STAT_ON_VEHICLE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>3925</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>3926</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data(SMSG_FORCE_MOVE_ROOT, 8);</ins> </td>
                  </tr><tr>
                          <th> </th><th>3927</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; m_target-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>3928</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>3929</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SendMessageToSet(&amp;data,true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>3930</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>3931</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3921</th><th>3932</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Summon the Naj'entus Spine GameObject on target if spell is Impaling Spine</span> </td>
                  </tr><tr>
                          <th>3922</th><th>3933</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(GetId() == 39837)</span> </td>
                  </tr><tr>
                          <th>3923</th><th>3934</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3966">…</a></th>
                  <th><a href="#L3977">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3966</th><th>3977</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;clearUnitState(UNIT_STAT_STUNNED);</span> </td>
                  </tr><tr>
                          <th>3967</th><th>3978</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_STUNNED);</span> </td>
                  </tr><tr>
                          <th>3968</th><th>3979</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3969</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!m_target-&gt;hasUnitState(UNIT_STAT_ROOT<del></del>))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// prevent allow move if have also root effect</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3980</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!m_target-&gt;hasUnitState(UNIT_STAT_ROOT<ins>&nbsp;| UNIT_STAT_ON_VEHICLE</ins>))&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// prevent allow move if have also root effect</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3970</th><th>3981</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>3971</th><th>3982</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_target-&gt;getVictim() &amp;&amp; m_target-&gt;isAlive())</span> </td>
                  </tr><tr>
                          <th>3972</th><th>3983</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SetTargetGUID(m_target-&gt;getVictim()-&gt;GetGUID());</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L4186">…</a></th>
                  <th><a href="#L4197">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>4186</th><th>4197</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; (uint32)2;</span> </td>
                  </tr><tr>
                          <th>4187</th><th>4198</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SendMessageToSet(&amp;data, true);</span> </td>
                  </tr><tr>
                          <th>4188</th><th>4199</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>4200</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!m_target-&gt;hasUnitState(UNIT_STAT_ON_VEHICLE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>4201</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>4202</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data(SMSG_FORCE_MOVE_ROOT, 10);</ins> </td>
                  </tr><tr>
                          <th> </th><th>4203</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; m_target-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>4204</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; (uint32)2;</ins> </td>
                  </tr><tr>
                          <th> </th><th>4205</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SendMessageToSet(&amp;data,true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>4206</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>4207</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>4189</th><th>4208</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Clear unit movement flags</span> </td>
                  </tr><tr>
                          <th>4190</th><th>4209</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_target)-&gt;m_movementInfo.SetMovementFlags(MOVEFLAG_NONE);</span> </td>
                  </tr><tr>
                          <th>4191</th><th>4210</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L4223">…</a></th>
                  <th><a href="#L4242">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>4223</th><th>4242</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>4224</th><th>4243</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;clearUnitState(UNIT_STAT_ROOT);</span> </td>
                  </tr><tr>
                          <th>4225</th><th>4244</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>4226</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!m_target-&gt;hasUnitState(UNIT_STAT_STUNNED<del></del>))&nbsp; &nbsp; &nbsp; // prevent allow move if have also stun effect</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>4245</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!m_target-&gt;hasUnitState(UNIT_STAT_STUNNED<ins>&nbsp;| UNIT_STAT_ON_VEHICLE</ins>))&nbsp; &nbsp; &nbsp; // prevent allow move if have also stun effect</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>4227</th><th>4246</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>4228</th><th>4247</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_target-&gt;getVictim() &amp;&amp; m_target-&gt;isAlive())</span> </td>
                  </tr><tr>
                          <th>4229</th><th>4248</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SetTargetGUID(m_target-&gt;getVictim()-&gt;GetGUID());</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L4254">…</a></th>
                  <th><a href="#L4273">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>4254</th><th>4273</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(spell-&gt;m_spellInfo-&gt;PreventionType == SPELL_PREVENTION_TYPE_SILENCE)</span> </td>
                  </tr><tr>
                          <th>4255</th><th>4274</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Stop spells on prepare or casting state</span> </td>
                  </tr><tr>
                          <th>4256</th><th>4275</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;InterruptSpell(CurrentSpellTypes(i), false);</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>4257</th><th> </th><td class="l"><span><del>&nbsp; &nbsp; </del>}</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>4276</th><td class="r"><span><ins>&nbsp; &nbsp; &nbsp; &nbsp; </ins>}</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>4258</th><th>4277</th><td class="l"><span>&nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>4259</th><th>4278</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>4260</th><th>4279</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Real remove called after current aura remove from lists, check if other similar auras active</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L6699">…</a></th>
                  <th><a href="#L6718">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>6699</th><th>6718</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>6700</th><th>6719</th><td class="l"><span>void Aura::HandleForceMoveForward(bool apply, bool Real)</span> </td>
                  </tr><tr>
                          <th>6701</th><th>6720</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>6702</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(!Real<del>&nbsp;|| m_target-&gt;GetTypeId() != TYPEID_PLAYER</del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>6721</th><td class="r"><span>&nbsp; &nbsp; if(!Real<ins></ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>6703</th><th>6722</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>6704</th><th>6723</th><td class="l"><span>&nbsp; &nbsp; if(apply)</span> </td>
                  </tr><tr>
                          <th>6705</th><th>6724</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_target-&gt;SetFlag(UNIT_FIELD_FLAGS_2, UNIT_FLAG2_FORCE_MOVE);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L8054">…</a></th>
                  <th><a href="#L8073">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>8054</th><th>8073</th><td class="l"><span>&nbsp;*/</span> </td>
                  </tr><tr>
                          <th>8055</th><th>8074</th><td class="l"><span>void Aura::HandleAuraControlVehicle(bool apply, bool Real)</span> </td>
                  </tr><tr>
                          <th>8056</th><th>8075</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8057</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del></del>if(!Real)</span> </td>
                      </tr><tr>
                        <th>8058</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; <del></del>return;</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>8076</th><td class="r"><span>&nbsp; &nbsp; <ins>&nbsp;</ins>if(!Real)</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>8077</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; <ins>&nbsp;</ins>return;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8059</th><th>8078</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8060</th><th> </th><td class="l"><span>&nbsp; &nbsp; Unit *<del>play</del>er = GetCaster();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>8079</th><td class="r"><span>&nbsp; &nbsp; Unit *<ins>cast</ins>er = GetCaster();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8061</th><th>8080</th><td class="l"><span>&nbsp; &nbsp; Vehicle *vehicle = dynamic_cast&lt;Vehicle*&gt;(m_target);</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8062</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(!player || player-&gt;GetTypeId() != TYPEID_PLAYER || !vehicle)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>8081</th><td class="r"><span>&nbsp; &nbsp; if(!caster || !vehicle)</span> </td>
                      </tr><tr>
                        <th> </th><th>8082</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>8083</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>8084</th><td class="r"><span>&nbsp; &nbsp; // this can happen due to wrong caster/target spell handling</span> </td>
                      </tr><tr>
                        <th> </th><th>8085</th><td class="r"><span>&nbsp; &nbsp; // note : SPELL_AURA_CONTROL_VEHICLE can have EffectImplicitTargetA</span> </td>
                      </tr><tr>
                        <th> </th><th>8086</th><td class="r"><span>&nbsp; &nbsp; // TARGET_SCRIPT, TARGET_DUELVSPLAYER.. etc</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>8087</th><td class="r"><span>&nbsp; &nbsp; if(caster-&gt;GetGUID() == vehicle-&gt;GetGUID())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8063</th><th>8088</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>8064</th><th>8089</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>8065</th><th>8090</th><td class="l"><span>&nbsp; &nbsp; if (apply)</span> </td>
                  </tr><tr>
                          <th>8066</th><th>8091</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8067</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(Pet *pet = player-&gt;GetPet())</span> </td>
                      </tr><tr>
                        <th>8068</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pet-&gt;Remove(PET_SAVE_AS_CURRENT);</span> </td>
                      </tr><tr>
                        <th>8069</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)player)-&gt;EnterVehicle(vehicle);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>8092</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(caster-&gt;GetTypeId() == TYPEID_PLAYER)</span> </td>
                      </tr><tr>
                        <th> </th><th>8093</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>8094</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data(SMSG_ON_CANCEL_EXPECTED_RIDE_VEHICLE_AURA, 0);</span> </td>
                      </tr><tr>
                        <th> </th><th>8095</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)caster)-&gt;GetSession()-&gt;SendPacket(&amp;data);</span> </td>
                      </tr><tr>
                        <th> </th><th>8096</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>8097</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; // if we leave and enter again, this will refresh</span> </td>
                      </tr><tr>
                        <th> </th><th>8098</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int32 duration = GetSpellMaxDuration(GetSpellProto());</span> </td>
                      </tr><tr>
                        <th> </th><th>8099</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(duration &gt; 0)</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>8100</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;SetSpawnDuration(duration);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8070</th><th>8101</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>8071</th><th>8102</th><td class="l"><span>&nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>8072</th><th>8103</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>8073</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; SpellEntry const *spell = GetSpellProto();</del> </td>
                  </tr><tr class="last">
                          <th>8074</th><th> </th><td class="l"><del></del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8075</th><th>8104</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // some SPELL_AURA_CONTROL_VEHICLE auras have a dummy effect on the player - remove them</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8076</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; player-&gt;RemoveAurasDueToSpell(spell-&gt;Id);</span> </td>
                      </tr><tr>
                        <th>8077</th><th> </th><td class="l"><span></span> </td>
                      </tr><tr>
                        <th>8078</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)player)-&gt;ExitVehicle(vehicle);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>8105</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; caster-&gt;RemoveAurasDueToSpell(GetId());</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8079</th><th>8106</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>8080</th><th>8107</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>8081</th><th>8108</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/SpellEffects.cpp</a>
        </h2>
        <pre>diff --git a/src/game/SpellEffects.cpp b/src/game/SpellEffects.cpp
index 9b7f52c..a7b37f8 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/SpellEffects.cpp">
                      a
                  </th>
                  <th title="File b/src/game/SpellEffects.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>54</th><th>54</th><td class="l"><span>#include "ScriptCalls.h"</span> </td>
                  </tr><tr>
                          <th>55</th><th>55</th><td class="l"><span>#include "SkillDiscovery.h"</span> </td>
                  </tr><tr>
                          <th>56</th><th>56</th><td class="l"><span>#include "Formulas.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>57</th><td class="r"><ins>#include "Vehicle.h"</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>57</th><th>58</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>58</th><th>59</th><td class="l"><span>pEffect SpellEffects[TOTAL_SPELL_EFFECTS]=</span> </td>
                  </tr><tr>
                          <th>59</th><th>60</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L144">…</a></th>
                  <th><a href="#L145">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>144</th><th>145</th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::EffectStuck,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 84 SPELL_EFFECT_STUCK</span> </td>
                  </tr><tr>
                          <th>145</th><th>146</th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::EffectSummonPlayer,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 85 SPELL_EFFECT_SUMMON_PLAYER</span> </td>
                  </tr><tr>
                          <th>146</th><th>147</th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::EffectActivateObject,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 86 SPELL_EFFECT_ACTIVATE_OBJECT</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>147</th><th> </th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::Effect<del>NULL,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 87 SPELL_EFFECT_WMO_DAMAGE (57 spells in 3.3.2)</del></span> </td>
                      </tr><tr>
                        <th>148</th><th> </th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::Effect<del>NULL,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 88 SPELL_EFFECT_WMO_REPAIR (2 spells in 3.3.2)</del></span> </td>
                      </tr><tr>
                        <th>149</th><th> </th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::Effect<del>NULL,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 89 SPELL_EFFECT_WMO_CHANGE (7 spells in 3.3.2)</del></span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>148</th><td class="r"><span>&nbsp; &nbsp; &amp;Spell::Effect<ins>DamageBuilding,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 87 SPELL_EFFECT_WMO_DAMAGE</ins></span> </td>
                      </tr><tr>
                        <th> </th><th>149</th><td class="r"><span>&nbsp; &nbsp; &amp;Spell::Effect<ins>Unused,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 88 SPELL_EFFECT_WMO_REPAIR</ins></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>150</th><td class="r"><span>&nbsp; &nbsp; &amp;Spell::Effect<ins>Unused,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 89 SPELL_EFFECT_WMO_CHANGE</ins></span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>150</th><th>151</th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::EffectKillCreditPersonal,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 90 SPELL_EFFECT_KILL_CREDIT&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Kill credit but only for single person</span> </td>
                  </tr><tr>
                          <th>151</th><th>152</th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::EffectUnused,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 91 SPELL_EFFECT_THREAT_ALL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;one spell: zzOLDBrainwash</span> </td>
                  </tr><tr>
                          <th>152</th><th>153</th><td class="l"><span>&nbsp; &nbsp; &amp;Spell::EffectEnchantHeldItem,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 92 SPELL_EFFECT_ENCHANT_HELD_ITEM</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3767">…</a></th>
                  <th><a href="#L3768">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3767</th><th>3768</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SUMMON_PROP_TYPE_SIEGE_VEH:</span> </td>
                  </tr><tr>
                          <th>3768</th><th>3769</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case SUMMON_PROP_TYPE_DRAKE_VEH:</span> </td>
                  </tr><tr>
                          <th>3769</th><th>3770</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3770</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>// EffectSummonVehicle(i</del>);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3771</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>EffectSummonVehicle(eff_idx</ins>);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3771</th><th>3772</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>3772</th><th>3773</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default:</span> </td>
                  </tr><tr>
                          <th>3773</th><th>3774</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sLog.outError("EffectSummonType: Unhandled summon type %u", summon_prop-&gt;Type);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3796">…</a></th>
                  <th><a href="#L3797">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3796</th><th>3797</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; case SUMMON_PROP_GROUP_VEHICLE:</span> </td>
                  </tr><tr>
                          <th>3797</th><th>3798</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>3798</th><th>3799</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // TODO</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>3799</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>// EffectSummonVehicle(i</del>);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>3800</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins>EffectSummonVehicle(eff_idx</ins>);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3800</th><th>3801</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>3801</th><th>3802</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>3802</th><th>3803</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; default:</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L3804">…</a></th>
                  <th><a href="#L3805">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>3804</th><th>3805</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                  </tr><tr>
                          <th>3805</th><th>3806</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>3806</th><th>3807</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>3807</th><th> </th><td class="l"><del></del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>3808</th><th>3808</th><td class="l"><span>void Spell::DoSummon(SpellEffectIndex eff_idx)</span> </td>
                  </tr><tr>
                          <th>3809</th><th>3809</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>3810</th><th>3810</th><td class="l"><span>&nbsp; &nbsp; if (m_caster-&gt;GetPetGUID())</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L6145">…</a></th>
                  <th><a href="#L6145">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>6145</th><th>6145</th><td class="l"><span>&nbsp; &nbsp; if(!unitTarget)</span> </td>
                  </tr><tr>
                          <th>6146</th><th>6146</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>6147</th><th>6147</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="first">
                          <th>6148</th><th> </th><td class="l"><del>&nbsp; &nbsp; if(m_caster-&gt;GetTypeId() != TYPEID_PLAYER)</del> </td>
                  </tr><tr>
                          <th>6149</th><th> </th><td class="l"><del>&nbsp; &nbsp; &nbsp; &nbsp; return;</del> </td>
                  </tr><tr class="last">
                          <th>6150</th><th> </th><td class="l"><del></del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>6151</th><th>6148</th><td class="l"><span>&nbsp; &nbsp; if(damage &lt;= 0)</span> </td>
                  </tr><tr>
                          <th>6152</th><th>6149</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>6153</th><th>6150</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>6154</th><th> </th><td class="l"><span>&nbsp; &nbsp; ((Player*)m_caster)-&gt;AddComboPoints(unitTarget, damage);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>6151</th><td class="r"><span>&nbsp; &nbsp; if(m_caster-&gt;GetTypeId() != TYPEID_PLAYER)</span> </td>
                      </tr><tr>
                        <th> </th><th>6152</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>6153</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Creature*)m_caster)-&gt;isVehicle())</span> </td>
                      </tr><tr>
                        <th> </th><th>6154</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_caster-&gt;GetCharmer())-&gt;AddComboPoints(unitTarget, damage);</span> </td>
                      </tr><tr>
                        <th> </th><th>6155</th><td class="r"><span>&nbsp; &nbsp; }else</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>6156</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)m_caster)-&gt;AddComboPoints(unitTarget, damage);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>6155</th><th>6157</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>6156</th><th>6158</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>6157</th><th>6159</th><td class="l"><span>void Spell::EffectDuel(SpellEffectIndex eff_idx)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L7401">…</a></th>
                  <th><a href="#L7403">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>7401</th><th>7403</th><td class="l"><span>&nbsp; &nbsp; unitTarget-&gt;RemoveByteFlag(UNIT_FIELD_BYTES_2, 2, UNIT_CAN_BE_RENAMED);</span> </td>
                  </tr><tr>
                          <th>7402</th><th>7404</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>7403</th><th>7405</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>7406</th><td class="r"><ins>void Spell::EffectSummonVehicle(SpellEffectIndex eff_idx)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7407</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>7408</th><td class="r"><ins>&nbsp; &nbsp; uint32 creature_entry = m_spellInfo-&gt;EffectMiscValue[eff_idx];</ins> </td>
                  </tr><tr>
                          <th> </th><th>7409</th><td class="r"><ins>&nbsp; &nbsp; if(!creature_entry)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7410</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7411</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7412</th><td class="r"><ins>&nbsp; &nbsp; float px, py, pz;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7413</th><td class="r"><ins>&nbsp; &nbsp; // If dest location if present</ins> </td>
                  </tr><tr>
                          <th> </th><th>7414</th><td class="r"><ins>&nbsp; &nbsp; if (m_targets.m_targetMask &amp; TARGET_FLAG_DEST_LOCATION)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7415</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>7416</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; // Summon unit in dest location</ins> </td>
                  </tr><tr>
                          <th> </th><th>7417</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; px = m_targets.m_destX;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7418</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; py = m_targets.m_destY;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7419</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; pz = m_targets.m_destZ;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7420</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>7421</th><td class="r"><ins>&nbsp; &nbsp; // Summon if dest location not present near caster</ins> </td>
                  </tr><tr>
                          <th> </th><th>7422</th><td class="r"><ins>&nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>7423</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_caster-&gt;GetClosePoint(px,py,pz,3.0f);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7424</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7425</th><td class="r"><ins>&nbsp; &nbsp; Vehicle *v = m_caster-&gt;SummonVehicle(creature_entry, px, py, pz, m_caster-&gt;GetOrientation());</ins> </td>
                  </tr><tr>
                          <th> </th><th>7426</th><td class="r"><ins>&nbsp; &nbsp; if(!v)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7427</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7428</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7429</th><td class="r"><ins>&nbsp; &nbsp; v-&gt;SetUInt32Value(UNIT_CREATED_BY_SPELL, m_spellInfo-&gt;Id);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7430</th><td class="r"><ins>&nbsp; &nbsp; v-&gt;SetCreatorGUID(m_caster-&gt;GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>7431</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7432</th><td class="r"><ins>&nbsp; &nbsp; if(damage)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7433</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>7434</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_caster-&gt;CastSpell(v, damage, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7435</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_caster-&gt;EnterVehicle(v, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7436</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>7437</th><td class="r"><ins>&nbsp; &nbsp; int32 duration = GetSpellMaxDuration(m_spellInfo);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7438</th><td class="r"><ins>&nbsp; &nbsp; if(duration &gt; 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7439</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; v-&gt;SetSpawnDuration(duration);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7440</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>7441</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7442</th><td class="r"><ins>void Spell::EffectDamageBuilding(SpellEffectIndex eff_idx)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7443</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>7444</th><td class="r"><ins>&nbsp; &nbsp; if(!gameObjTarget)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7445</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7446</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7447</th><td class="r"><ins>&nbsp; &nbsp; if(gameObjTarget-&gt;GetGoType() != GAMEOBJECT_TYPE_DESTRUCTIBLE_BUILDING)</ins> </td>
                  </tr><tr>
                          <th> </th><th>7448</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>7449</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>7450</th><td class="r"><ins>&nbsp; &nbsp; // NOTE : this can be increased by scaling stat system in vehicles</ins> </td>
                  </tr><tr>
                          <th> </th><th>7451</th><td class="r"><ins>&nbsp; &nbsp; gameObjTarget-&gt;DealSiegeDamage(damage);</ins> </td>
                  </tr><tr>
                          <th> </th><th>7452</th><td class="r"><ins>}</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>7453</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>7404</th><th>7454</th><td class="l"><span>void Spell::EffectPlayMusic(SpellEffectIndex eff_idx)</span> </td>
                  </tr><tr>
                          <th>7405</th><th>7455</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>7406</th><th>7456</th><td class="l"><span>&nbsp; &nbsp; if(!unitTarget || unitTarget-&gt;GetTypeId() != TYPEID_PLAYER)</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/SpellHandler.cpp</a>
        </h2>
        <pre>diff --git a/src/game/SpellHandler.cpp b/src/game/SpellHandler.cpp
index 2d8c2e1..b025315 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/SpellHandler.cpp">
                      a
                  </th>
                  <th title="File b/src/game/SpellHandler.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>27</th><th>27</th><td class="l"><span>#include "Spell.h"</span> </td>
                  </tr><tr>
                          <th>28</th><th>28</th><td class="l"><span>#include "ScriptCalls.h"</span> </td>
                  </tr><tr>
                          <th>29</th><th>29</th><td class="l"><span>#include "Totem.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>30</th><td class="r"><ins>#include "Vehicle.h"</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>30</th><th>31</th><td class="l"><span>#include "SpellAuras.h"</span> </td>
                  </tr><tr>
                          <th>31</th><th>32</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>32</th><th>33</th><td class="l"><span>void WorldSession::HandleUseItemOpcode(WorldPacket&amp; recvPacket)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L298">…</a></th>
                  <th><a href="#L299">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>298</th><th>299</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>299</th><th>300</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>300</th><th>301</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>302</th><td class="r"><ins>&nbsp; &nbsp; // vehicle spells are handled by CMSG_PET_CAST_SPELL,</ins> </td>
                  </tr><tr>
                          <th> </th><th>303</th><td class="r"><ins>&nbsp; &nbsp; // but player is still able to cast own spells</ins> </td>
                  </tr><tr>
                          <th> </th><th>304</th><td class="r"><ins>&nbsp; &nbsp; if(_player-&gt;GetCharmGUID() &amp;&amp; _player-&gt;GetCharmGUID() == _player-&gt;GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>305</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; mover = _player;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>306</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>301</th><th>307</th><td class="l"><span>&nbsp; &nbsp; sLog.outDebug("WORLD: got cast spell packet, spellId - %u, cast_count: %u, unk_flags %u, data length = %i",</span> </td>
                  </tr><tr>
                          <th>302</th><th>308</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; spellId, cast_count, unk_flags, (uint32)recvPacket.size());</span> </td>
                  </tr><tr>
                          <th>303</th><th>309</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L460">…</a></th>
                  <th><a href="#L466">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>460</th><th>466</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>461</th><th>467</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>462</th><th>468</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>463</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature* pet<del>&nbsp;= GetPlayer()-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(</del>guid);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>469</th><td class="r"><span>&nbsp; &nbsp; Creature* pet<ins>=ObjectAccessor::GetCreatureOrPetOrVehicle(*_player,</ins>guid);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>464</th><th>470</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>465</th><th>471</th><td class="l"><span>&nbsp; &nbsp; if(!pet)</span> </td>
                  </tr><tr>
                          <th>466</th><th>472</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L545">…</a></th>
                  <th><a href="#L551">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>545</th><th>551</th><td class="l"><span>&nbsp; &nbsp; uint64 guid;</span> </td>
                  </tr><tr>
                          <th>546</th><th>552</th><td class="l"><span>&nbsp; &nbsp; recv_data &gt;&gt; guid;</span> </td>
                  </tr><tr>
                          <th>547</th><th>553</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>548</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (_player-&gt;isInCombat())&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // client prevent click and set different icon at combat state</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>554</th><td class="r"><span>&nbsp; &nbsp; Creature *unit = ObjectAccessor::GetCreatureOrPetOrVehicle(*_player, guid);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>555</th><td class="r"><span>&nbsp; &nbsp; if (!unit || unit-&gt;isInCombat())&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // client prevent click and set different icon at combat state</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>549</th><th>556</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>550</th><th>557</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>551</th><th> </th><td class="l"><span>&nbsp; &nbsp; Creature *unit = _player-&gt;GetMap()-&gt;GetCreatureOrPetOrVehicle(guid);</span> </td>
                      </tr><tr>
                        <th>552</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (!unit || unit-&gt;isInCombat())&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // client prevent click and set different icon at combat state</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>558</th><td class="r"><span>&nbsp; &nbsp; uint32 vehicleId = 0;</span> </td>
                      </tr><tr>
                        <th> </th><th>559</th><td class="r"><span>&nbsp; &nbsp; CreatureDataAddon const *cainfo = unit-&gt;GetCreatureAddon();</span> </td>
                      </tr><tr>
                        <th> </th><th>560</th><td class="r"><span>&nbsp; &nbsp; if(cainfo)</span> </td>
                      </tr><tr>
                        <th> </th><th>561</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; vehicleId = cainfo-&gt;vehicle_id;</span> </td>
                      </tr><tr>
                        <th> </th><th>562</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>563</th><td class="r"><span>&nbsp; &nbsp; if (_player-&gt;isInCombat() &amp;&amp; !unit-&gt;isVehicle() &amp;&amp; !vehicleId)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // client prevent click and set different icon at combat state</span> </td>
                      </tr><tr>
                        <th> </th><th>564</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return; </span> </td>
                      </tr><tr>
                        <th> </th><th>565</th><td class="r"><span>&nbsp; &nbsp; </span> </td>
                      </tr><tr class="last">
                        <th> </th><th>566</th><td class="r"><span>&nbsp; &nbsp; if(!_player-&gt;IsWithinDistInMap(unit, 10))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>553</th><th>567</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                  </tr><tr>
                          <th>554</th><th>568</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>555</th><th> </th><td class="l"><span>&nbsp; &nbsp; SpellClickInfoMapBounds clickPair = sObjectMgr.GetSpellClickInfoMapBounds(unit-&gt;GetEntry());</span> </td>
                      </tr><tr>
                        <th>556</th><th> </th><td class="l"><span>&nbsp; &nbsp; for(SpellClickInfoMap::const_iterator itr = clickPair.first; itr != clickPair.second; ++itr)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>569</th><td class="r"><span>&nbsp; &nbsp; // cheater?</span> </td>
                      </tr><tr>
                        <th> </th><th>570</th><td class="r"><span>&nbsp; &nbsp; if(!unit-&gt;HasFlag(UNIT_NPC_FLAGS,UNIT_NPC_FLAG_SPELLCLICK))</span> </td>
                      </tr><tr>
                        <th> </th><th>571</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>572</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>573</th><td class="r"><span>&nbsp; &nbsp; // handled other (hacky) way to avoid overwriting auras</span> </td>
                      </tr><tr>
                        <th> </th><th>574</th><td class="r"><span>&nbsp; &nbsp; if(vehicleId || unit-&gt;isVehicle())</span> </td>
                      </tr><tr>
                        <th> </th><th>575</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>576</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!unit-&gt;isAlive())</span> </td>
                      </tr><tr>
                        <th> </th><th>577</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>578</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>579</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(_player-&gt;GetVehicleGUID())</span> </td>
                      </tr><tr>
                        <th> </th><th>580</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>581</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>582</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; // create vehicle if no one present and kill the original creature to avoid double, triple etc spawns</span> </td>
                      </tr><tr>
                        <th> </th><th>583</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!unit-&gt;isVehicle())</span> </td>
                      </tr><tr>
                        <th> </th><th>584</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>585</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Vehicle *v = _player-&gt;SummonVehicle(unit-&gt;GetEntry(), unit-&gt;GetPositionX(), unit-&gt;GetPositionY(), unit-&gt;GetPositionZ(), unit-&gt;GetOrientation(), vehicleId);</span> </td>
                      </tr><tr>
                        <th> </th><th>586</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!v)</span> </td>
                      </tr><tr>
                        <th> </th><th>587</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>588</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>589</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(v-&gt;GetVehicleFlags() &amp; VF_DESPAWN_NPC)</span> </td>
                      </tr><tr>
                        <th> </th><th>590</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>591</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v-&gt;SetSpawnDuration(unit-&gt;GetRespawnDelay()*IN_MILISECONDS);</span> </td>
                      </tr><tr>
                        <th> </th><th>592</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;setDeathState(JUST_DIED);</span> </td>
                      </tr><tr>
                        <th> </th><th>593</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;RemoveCorpse();</span> </td>
                      </tr><tr>
                        <th> </th><th>594</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SetHealth(0);</span> </td>
                      </tr><tr>
                        <th> </th><th>595</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>596</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit = v;</span> </td>
                      </tr><tr>
                        <th> </th><th>597</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>598</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>599</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SetHealth(unit-&gt;GetMaxHealth());</span> </td>
                      </tr><tr>
                        <th> </th><th>600</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>601</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Vehicle*)unit)-&gt;GetVehicleData())</span> </td>
                      </tr><tr>
                        <th> </th><th>602</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(uint32 r_aura = ((Vehicle*)unit)-&gt;GetVehicleData()-&gt;req_aura)</span> </td>
                      </tr><tr>
                        <th> </th><th>603</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!_player-&gt;HasAura(r_aura))</span> </td>
                      </tr><tr>
                        <th> </th><th>604</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>605</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>606</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; _player-&gt;EnterVehicle((Vehicle*)unit, 0);</span> </td>
                      </tr><tr>
                        <th> </th><th>607</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>608</th><td class="r"><span>&nbsp; &nbsp; else</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>557</th><th>609</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>558</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (itr-&gt;second.IsFitToRequirements(_player))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>610</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; SpellClickInfoMapBounds clickPair = sObjectMgr.GetSpellClickInfoMapBounds(unit-&gt;GetEntry());</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>611</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; for(SpellClickInfoMap::const_iterator itr = clickPair.first; itr != clickPair.second; ++itr)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>559</th><th>612</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>560</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *caster = (itr-&gt;second.castFlags &amp; 0x1) ? (Unit*)_player : (Unit*)unit;</span> </td>
                      </tr><tr>
                        <th>561</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *target = (itr-&gt;second.castFlags &amp; 0x2) ? (Unit*)_player : (Unit*)unit;</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>613</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (itr-&gt;second.IsFitToRequirements(_player))</span> </td>
                      </tr><tr>
                        <th> </th><th>614</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>615</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *caster = (itr-&gt;second.castFlags &amp; 0x1) ? (Unit*)_player : (Unit*)unit;</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>616</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *target = (itr-&gt;second.castFlags &amp; 0x2) ? (Unit*)_player : (Unit*)unit;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>562</th><th>617</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>563</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; caster-&gt;CastSpell(target, itr-&gt;second.spellId, true);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>618</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; caster-&gt;CastSpell(target, itr-&gt;second.spellId, true);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>619</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>564</th><th>620</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>565</th><th>621</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>566</th><th>622</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>567</th><th> </th><td class="l"><del></del> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Unit.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Unit.cpp b/src/game/Unit.cpp
index 4597457..e0b8837 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Unit.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Unit.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>46</th><th>46</th><td class="l"><span>#include "CellImpl.h"</span> </td>
                  </tr><tr>
                          <th>47</th><th>47</th><td class="l"><span>#include "Path.h"</span> </td>
                  </tr><tr>
                          <th>48</th><th>48</th><td class="l"><span>#include "Traveller.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>49</th><td class="r"><ins>#include "Vehicle.h"</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>49</th><th>50</th><td class="l"><span>#include "VMapFactory.h"</span> </td>
                  </tr><tr>
                          <th>50</th><th>51</th><td class="l"><span>#include "MovementGenerator.h"</span> </td>
                  </tr><tr>
                          <th>51</th><th>52</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L250">…</a></th>
                  <th><a href="#L251">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>250</th><th>251</th><td class="l"><span>&nbsp; &nbsp; // remove aurastates allowing special moves</span> </td>
                  </tr><tr>
                          <th>251</th><th>252</th><td class="l"><span>&nbsp; &nbsp; for(int i=0; i &lt; MAX_REACTIVE; ++i)</span> </td>
                  </tr><tr>
                          <th>252</th><th>253</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; m_reactiveTimer[i] = 0;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>254</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>255</th><td class="r"><ins>&nbsp; &nbsp; m_auraUpdateMask = 0;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>256</th><td class="r"><ins>&nbsp; &nbsp; m_vehicleGUID = 0;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>253</th><th>257</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>254</th><th>258</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>255</th><th>259</th><td class="l"><span>Unit::~Unit()</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L8004">…</a></th>
                  <th><a href="#L8008">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>8004</th><th>8008</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>8005</th><th>8009</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_POWER_TYPE);</span> </td>
                  </tr><tr>
                          <th>8006</th><th>8010</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8007</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>8011</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8008</th><th>8012</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>8009</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>8010</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>8011</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>8012</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>8013</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>8014</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_POWER_TYPE);</span> </td>
                      </tr><tr>
                        <th>8015</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>8013</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>8014</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_POWER_TYPE);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8016</th><th>8015</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>8017</th><th>8016</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>8018</th><th>8017</th><td class="l"><span>&nbsp; &nbsp; switch(new_powertype)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L8320">…</a></th>
                  <th><a href="#L8319">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>8320</th><th>8319</th><td class="l"><span>&nbsp; &nbsp; if(GetTypeId()==TYPEID_PLAYER &amp;&amp; IsMounted())</span> </td>
                  </tr><tr>
                          <th>8321</th><th>8320</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                  </tr><tr>
                          <th>8322</th><th>8321</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>8322</th><td class="r"><ins>&nbsp; &nbsp; // player (also npc?) cannot attack on vehicle</ins> </td>
                  </tr><tr>
                          <th> </th><th>8323</th><td class="r"><ins>&nbsp; &nbsp; if(GetTypeId()==TYPEID_PLAYER &amp;&amp; GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>8324</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return false;</ins> </td>
                  </tr><tr>
                          <th> </th><th>8325</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>8326</th><td class="r"><ins>&nbsp; &nbsp; // player (also npc?) cannot attack on vehicle</ins> </td>
                  </tr><tr>
                          <th> </th><th>8327</th><td class="r"><ins>&nbsp; &nbsp; if(GetTypeId()==TYPEID_UNIT &amp;&amp; ((Creature*)this)-&gt;isVehicle() &amp;&amp; GetCharmerGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>8328</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return false;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>8329</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>8323</th><th>8330</th><td class="l"><span>&nbsp; &nbsp; // nobody can attack GM in GM-mode</span> </td>
                  </tr><tr>
                          <th>8324</th><th>8331</th><td class="l"><span>&nbsp; &nbsp; if(victim-&gt;GetTypeId()==TYPEID_PLAYER)</span> </td>
                  </tr><tr>
                          <th>8325</th><th>8332</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L10781">…</a></th>
                  <th><a href="#L10788">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>10781</th><th>10788</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>10782</th><th>10789</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>10783</th><th>10790</th><td class="l"><span>&nbsp; &nbsp; float bonus = non_stack_bonus &gt; stack_bonus ? non_stack_bonus : stack_bonus;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>10791</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>10792</th><td class="r"><ins>&nbsp; &nbsp; //apply creature's base speed</ins> </td>
                  </tr><tr>
                          <th> </th><th>10793</th><td class="r"><ins>&nbsp; &nbsp; if(GetTypeId() == TYPEID_UNIT)</ins> </td>
                  </tr><tr>
                          <th> </th><th>10794</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bonus *= ((Creature*)this)-&gt;GetBaseSpeed();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>10795</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>10784</th><th>10796</th><td class="l"><span>&nbsp; &nbsp; // now we ready for speed calculation</span> </td>
                  </tr><tr>
                          <th>10785</th><th>10797</th><td class="l"><span>&nbsp; &nbsp; float speed&nbsp; = main_speed_mod ? bonus*(100.0f + main_speed_mod)/100.0f : bonus;</span> </td>
                  </tr><tr>
                          <th>10786</th><th>10798</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L10977">…</a></th>
                  <th><a href="#L10989">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>10977</th><th>10989</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>10978</th><th>10990</th><td class="l"><span>&nbsp; &nbsp; if (s == JUST_DIED)</span> </td>
                  </tr><tr>
                          <th>10979</th><th>10991</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>10992</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ExitVehicle();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>10980</th><th>10993</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; RemoveAllAurasOnDeath();</span> </td>
                  </tr><tr>
                          <th>10981</th><th>10994</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; RemoveGuardians();</span> </td>
                  </tr><tr>
                          <th>10982</th><th>10995</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; UnsummonAllTotems();</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11200">…</a></th>
                  <th><a href="#L11213">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11200</th><th>11213</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11201</th><th>11214</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11202</th><th>11215</th><td class="l"><span>&nbsp; &nbsp; // enter in evade mode in other case</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11203</th><th> </th><td class="l"><span>&nbsp; &nbsp; ((Creature*)this)-&gt;AI()-&gt;EnterEvadeMode();</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11216</th><td class="r"><span>&nbsp; &nbsp; if(!((Creature*)this)-&gt;isVehicle())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11217</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Creature*)this)-&gt;AI()-&gt;EnterEvadeMode();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11204</th><th>11218</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11205</th><th>11219</th><td class="l"><span>&nbsp; &nbsp; return false;</span> </td>
                  </tr><tr>
                          <th>11206</th><th>11220</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11211">…</a></th>
                  <th><a href="#L11225">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11211</th><th>11225</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11212</th><th>11226</th><td class="l"><span>int32 Unit::CalculateSpellDamage(SpellEntry const* spellProto, SpellEffectIndex effect_index, int32 effBasePoints, Unit const* target)</span> </td>
                  </tr><tr>
                          <th>11213</th><th>11227</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11214</th><th> </th><td class="l"><span>&nbsp; &nbsp; Player* unitPlayer = (GetTypeId() == TYPEID_PLAYER) ? (Player*)this : NULL;</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11228</th><td class="r"><span>&nbsp; &nbsp; Player* unitPlayer;</span> </td>
                      </tr><tr>
                        <th> </th><th>11229</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>11230</th><td class="r"><span>&nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER)</span> </td>
                      </tr><tr>
                        <th> </th><th>11231</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unitPlayer = (Player*)this;</span> </td>
                      </tr><tr>
                        <th> </th><th>11232</th><td class="r"><span>&nbsp; &nbsp; else if(((Creature*)this)-&gt;isVehicle())</span> </td>
                      </tr><tr>
                        <th> </th><th>11233</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unitPlayer = (Player*)GetCharmer();</span> </td>
                      </tr><tr>
                        <th> </th><th>11234</th><td class="r"><span>&nbsp; &nbsp; else</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11235</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unitPlayer = NULL;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11215</th><th>11236</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11216</th><th>11237</th><td class="l"><span>&nbsp; &nbsp; uint8 comboPoints = unitPlayer ? unitPlayer-&gt;GetComboPoints() : 0;</span> </td>
                  </tr><tr>
                          <th>11217</th><th>11238</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11266">…</a></th>
                  <th><a href="#L11287">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11266</th><th>11287</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11267</th><th>11288</th><td class="l"><span>int32 Unit::CalculateSpellDuration(SpellEntry const* spellProto, SpellEffectIndex effect_index, Unit const* target)</span> </td>
                  </tr><tr>
                          <th>11268</th><th>11289</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11269</th><th> </th><td class="l"><span>&nbsp; &nbsp; Player* unitPlayer = (GetTypeId() == TYPEID_PLAYER) ? (Player*)this : NULL;</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11290</th><td class="r"><span>&nbsp; &nbsp; Player* unitPlayer;</span> </td>
                      </tr><tr>
                        <th> </th><th>11291</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>11292</th><td class="r"><span>&nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER)</span> </td>
                      </tr><tr>
                        <th> </th><th>11293</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unitPlayer = (Player*)this;</span> </td>
                      </tr><tr>
                        <th> </th><th>11294</th><td class="r"><span>&nbsp; &nbsp; else if(((Creature*)this)-&gt;isVehicle())</span> </td>
                      </tr><tr>
                        <th> </th><th>11295</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unitPlayer = (Player*)GetCharmer();</span> </td>
                      </tr><tr>
                        <th> </th><th>11296</th><td class="r"><span>&nbsp; &nbsp; else</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11297</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; unitPlayer = NULL;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11270</th><th>11298</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11271</th><th>11299</th><td class="l"><span>&nbsp; &nbsp; uint8 comboPoints = unitPlayer ? unitPlayer-&gt;GetComboPoints() : 0;</span> </td>
                  </tr><tr>
                          <th>11272</th><th>11300</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11676">…</a></th>
                  <th><a href="#L11704">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11676</th><th>11704</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>11677</th><th>11705</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_CUR_HP);</span> </td>
                  </tr><tr>
                          <th>11678</th><th>11706</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11679</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11707</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11680</th><th>11708</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11681</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>11682</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>11683</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>11684</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>11685</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>11686</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_CUR_HP);</span> </td>
                      </tr><tr>
                        <th>11687</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11709</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11710</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_CUR_HP);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11688</th><th>11711</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11689</th><th>11712</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>11690</th><th>11713</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11699">…</a></th>
                  <th><a href="#L11722">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11699</th><th>11722</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>11700</th><th>11723</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_MAX_HP);</span> </td>
                  </tr><tr>
                          <th>11701</th><th>11724</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11702</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11725</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11703</th><th>11726</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11704</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>11705</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>11706</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>11707</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>11708</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>11709</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MAX_HP);</span> </td>
                      </tr><tr>
                        <th>11710</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11727</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11728</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MAX_HP);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11711</th><th>11729</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11712</th><th>11730</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11713</th><th>11731</th><td class="l"><span>&nbsp; &nbsp; if(val &lt; health)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11743">…</a></th>
                  <th><a href="#L11761">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11743</th><th>11761</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>11744</th><th>11762</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_CUR_POWER);</span> </td>
                  </tr><tr>
                          <th>11745</th><th>11763</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11746</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11764</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11747</th><th>11765</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11748</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>11749</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>11750</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>11751</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>11752</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>11753</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_CUR_POWER);</span> </td>
                      </tr><tr>
                        <th>11754</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11766</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11767</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_CUR_POWER);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11755</th><th>11768</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11756</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Update the pet's character sheet with happiness damage bonus</span> </td>
                      </tr><tr>
                        <th>11757</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;getPetType() == HUNTER_PET &amp;&amp; power == POWER_HAPPINESS)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11769</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Creature*)this)-&gt;isPet())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11758</th><th>11770</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11759</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pet-&gt;UpdateDamagePhysical(BASE_ATTACK);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11771</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th> </th><th>11772</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Update the pet's character sheet with happiness damage bonus</span> </td>
                      </tr><tr>
                        <th> </th><th>11773</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;getPetType() == HUNTER_PET &amp;&amp; power == POWER_HAPPINESS)</span> </td>
                      </tr><tr>
                        <th> </th><th>11774</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>11775</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pet-&gt;UpdateDamagePhysical(BASE_ATTACK);</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11776</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11760</th><th>11777</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11761</th><th>11778</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11762</th><th>11779</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11772">…</a></th>
                  <th><a href="#L11789">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11772</th><th>11789</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>11773</th><th>11790</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_MAX_POWER);</span> </td>
                  </tr><tr>
                          <th>11774</th><th>11791</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11775</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11792</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11776</th><th>11793</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11777</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>11778</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>11779</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>11780</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>11781</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>11782</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MAX_POWER);</span> </td>
                      </tr><tr>
                        <th>11783</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11794</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11795</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MAX_POWER);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11784</th><th>11796</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11785</th><th>11797</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11786</th><th>11798</th><td class="l"><span>&nbsp; &nbsp; if(val &lt; cur_power)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11797">…</a></th>
                  <th><a href="#L11809">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11797</th><th>11809</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>11798</th><th>11810</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_CUR_POWER);</span> </td>
                  </tr><tr>
                          <th>11799</th><th>11811</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11800</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11812</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11801</th><th>11813</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11802</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>11803</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>11804</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>11805</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>11806</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>11807</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_CUR_POWER);</span> </td>
                      </tr><tr>
                        <th>11808</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11814</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11815</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_CUR_POWER);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11809</th><th>11816</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11810</th><th>11817</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>11811</th><th>11818</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11819">…</a></th>
                  <th><a href="#L11826">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11819</th><th>11826</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)this)-&gt;GetGroup())</span> </td>
                  </tr><tr>
                          <th>11820</th><th>11827</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_MAX_POWER);</span> </td>
                  </tr><tr>
                          <th>11821</th><th>11828</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11822</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(<del>((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>11829</th><td class="r"><span>&nbsp; &nbsp; else if(<ins>Unit* owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11823</th><th>11830</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>11824</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>11825</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>11826</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th>11827</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>11828</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr>
                        <th>11829</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MAX_POWER);</span> </td>
                      </tr><tr>
                        <th>11830</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>11831</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>11832</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MAX_POWER);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11831</th><th>11833</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>11832</th><th>11834</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>11833</th><th>11835</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L11881">…</a></th>
                  <th><a href="#L11883">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>11881</th><th>11883</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>11882</th><th>11884</th><td class="l"><span>void Unit::CleanupsBeforeDelete()</span> </td>
                  </tr><tr>
                          <th>11883</th><th>11885</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>11886</th><td class="r"><ins>&nbsp; &nbsp; ExitVehicle();&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // make sure we always leave vehicle, otherwise it will crash</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>11884</th><th>11887</th><td class="l"><span>&nbsp; &nbsp; if(m_uint32Values)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // only for fully created object</span> </td>
                  </tr><tr>
                          <th>11885</th><th>11888</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>11886</th><th>11889</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; InterruptNonMeleeSpells(true);</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L12618">…</a></th>
                  <th><a href="#L12621">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>12618</th><th>12621</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>12619</th><th>12622</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>12620</th><th>12623</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12621</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (GetTypeId() == TYPEID_PLAYER<del></del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>12624</th><td class="r"><span>&nbsp; &nbsp; if (GetTypeId() == TYPEID_PLAYER<ins>&nbsp;&amp;&amp; !GetVehicleGUID()</ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12622</th><th>12625</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetClientControl(this, !apply);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>12626</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>12627</th><td class="r"><ins>&nbsp; &nbsp; if (Unit* owner = GetCharmer())</ins> </td>
                  </tr><tr>
                          <th> </th><th>12628</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if (owner-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>12629</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetClientControl(this, !apply);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12623</th><th>12630</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>12624</th><th>12631</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>12625</th><th>12632</th><td class="l"><span>void Unit::SetConfused(bool apply, uint64 const&amp; casterGUID, uint32 spellID)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L12648">…</a></th>
                  <th><a href="#L12655">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>12648</th><th>12655</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>12649</th><th>12656</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>12650</th><th>12657</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12651</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER<del></del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>12658</th><td class="r"><span>&nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER<ins>&nbsp;&amp;&amp; !GetVehicleGUID()</ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12652</th><th>12659</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SetClientControl(this, !apply);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>12660</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>12661</th><td class="r"><ins>&nbsp; &nbsp; if (Unit* owner = GetCharmer())</ins> </td>
                  </tr><tr>
                          <th> </th><th>12662</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if (owner-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>12663</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetClientControl(this, !apply);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12653</th><th>12664</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>12654</th><th>12665</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>12655</th><th>12666</th><td class="l"><span>void Unit::SetFeignDeath(bool apply, uint64 const&amp; casterGUID, uint32 /*spellID*/)</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L12753">…</a></th>
                  <th><a href="#L12764">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>12753</th><th>12764</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>12754</th><th>12765</th><td class="l"><span>&nbsp; &nbsp; SetUInt32Value(UNIT_FIELD_DISPLAYID, modelId);</span> </td>
                  </tr><tr>
                          <th>12755</th><th>12766</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12756</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(<del>GetTypeId() == TYPEID_UNIT &amp;&amp; ((Creature*)this)-&gt;isPet</del>())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>12767</th><td class="r"><span>&nbsp; &nbsp; if(<ins>Unit *owner = GetCharmerOrOwner</ins>())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12757</th><th>12768</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>12758</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>12759</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!pet-&gt;isControlled())</span> </td>
                      </tr><tr>
                        <th>12760</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th>12761</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>12762</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>12769</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>12763</th><th>12770</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_MODEL_ID);</span> </td>
                  </tr><tr>
                          <th>12764</th><th>12771</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>12765</th><th>12772</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L13058">…</a></th>
                  <th><a href="#L13065">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>13058</th><th>13065</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; player-&gt;SetAuraUpdateMask(slot);</span> </td>
                  </tr><tr>
                          <th>13059</th><th>13066</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>13060</th><th>13067</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>13061</th><th> </th><td class="l"><span>&nbsp; &nbsp; else if(GetTypeId() == TYPEID_UNIT<del>&nbsp;&amp;&amp; ((Creature*)this)-&gt;isPet()</del>)</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>13068</th><td class="r"><span>&nbsp; &nbsp; else if(GetTypeId() == TYPEID_UNIT<ins></ins>)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13062</th><th>13069</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>13063</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Pet *pet = ((Pet*)this);</span> </td>
                      </tr><tr>
                        <th>13064</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(pet-&gt;isControlled())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>13070</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(Unit *owner = GetCharmerOrOwner())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13065</th><th>13071</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>13066</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *owner = GetOwner();</span> </td>
                      </tr><tr>
                        <th>13067</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(owner &amp;&amp; (owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>13072</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if((owner-&gt;GetTypeId() == TYPEID_PLAYER) &amp;&amp; ((Player*)owner)-&gt;GetGroup())</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13068</th><th>13073</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>13069</th><th>13074</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)owner)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_FLAG_PET_AURAS);</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>13070</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <del>pet-&gt;</del>SetAuraUpdateMask(slot);</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>13075</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <ins></ins>SetAuraUpdateMask(slot);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13071</th><th>13076</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>13072</th><th>13077</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>13073</th><th>13078</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L13374">…</a></th>
                  <th><a href="#L13379">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>13374</th><th>13379</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;TeleportTo(GetMapId(), x, y, z, orientation, TELE_TO_NOT_LEAVE_TRANSPORT | TELE_TO_NOT_LEAVE_COMBAT | TELE_TO_NOT_UNSUMMON_PET | (casting ? TELE_TO_SPELL : 0));</span> </td>
                  </tr><tr>
                          <th>13375</th><th>13380</th><td class="l"><span>&nbsp; &nbsp; else</span> </td>
                  </tr><tr>
                          <th>13376</th><th>13381</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>13382</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ExitVehicle();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13377</th><th>13383</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Creature* c = (Creature*)this;</span> </td>
                  </tr><tr>
                          <th>13378</th><th>13384</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Creature relocation acts like instant movement generator, so current generator expects interrupt/reset calls to react properly</span> </td>
                  </tr><tr>
                          <th>13379</th><th>13385</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; if (!c-&gt;GetMotionMaster()-&gt;empty())</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L13444">…</a></th>
                  <th><a href="#L13450">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>13444</th><th>13450</th><td class="l"><span>&nbsp; &nbsp; void operator()(Unit* unit) const { unit-&gt;SetPvP(state); }</span> </td>
                  </tr><tr>
                          <th>13445</th><th>13451</th><td class="l"><span>&nbsp; &nbsp; bool state;</span> </td>
                  </tr><tr>
                          <th>13446</th><th>13452</th><td class="l"><span>};</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>13453</th><td class="r"><ins>void Unit::EnterVehicle(Vehicle *vehicle, int8 seat_id, bool force)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13454</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>13455</th><td class="r"><ins>&nbsp; &nbsp; // dont allow multiple vehicles</ins> </td>
                  </tr><tr>
                          <th> </th><th>13456</th><td class="r"><ins>&nbsp; &nbsp; ExitVehicle();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13457</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13458</th><td class="r"><ins>&nbsp; &nbsp; RemoveSpellsCausingAura(SPELL_AURA_MOUNTED);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13459</th><td class="r"><ins>&nbsp; &nbsp; // NOTE : shapeshift too?</ins> </td>
                  </tr><tr>
                          <th> </th><th>13460</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13461</th><td class="r"><ins>&nbsp; &nbsp; Vehicle *v = vehicle-&gt;FindFreeSeat(&amp;seat_id, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13462</th><td class="r"><ins>&nbsp; &nbsp; if(!v)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13463</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13464</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13465</th><td class="r"><ins>&nbsp; &nbsp; VehicleEntry const *ve = sVehicleStore.LookupEntry(v-&gt;GetVehicleId());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13466</th><td class="r"><ins>&nbsp; &nbsp; if(!ve)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13467</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13468</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13469</th><td class="r"><ins>&nbsp; &nbsp; VehicleSeatEntry const *veSeat = sVehicleSeatStore.LookupEntry(ve-&gt;m_seatID[seat_id]);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13470</th><td class="r"><ins>&nbsp; &nbsp; if(!veSeat)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13471</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13472</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13473</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.OffsetX = (veSeat-&gt;m_attachmentOffsetX + v-&gt;GetObjectSize()) * GetFloatValue(OBJECT_FIELD_SCALE_X);&nbsp; &nbsp; &nbsp; // transport offsetX</ins> </td>
                  </tr><tr>
                          <th> </th><th>13474</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.OffsetY = (veSeat-&gt;m_attachmentOffsetY + v-&gt;GetObjectSize()) * GetFloatValue(OBJECT_FIELD_SCALE_X);&nbsp; &nbsp; &nbsp; // transport offsetY</ins> </td>
                  </tr><tr>
                          <th> </th><th>13475</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.OffsetZ = (veSeat-&gt;m_attachmentOffsetZ + v-&gt;GetObjectSize()) * GetFloatValue(OBJECT_FIELD_SCALE_X);&nbsp; &nbsp; &nbsp; // transport offsetZ</ins> </td>
                  </tr><tr>
                          <th> </th><th>13476</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.Orientation = veSeat-&gt;m_passengerYaw;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // NOTE : needs confirmation</ins> </td>
                  </tr><tr>
                          <th> </th><th>13477</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.c_time = v-&gt;GetCreationTime();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13478</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.dbc_seat = veSeat-&gt;m_ID;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13479</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.seat = seat_id;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13480</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.s_flags = sObjectMgr.GetSeatFlags(veSeat-&gt;m_ID);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13481</th><td class="r"><ins>&nbsp; &nbsp; m_SeatData.v_flags = v-&gt;GetVehicleFlags();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13482</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13483</th><td class="r"><ins>&nbsp; &nbsp; addUnitState(UNIT_STAT_ON_VEHICLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13484</th><td class="r"><ins>&nbsp; &nbsp; InterruptNonMeleeSpells(false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13485</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13486</th><td class="r"><ins>&nbsp; &nbsp; if(Pet *pet = GetPet())</ins> </td>
                  </tr><tr>
                          <th> </th><th>13487</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; pet-&gt;Remove(PET_SAVE_AS_CURRENT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13488</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13489</th><td class="r"><ins>&nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13490</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;SendEnterVehicle(v);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13491</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13492</th><td class="r"><ins>&nbsp; &nbsp; WorldPacket data(SMSG_MONSTER_MOVE_TRANSPORT, 60);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13493</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13494</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; v-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13495</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint8(m_SeatData.seat);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13496</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint8(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// new in 3.1</ins> </td>
                  </tr><tr>
                          <th> </th><th>13497</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; v-&gt;GetPositionX() &lt;&lt; v-&gt;GetPositionY() &lt;&lt; v-&gt;GetPositionZ();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13498</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(getMSTime());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13499</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13500</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint8(4);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// unknown</ins> </td>
                  </tr><tr>
                          <th> </th><th>13501</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// facing angle</ins> </td>
                  </tr><tr>
                          <th> </th><th>13502</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13503</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(SPLINEFLAG_UNKNOWN5);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13504</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13505</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Time in between points</ins> </td>
                  </tr><tr>
                          <th> </th><th>13506</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // 1 single waypoint</ins> </td>
                  </tr><tr>
                          <th> </th><th>13507</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; m_SeatData.OffsetX;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13508</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; m_SeatData.OffsetY;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13509</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; m_SeatData.OffsetZ;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13510</th><td class="r"><ins>&nbsp; &nbsp; SendMessageToSet(&amp;data, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13511</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13512</th><td class="r"><ins>&nbsp; &nbsp; v-&gt;AddPassenger(this, seat_id, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13513</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>13514</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13515</th><td class="r"><ins>void Unit::ExitVehicle()</ins> </td>
                  </tr><tr>
                          <th> </th><th>13516</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>13517</th><td class="r"><ins>&nbsp; &nbsp; if(uint64 vehicleGUID = GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>13518</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>13519</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; float v_size = 0.0f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13520</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</ins> </td>
                  </tr><tr>
                          <th> </th><th>13521</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>13522</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(m_SeatData.s_flags &amp; SF_MAIN_RIDER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13523</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>13524</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(vehicle-&gt;GetVehicleFlags() &amp; VF_DESPAWN_AT_LEAVE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13525</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>13526</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // will be deleted at next update</ins> </td>
                  </tr><tr>
                          <th> </th><th>13527</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;SetSpawnDuration(1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13528</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>13529</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>13530</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; v_size = vehicle-&gt;GetObjectSize();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13531</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;RemovePassenger(this);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13532</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>13533</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetVehicleGUID(0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13534</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13535</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; clearUnitState(UNIT_STAT_ON_VEHICLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13536</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13537</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13538</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>13539</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;ResummonPetTemporaryUnSummonedIfAny();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13540</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;m_movementInfo.RemoveMovementFlag(MOVEFLAG_ONTRANSPORT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13541</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;m_movementInfo.RemoveMovementFlag(MOVEFLAG_ROOT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13542</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>13543</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13544</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; float x = GetPositionX();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13545</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; float y = GetPositionY();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13546</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; float z = GetPositionZ() + 2.0f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13547</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; GetClosePoint(x, y, z, 2.0f + v_size);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13548</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SendMonsterMove(x, y, z, SPLINETYPE_NORMAL, SPLINEFLAG_WALKMODE, 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13549</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>13550</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>13551</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13552</th><td class="r"><ins>void Unit::BuildVehicleInfo(Unit *target)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13553</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>13554</th><td class="r"><ins>&nbsp; &nbsp; if(!target)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13555</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13556</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13557</th><td class="r"><ins>&nbsp; &nbsp; if(!target-&gt;GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>13558</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>13559</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>13560</th><td class="r"><ins>&nbsp; &nbsp; uint32 veh_time = getMSTimeDiff(target-&gt;m_SeatData.c_time,getMSTime());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13561</th><td class="r"><ins>&nbsp; &nbsp; WorldPacket data(MSG_MOVE_HEARTBEAT, 100);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13562</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; target-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>13563</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(MOVEFLAG_ONTRANSPORT | MOVEFLAG_ROOT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13564</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint16(0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13565</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(getMSTime());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13566</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;GetPositionX());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13567</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;GetPositionY());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13568</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;GetPositionZ());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13569</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;GetOrientation());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13570</th><td class="r"><ins>&nbsp; &nbsp; data.appendPackGUID(target-&gt;GetVehicleGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>13571</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;m_SeatData.OffsetX);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13572</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;m_SeatData.OffsetY);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13573</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;m_SeatData.OffsetZ);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13574</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; float(target-&gt;m_SeatData.Orientation);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13575</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(veh_time);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13576</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint8 (target-&gt;m_SeatData.seat);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13577</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>13578</th><td class="r"><ins>&nbsp; &nbsp; if(GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>13579</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ((Player*)this)-&gt;GetSession()-&gt;SendPacket(&amp;data);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>13580</th><td class="r"><ins>}</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>13447</th><th>13581</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>13448</th><th>13582</th><td class="l"><span>void Unit::SetPvP( bool state )</span> </td>
                  </tr><tr>
                          <th>13449</th><th>13583</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Unit.h</a>
        </h2>
        <pre>diff --git a/src/game/Unit.h b/src/game/Unit.h
index 23acdb5..49ea791 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Unit.h">
                      a
                  </th>
                  <th title="File b/src/game/Unit.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>300</th><th>300</th><td class="l"><span>class Path;</span> </td>
                  </tr><tr>
                          <th>301</th><th>301</th><td class="l"><span>class PetAura;</span> </td>
                  </tr><tr>
                          <th>302</th><th>302</th><td class="l"><span>class Totem;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>303</th><td class="r"><ins>class Vehicle;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>303</th><th>304</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>304</th><th>305</th><td class="l"><span>struct SpellImmune</span> </td>
                  </tr><tr>
                          <th>305</th><th>306</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L433">…</a></th>
                  <th><a href="#L434">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>433</th><th>434</th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_FOLLOW_MOVE&nbsp; &nbsp; &nbsp;= 0x00008000,</span> </td>
                  </tr><tr>
                          <th>434</th><th>435</th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_FLEEING&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x00010000,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// FleeMovementGenerator/TimedFleeingMovementGenerator active/onstack</span> </td>
                  </tr><tr>
                          <th>435</th><th>436</th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_FLEEING_MOVE&nbsp; &nbsp; = 0x00020000,</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>437</th><td class="r"><ins>&nbsp; &nbsp; UNIT_STAT_ON_VEHICLE&nbsp; &nbsp; &nbsp; = 0x00040000,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Unit is on vehicle</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>436</th><th>438</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>437</th><th>439</th><td class="l"><span>&nbsp; &nbsp; // masks (only for check)</span> </td>
                  </tr><tr>
                          <th>438</th><th>440</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>439</th><th>441</th><td class="l"><span>&nbsp; &nbsp; // can't move currently</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>440</th><th> </th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_CAN_NOT_MOVE&nbsp; &nbsp; = UNIT_STAT_ROOT | UNIT_STAT_STUNNED | UNIT_STAT_DIED<del></del>,</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>442</th><td class="r"><span>&nbsp; &nbsp; UNIT_STAT_CAN_NOT_MOVE&nbsp; &nbsp; = UNIT_STAT_ROOT | UNIT_STAT_STUNNED | UNIT_STAT_DIED<ins>&nbsp;| UNIT_STAT_ON_VEHICLE</ins>,</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>441</th><th>443</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>442</th><th>444</th><td class="l"><span>&nbsp; &nbsp; // stay by different reasons</span> </td>
                  </tr><tr>
                          <th>443</th><th>445</th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_NOT_MOVE&nbsp; &nbsp; &nbsp; &nbsp; = UNIT_STAT_ROOT | UNIT_STAT_STUNNED | UNIT_STAT_DIED |</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>444</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_DISTRACTED<del></del>,</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>446</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_DISTRACTED<ins>&nbsp;| UNIT_STAT_ON_VEHICLE</ins>,</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>445</th><th>447</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>446</th><th>448</th><td class="l"><span>&nbsp; &nbsp; // stay or scripted movement for effect( = in player case you can't move by client command)</span> </td>
                  </tr><tr>
                          <th>447</th><th>449</th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_NO_FREE_MOVE&nbsp; &nbsp; = UNIT_STAT_ROOT | UNIT_STAT_STUNNED | UNIT_STAT_DIED |</span> </td>
                  </tr><tr>
                          <th>448</th><th>450</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_IN_FLIGHT |</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>449</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_CONFUSED | UNIT_STAT_FLEEING<del></del>,</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>451</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_CONFUSED | UNIT_STAT_FLEEING<ins>&nbsp;| UNIT_STAT_ON_VEHICLE</ins>,</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>450</th><th>452</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>451</th><th>453</th><td class="l"><span>&nbsp; &nbsp; // not react at move in sight or other</span> </td>
                  </tr><tr>
                          <th>452</th><th>454</th><td class="l"><span>&nbsp; &nbsp; UNIT_STAT_CAN_NOT_REACT&nbsp; &nbsp;= UNIT_STAT_STUNNED | UNIT_STAT_DIED |</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>453</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_CONFUSED | UNIT_STAT_FLEEING<del></del>,</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>455</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UNIT_STAT_CONFUSED | UNIT_STAT_FLEEING<ins>&nbsp;| UNIT_STAT_ON_VEHICLE</ins>,</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>454</th><th>456</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>455</th><th>457</th><td class="l"><span>&nbsp; &nbsp; // masks (for check or reset)</span> </td>
                  </tr><tr>
                          <th>456</th><th>458</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1073">…</a></th>
                  <th><a href="#L1075">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1073</th><th>1075</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1074</th><th>1076</th><td class="l"><span>struct SpellProcEventEntry;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// used only privately</span> </td>
                  </tr><tr>
                          <th>1075</th><th>1077</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1078</th><td class="r"><ins>// vehicle system</ins> </td>
                  </tr><tr>
                          <th> </th><th>1079</th><td class="r"><ins>struct SeatData</ins> </td>
                  </tr><tr>
                          <th> </th><th>1080</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>1081</th><td class="r"><ins>&nbsp; &nbsp; SeatData() : OffsetX(0.0f), OffsetY(0.0f),&nbsp; OffsetZ(0.0f), Orientation(0.0f),</ins> </td>
                  </tr><tr>
                          <th> </th><th>1082</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c_time(0), dbc_seat(0), seat(0), s_flags(0), v_flags(0) {}</ins> </td>
                  </tr><tr>
                          <th> </th><th>1083</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>1084</th><td class="r"><ins>&nbsp; &nbsp; float OffsetX;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1085</th><td class="r"><ins>&nbsp; &nbsp; float OffsetY;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1086</th><td class="r"><ins>&nbsp; &nbsp; float OffsetZ;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1087</th><td class="r"><ins>&nbsp; &nbsp; float Orientation;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1088</th><td class="r"><ins>&nbsp; &nbsp; uint32 c_time;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1089</th><td class="r"><ins>&nbsp; &nbsp; uint32 dbc_seat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1090</th><td class="r"><ins>&nbsp; &nbsp; uint8 seat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1091</th><td class="r"><ins>&nbsp; &nbsp; //custom, used as speedup</ins> </td>
                  </tr><tr>
                          <th> </th><th>1092</th><td class="r"><ins>&nbsp; &nbsp; uint32 s_flags;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1093</th><td class="r"><ins>&nbsp; &nbsp; uint32 v_flags;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1094</th><td class="r"><ins>};</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1095</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1076</th><th>1096</th><td class="l"><span>class MANGOS_DLL_SPEC Unit : public WorldObject</span> </td>
                  </tr><tr>
                          <th>1077</th><th>1097</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>1078</th><th>1098</th><td class="l"><span>&nbsp; &nbsp; public:</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1329">…</a></th>
                  <th><a href="#L1349">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1329</th><th>1349</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>1330</th><th>1350</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HasAura(uint32 spellId) const;</span> </td>
                  </tr><tr>
                          <th>1331</th><th>1351</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1352</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; const uint64&amp; GetAuraUpdateMask() const { return m_auraUpdateMask; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1353</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void SetAuraUpdateMask(uint8 slot) { m_auraUpdateMask |= (uint64(1) &lt;&lt; slot); }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1354</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void ResetAuraUpdateMask() { m_auraUpdateMask = 0; }</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1355</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1332</th><th>1356</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool virtual HasSpell(uint32 /*spellID*/) const { return false; }</span> </td>
                  </tr><tr>
                          <th>1333</th><th>1357</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1334</th><th>1358</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool HasStealthAura()&nbsp; &nbsp; &nbsp; const { return HasAuraType(SPELL_AURA_MOD_STEALTH); }</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1424">…</a></th>
                  <th><a href="#L1448">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1424</th><th>1448</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Unit* GetCharm() const;</span> </td>
                  </tr><tr>
                          <th>1425</th><th>1449</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void Uncharm();</span> </td>
                  </tr><tr>
                          <th>1426</th><th>1450</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Unit* GetCharmerOrOwner() const { return GetCharmerGUID() ? GetCharmer() : GetOwner(); }</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>1451</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Unit* GetCharmOrPet() const { return GetCharmGUID() ? GetCharm() : (Unit*)GetPet(); }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1427</th><th>1452</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; Unit* GetCharmerOrOwnerOrSelf()</span> </td>
                  </tr><tr>
                          <th>1428</th><th>1453</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>1429</th><th>1454</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Unit* u = GetCharmerOrOwner())</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1802">…</a></th>
                  <th><a href="#L1827">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1802</th><th>1827</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; // Movement info</span> </td>
                  </tr><tr>
                          <th>1803</th><th>1828</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; MovementInfo m_movementInfo;</span> </td>
                  </tr><tr>
                          <th>1804</th><th>1829</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1830</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// vehicle system</ins> </td>
                  </tr><tr>
                          <th> </th><th>1831</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;void EnterVehicle(Vehicle *vehicle, int8 seat_id, bool force = false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>1832</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;void ExitVehicle();</ins> </td>
                  </tr><tr>
                          <th> </th><th>1833</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;uint64 GetVehicleGUID() { return m_vehicleGUID; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1834</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;void SetVehicleGUID(uint64 guid) { m_vehicleGUID = guid; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>1835</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// using extra variables to avoid problems with transports</ins> </td>
                  </tr><tr>
                          <th> </th><th>1836</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SeatData m_SeatData;</ins> </td>
                  </tr><tr>
                          <th> </th><th>1837</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;void BuildVehicleInfo(Unit *target = NULL);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1838</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1805</th><th>1839</th><td class="l"><span>&nbsp; &nbsp; protected:</span> </td>
                  </tr><tr>
                          <th>1806</th><th>1840</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; explicit Unit ();</span> </td>
                  </tr><tr>
                          <th>1807</th><th>1841</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L1849">…</a></th>
                  <th><a href="#L1883">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>1849</th><th>1883</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_reactiveTimer[MAX_REACTIVE];</span> </td>
                  </tr><tr>
                          <th>1850</th><th>1884</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_regenTimer;</span> </td>
                  </tr><tr>
                          <th>1851</th><th>1885</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_lastManaUseTimer;</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1886</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint64&nbsp; m_auraUpdateMask;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1887</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint64 m_vehicleGUID;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1852</th><th>1888</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>1853</th><th>1889</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint64 m_InteractionObject;</span> </td>
                  </tr><tr>
                          <th>1854</th><th>1890</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Vehicle.cpp</a>
        </h2>
        <pre>diff --git a/src/game/Vehicle.cpp b/src/game/Vehicle.cpp
index b92e542..92e2641 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Vehicle.cpp">
                      a
                  </th>
                  <th title="File b/src/game/Vehicle.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>18</th><th>18</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>19</th><th>19</th><td class="l"><span>#include "Common.h"</span> </td>
                  </tr><tr>
                          <th>20</th><th>20</th><td class="l"><span>#include "Log.h"</span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>21</th><th> </th><td class="l"><del>#include "ObjectMgr.h"</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>22</th><th>21</th><td class="l"><span>#include "Vehicle.h"</span> </td>
                  </tr><tr>
                          <th>23</th><th>22</th><td class="l"><span>#include "Unit.h"</span> </td>
                  </tr><tr>
                          <th>24</th><th>23</th><td class="l"><span>#include "Util.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>24</th><td class="r"><ins>#include "WorldPacket.h"</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>25</th><td class="r"><ins>#include "InstanceData.h"</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>25</th><th>26</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>26</th><th> </th><td class="l"><span>Vehicle::Vehicle() : Creature(CREATURE_SUBTYPE_VEHICLE), m_vehicleId(0)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>27</th><td class="r"><span>Vehicle::Vehicle() : Creature(CREATURE_SUBTYPE_VEHICLE), m_vehicleId(0), m_vehicleInfo(NULL), m_spawnduration(0),</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>28</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;despawn(false), m_creation_time(0), m_VehicleData(NULL)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>27</th><th>29</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>28</th><th>30</th><td class="l"><span>&nbsp; &nbsp; m_updateFlag = (UPDATEFLAG_LIVING | UPDATEFLAG_HAS_POSITION | UPDATEFLAG_VEHICLE);</span> </td>
                  </tr><tr>
                          <th>29</th><th>31</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L54">…</a></th>
                  <th><a href="#L56">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>54</th><th>56</th><td class="l"><span>void Vehicle::setDeathState(DeathState s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// overwrite virtual Creature::setDeathState and Unit::setDeathState</span> </td>
                  </tr><tr>
                          <th>55</th><th>57</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>56</th><th>58</th><td class="l"><span>&nbsp; &nbsp; Creature::setDeathState(s);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>59</th><td class="r"><ins>&nbsp; &nbsp; if(s == JUST_DIED)</ins> </td>
                  </tr><tr>
                          <th> </th><th>60</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>61</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(GetVehicleFlags() &amp; VF_DESPAWN_NPC)</ins> </td>
                  </tr><tr>
                          <th> </th><th>62</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Dismiss();</ins> </td>
                  </tr><tr>
                          <th> </th><th>63</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>64</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RemoveAllPassengers();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>65</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>57</th><th>66</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>58</th><th>67</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>59</th><th>68</th><td class="l"><span>void Vehicle::Update(uint32 diff)</span> </td>
                  </tr><tr>
                          <th>60</th><th>69</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>61</th><th>70</th><td class="l"><span>&nbsp; &nbsp; Creature::Update(diff);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>71</th><td class="r"><ins>&nbsp; &nbsp; InstallAllAccessories();</ins> </td>
                  </tr><tr>
                          <th> </th><th>72</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>73</th><td class="r"><ins>&nbsp; &nbsp; if(despawn)</ins> </td>
                  </tr><tr>
                          <th> </th><th>74</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>75</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_spawnduration -= diff;</ins> </td>
                  </tr><tr>
                          <th> </th><th>76</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(m_spawnduration &lt; 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>77</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Dismiss();</ins> </td>
                  </tr><tr>
                          <th> </th><th>78</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; despawn = false;</ins> </td>
                  </tr><tr>
                          <th> </th><th>79</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>80</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>81</th><td class="r"><ins>&nbsp; &nbsp; if(m_regenTimer &lt;= diff)</ins> </td>
                  </tr><tr>
                          <th> </th><th>82</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>83</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; RegeneratePower(getPowerType());</ins> </td>
                  </tr><tr>
                          <th> </th><th>84</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_regenTimer = 4000;</ins> </td>
                  </tr><tr>
                          <th> </th><th>85</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>86</th><td class="r"><ins>&nbsp; &nbsp; else</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>87</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_regenTimer -= diff;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>62</th><th>88</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>63</th><th>89</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>64</th><th> </th><td class="l"><span>bool Vehicle::Create(uint32 guidlow, Map *map, uint32 Entry, uint32 vehicleId, uint32 team)</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>90</th><td class="r"><span>void Vehicle::RegeneratePower(Powers power)</span> </td>
                      </tr><tr>
                        <th> </th><th>91</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>92</th><td class="r"><span>&nbsp; &nbsp; uint32 curValue = GetPower(power);</span> </td>
                      </tr><tr>
                        <th> </th><th>93</th><td class="r"><span>&nbsp; &nbsp; uint32 maxValue = GetMaxPower(power);</span> </td>
                      </tr><tr>
                        <th> </th><th>94</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>95</th><td class="r"><span>&nbsp; &nbsp; if (curValue &gt;= maxValue)</span> </td>
                      </tr><tr>
                        <th> </th><th>96</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>97</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>98</th><td class="r"><span>&nbsp; &nbsp; float addvalue = 0.0f;</span> </td>
                      </tr><tr>
                        <th> </th><th>99</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>100</th><td class="r"><span>&nbsp; &nbsp; // hack: needs more research of power type from the dbc. </span> </td>
                      </tr><tr>
                        <th> </th><th>101</th><td class="r"><span>&nbsp; &nbsp; // It must contains some info about vehicles like Salvaged Chopper.</span> </td>
                      </tr><tr>
                        <th> </th><th>102</th><td class="r"><span>&nbsp; &nbsp; if(m_vehicleInfo-&gt;m_powerType == POWER_TYPE_PYRITE)</span> </td>
                      </tr><tr>
                        <th> </th><th>103</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return;</span> </td>
                      </tr><tr>
                        <th> </th><th>104</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>105</th><td class="r"><span>&nbsp; &nbsp; addvalue = 20.0f;</span> </td>
                      </tr><tr>
                        <th> </th><th>106</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>107</th><td class="r"><span>&nbsp; &nbsp; ModifyPower(power, (int32)addvalue);</span> </td>
                      </tr><tr>
                        <th> </th><th>108</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>109</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>110</th><td class="r"><span>bool Vehicle::Create(uint32 guidlow, Map *map, uint32 phaseMask, uint32 Entry, uint32 vehicleId, uint32 team, const CreatureData *data)</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>65</th><th>111</th><td class="l"><span>{</span> </td>
                  </tr><tr>
                          <th>66</th><th>112</th><td class="l"><span>&nbsp; &nbsp; SetMap(map);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>113</th><td class="r"><ins>&nbsp; &nbsp; SetPhaseMask(phaseMask,false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>114</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>115</th><td class="r"><ins>&nbsp; &nbsp; CreatureInfo const *cinfo = sObjectMgr.GetCreatureTemplate(Entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>116</th><td class="r"><ins>&nbsp; &nbsp; if(!cinfo)</ins> </td>
                  </tr><tr>
                          <th> </th><th>117</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>118</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; sLog.outErrorDb("Creature entry %u does not exist.", Entry);</ins> </td>
                  </tr><tr>
                          <th> </th><th>119</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return false;</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>120</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>67</th><th>121</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>68</th><th>122</th><td class="l"><span>&nbsp; &nbsp; Object::_Create(guidlow, Entry, HIGHGUID_VEHICLE);</span> </td>
                  </tr><tr>
                          <th>69</th><th>123</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>70</th><th> </th><td class="l"><span>&nbsp; &nbsp; if(!<del>InitEntry(Entry, team</del>))</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>124</th><td class="r"><span>&nbsp; &nbsp; if(!<ins>UpdateEntry(Entry, team, data</ins>))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>71</th><th>125</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                  </tr><tr>
                          <th>72</th><th>126</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>73</th><th> </th><td class="l"><span>&nbsp; &nbsp; m_defaultMovementType = IDLE_MOTION_TYPE;</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>127</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleId)</span> </td>
                      </tr><tr>
                        <th> </th><th>128</th><td class="r"><span>&nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>129</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; CreatureDataAddon const *cainfo = GetCreatureAddon();</span> </td>
                      </tr><tr>
                        <th> </th><th>130</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; if(!cainfo)</span> </td>
                      </tr><tr>
                        <th> </th><th>131</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                      </tr><tr>
                        <th> </th><th>132</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; vehicleId = cainfo-&gt;vehicle_id;</span> </td>
                      </tr><tr>
                        <th> </th><th>133</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>134</th><td class="r"><span>&nbsp; &nbsp; if(!SetVehicleId(vehicleId))</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>135</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>74</th><th>136</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>75</th><th> </th><td class="l"><span>&nbsp; &nbsp; <del>AIM_Initialize</del>();</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>137</th><td class="r"><span>&nbsp; &nbsp; <ins>LoadCreaturesAddon</ins>();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>76</th><th>138</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>77</th><th> </th><td class="l"><span>&nbsp; &nbsp; SetVehicleId(vehicleId);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>139</th><td class="r"><span>&nbsp; &nbsp; m_regenHealth = false;</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>140</th><td class="r"><span>&nbsp; &nbsp; m_creation_time = getMSTime();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>78</th><th>141</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="rem">
                  <tr class="last first">
                          <th>79</th><th> </th><td class="l"><del>&nbsp; &nbsp; SetUInt32Value(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);</del> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>80</th><th>142</th><td class="l"><span>&nbsp; &nbsp; SetFloatValue(UNIT_FIELD_HOVERHEIGHT, 1.0f);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>143</th><td class="r"><ins>&nbsp; &nbsp; //RemoveMonsterMoveFlag(MONSTER_MOVE_WALK);</ins> </td>
                  </tr><tr>
                          <th> </th><th>144</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>145</th><td class="r"><ins>&nbsp; &nbsp; //Notify the map's instance data.</ins> </td>
                  </tr><tr>
                          <th> </th><th>146</th><td class="r"><ins>&nbsp; &nbsp; //Only works if you create the object in it, not if it is moves to that map.</ins> </td>
                  </tr><tr>
                          <th> </th><th>147</th><td class="r"><ins>&nbsp; &nbsp; //Normally non-players do not teleport to other maps.</ins> </td>
                  </tr><tr>
                          <th> </th><th>148</th><td class="r"><ins>&nbsp; &nbsp; if(map-&gt;IsDungeon() &amp;&amp; ((InstanceMap*)map)-&gt;GetInstanceData())</ins> </td>
                  </tr><tr>
                          <th> </th><th>149</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>150</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; ((InstanceMap*)map)-&gt;GetInstanceData()-&gt;OnCreatureCreate(this);</ins> </td>
                  </tr><tr>
                          <th> </th><th>151</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>152</th><td class="r"><ins>&nbsp; &nbsp; </ins> </td>
                  </tr><tr>
                          <th> </th><th>153</th><td class="r"><ins>&nbsp; &nbsp; if(m_vehicleInfo-&gt;m_powerType == POWER_TYPE_STEAM)</ins> </td>
                  </tr><tr>
                          <th> </th><th>154</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>155</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setPowerType(POWER_ENERGY);</ins> </td>
                  </tr><tr>
                          <th> </th><th>156</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetMaxPower(POWER_ENERGY, 100);</ins> </td>
                  </tr><tr>
                          <th> </th><th>157</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetPower(POWER_ENERGY, 100);</ins> </td>
                  </tr><tr>
                          <th> </th><th>158</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>159</th><td class="r"><ins>&nbsp; &nbsp; else if(m_vehicleInfo-&gt;m_powerType == POWER_TYPE_PYRITE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>160</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>161</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; setPowerType(POWER_ENERGY);</ins> </td>
                  </tr><tr>
                          <th> </th><th>162</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetMaxPower(POWER_ENERGY, 50);</ins> </td>
                  </tr><tr>
                          <th> </th><th>163</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetPower(POWER_ENERGY, 50);</ins> </td>
                  </tr><tr>
                          <th> </th><th>164</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>165</th><td class="r"><ins>&nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>166</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>167</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; for (uint32 i = 0; i &lt; MAX_VEHICLE_SPELLS; ++i)</ins> </td>
                  </tr><tr>
                          <th> </th><th>168</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>169</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!GetVehicleData()-&gt;v_spells[i])</ins> </td>
                  </tr><tr>
                          <th> </th><th>170</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>171</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SpellEntry const *spellInfo = sSpellStore.LookupEntry(GetVehicleData()-&gt;v_spells[i]);</ins> </td>
                  </tr><tr>
                          <th> </th><th>172</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!spellInfo)</ins> </td>
                  </tr><tr>
                          <th> </th><th>173</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>174</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>175</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(spellInfo-&gt;powerType == POWER_MANA)</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>176</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>81</th><th>177</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>82</th><th> </th><td class="l"><span>&nbsp; &nbsp; CreatureInfo const *ci = GetCreatureInfo();</span> </td>
                      </tr><tr>
                        <th>83</th><th> </th><td class="l"><span>&nbsp; &nbsp; setFaction(team == ALLIANCE ? ci-&gt;faction_A : ci-&gt;faction_H);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>178</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(spellInfo-&gt;powerType == POWER_ENERGY)</span> </td>
                      </tr><tr>
                        <th> </th><th>179</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                      </tr><tr>
                        <th> </th><th>180</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setPowerType(POWER_ENERGY);</span> </td>
                      </tr><tr>
                        <th> </th><th>181</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetMaxPower(POWER_ENERGY, 100);</span> </td>
                      </tr><tr>
                        <th> </th><th>182</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetPower(POWER_ENERGY, 100);</span> </td>
                      </tr><tr>
                        <th> </th><th>183</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span> </td>
                      </tr><tr>
                        <th> </th><th>184</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>185</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>186</th><td class="r"><span>&nbsp; &nbsp; }</span> </td>
                      </tr><tr>
                        <th> </th><th>187</th><td class="r"><span>&nbsp; &nbsp; SetHealth(GetMaxHealth());</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>188</th><td class="r"><span>&nbsp; &nbsp; InstallAllAccessories();</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>84</th><th>189</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>85</th><th> </th><td class="l"><span>&nbsp; &nbsp; SelectLevel(ci);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>190</th><td class="r"><span>&nbsp; &nbsp; return true;</span> </td>
                      </tr><tr>
                        <th> </th><th>191</th><td class="r"><span>}</span> </td>
                      </tr><tr>
                        <th> </th><th>192</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>193</th><td class="r"><span>bool Vehicle::SetVehicleId(uint32 vehicleid)</span> </td>
                      </tr><tr>
                        <th> </th><th>194</th><td class="r"><span>{</span> </td>
                      </tr><tr>
                        <th> </th><th>195</th><td class="r"><span>&nbsp; &nbsp; VehicleEntry const *vehicleInfo = sVehicleStore.LookupEntry(vehicleid);</span> </td>
                      </tr><tr>
                        <th> </th><th>196</th><td class="r"><span>&nbsp; &nbsp; if(!vehicleInfo)</span> </td>
                      </tr><tr>
                        <th> </th><th>197</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                      </tr><tr>
                        <th> </th><th>198</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>199</th><td class="r"><span>&nbsp; &nbsp; m_vehicleId = vehicleid;</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>200</th><td class="r"><span>&nbsp; &nbsp; m_vehicleInfo = vehicleInfo;</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>86</th><th>201</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>202</th><td class="r"><ins>&nbsp; &nbsp; // can be NULL</ins> </td>
                  </tr><tr>
                          <th> </th><th>203</th><td class="r"><ins>&nbsp; &nbsp; VehicleDataStructure const *VDStructure = sObjectMgr.GetVehicleData(vehicleid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>204</th><td class="r"><ins>&nbsp; &nbsp; if(VDStructure)</ins> </td>
                  </tr><tr>
                          <th> </th><th>205</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; m_VehicleData = VDStructure;</ins> </td>
                  </tr><tr>
                          <th> </th><th>206</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>207</th><td class="r"><ins>&nbsp; &nbsp; InitSeats();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>208</th><td class="r"><ins>&nbsp; &nbsp; EmptySeatsCountChanged();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>87</th><th>209</th><td class="l"><span>&nbsp; &nbsp; return true;</span> </td>
                  </tr><tr>
                          <th>88</th><th>210</th><td class="l"><span>}</span> </td>
                  </tr><tr>
                          <th>89</th><th>211</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>212</th><td class="r"><ins>void Vehicle::InitSeats()</ins> </td>
                  </tr><tr>
                          <th> </th><th>213</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>214</th><td class="r"><ins>&nbsp; &nbsp; m_Seats.clear();</ins> </td>
                  </tr><tr>
                          <th> </th><th>215</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>216</th><td class="r"><ins>&nbsp; &nbsp; for(uint32 i = 0; i &lt; MAX_SEAT; ++i)</ins> </td>
                  </tr><tr>
                          <th> </th><th>217</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>218</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 seatId = m_vehicleInfo-&gt;m_seatID[i];</ins> </td>
                  </tr><tr>
                          <th> </th><th>219</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(seatId)</ins> </td>
                  </tr><tr>
                          <th> </th><th>220</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>221</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(VehicleSeatEntry const *veSeat = sVehicleSeatStore.LookupEntry(seatId))</ins> </td>
                  </tr><tr>
                          <th> </th><th>222</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>223</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; VehicleSeat newseat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>224</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //newseat.seatInfo = veSeat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>225</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newseat.passenger = NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>226</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newseat.flags = SEAT_FREE;</ins> </td>
                  </tr><tr>
                          <th> </th><th>227</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newseat.vs_flags = sObjectMgr.GetSeatFlags(seatId);</ins> </td>
                  </tr><tr>
                          <th> </th><th>228</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_Seats[i] = newseat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>229</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>230</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>231</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>232</th><td class="r"><ins>&nbsp; &nbsp; // NOTE : there can be vehicles without seats (eg. 180) - probably some TEST vehicles</ins> </td>
                  </tr><tr>
                          <th> </th><th>233</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>234</th><td class="r"><ins>void Vehicle::ChangeSeatFlag(uint8 seat, uint8 flag)</ins> </td>
                  </tr><tr>
                          <th> </th><th>235</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>236</th><td class="r"><ins>&nbsp; &nbsp; SeatMap::iterator i_seat = m_Seats.find(seat);</ins> </td>
                  </tr><tr>
                          <th> </th><th>237</th><td class="r"><ins>&nbsp; &nbsp; // this should never happen</ins> </td>
                  </tr><tr>
                          <th> </th><th>238</th><td class="r"><ins>&nbsp; &nbsp; if(i_seat == m_Seats.end())</ins> </td>
                  </tr><tr>
                          <th> </th><th>239</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>240</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>241</th><td class="r"><ins>&nbsp; &nbsp; if(i_seat-&gt;second.flags != flag)</ins> </td>
                  </tr><tr>
                          <th> </th><th>242</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>243</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; i_seat-&gt;second.flags = flag;</ins> </td>
                  </tr><tr>
                          <th> </th><th>244</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; EmptySeatsCountChanged();</ins> </td>
                  </tr><tr>
                          <th> </th><th>245</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>246</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>247</th><td class="r"><ins>Vehicle* Vehicle::FindFreeSeat(int8 *seatid, bool force)</ins> </td>
                  </tr><tr>
                          <th> </th><th>248</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>249</th><td class="r"><ins>&nbsp; &nbsp; SeatMap::const_iterator i_seat = m_Seats.find(*seatid);</ins> </td>
                  </tr><tr>
                          <th> </th><th>250</th><td class="r"><ins>&nbsp; &nbsp; if(i_seat == m_Seats.end())</ins> </td>
                  </tr><tr>
                          <th> </th><th>251</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return GetFirstEmptySeat(seatid, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>252</th><td class="r"><ins>&nbsp; &nbsp; if((i_seat-&gt;second.flags &amp; (SEAT_FULL | SEAT_VEHICLE_FULL)) || (!force &amp;&amp; (i_seat-&gt;second.vs_flags &amp; SF_UNACCESSIBLE)))</ins> </td>
                  </tr><tr>
                          <th> </th><th>253</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return GetNextEmptySeat(seatid, true, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>254</th><td class="r"><ins>&nbsp; &nbsp; if(i_seat-&gt;second.flags &amp; SEAT_VEHICLE_FREE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>255</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>256</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; // this should never be NULL</ins> </td>
                  </tr><tr>
                          <th> </th><th>257</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = (Vehicle*)i_seat-&gt;second.passenger)</ins> </td>
                  </tr><tr>
                          <th> </th><th>258</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return v-&gt;FindFreeSeat(seatid, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>259</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>260</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>261</th><td class="r"><ins>&nbsp; &nbsp; return this;</ins> </td>
                  </tr><tr>
                          <th> </th><th>262</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>263</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>264</th><td class="r"><ins>Vehicle* Vehicle::GetFirstEmptySeat(int8 *seatId, bool force)</ins> </td>
                  </tr><tr>
                          <th> </th><th>265</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>266</th><td class="r"><ins>&nbsp; &nbsp; for(SeatMap::iterator itr = m_Seats.begin(); itr != m_Seats.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>267</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>268</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(itr-&gt;second.flags &amp; SEAT_FREE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>269</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>270</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!force &amp;&amp; (itr-&gt;second.vs_flags &amp; SF_UNACCESSIBLE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>271</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>272</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>273</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *seatId = itr-&gt;first;</ins> </td>
                  </tr><tr>
                          <th> </th><th>274</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return this;</ins> </td>
                  </tr><tr>
                          <th> </th><th>275</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>276</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else if(itr-&gt;second.flags &amp; SEAT_VEHICLE_FREE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>277</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>278</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *seatId = itr-&gt;first;</ins> </td>
                  </tr><tr>
                          <th> </th><th>279</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = (Vehicle*)itr-&gt;second.passenger)</ins> </td>
                  </tr><tr>
                          <th> </th><th>280</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return v-&gt;FindFreeSeat(seatId, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>281</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>282</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>283</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>284</th><td class="r"><ins>&nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>285</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>286</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>287</th><td class="r"><ins>Vehicle* Vehicle::GetNextEmptySeat(int8 *seatId, bool next, bool force)</ins> </td>
                  </tr><tr>
                          <th> </th><th>288</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>289</th><td class="r"><ins>&nbsp; &nbsp; SeatMap::const_iterator i_seat = m_Seats.find(*seatId);</ins> </td>
                  </tr><tr>
                          <th> </th><th>290</th><td class="r"><ins>&nbsp; &nbsp; if(i_seat == m_Seats.end()) return GetFirstEmptySeat(seatId, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>291</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>292</th><td class="r"><ins>&nbsp; &nbsp; while((i_seat-&gt;second.flags &amp; (SEAT_FULL | SEAT_VEHICLE_FULL)) || (!force &amp;&amp; (i_seat-&gt;second.vs_flags &amp; SF_UNACCESSIBLE)))</ins> </td>
                  </tr><tr>
                          <th> </th><th>293</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>294</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(next)</ins> </td>
                  </tr><tr>
                          <th> </th><th>295</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>296</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ++i_seat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>297</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i_seat == m_Seats.end())</ins> </td>
                  </tr><tr>
                          <th> </th><th>298</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i_seat = m_Seats.begin();</ins> </td>
                  </tr><tr>
                          <th> </th><th>299</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>300</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>301</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>302</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(i_seat == m_Seats.begin())</ins> </td>
                  </tr><tr>
                          <th> </th><th>303</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i_seat = m_Seats.end();</ins> </td>
                  </tr><tr>
                          <th> </th><th>304</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; --i_seat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>305</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>306</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(i_seat-&gt;first == *seatId)</ins> </td>
                  </tr><tr>
                          <th> </th><th>307</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>308</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>309</th><td class="r"><ins>&nbsp; &nbsp; *seatId = i_seat-&gt;first;</ins> </td>
                  </tr><tr>
                          <th> </th><th>310</th><td class="r"><ins>&nbsp; &nbsp; if(i_seat-&gt;second.flags &amp; SEAT_VEHICLE_FREE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>311</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>312</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *v = (Vehicle*)i_seat-&gt;second.passenger)</ins> </td>
                  </tr><tr>
                          <th> </th><th>313</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return v-&gt;FindFreeSeat(seatId, force);</ins> </td>
                  </tr><tr>
                          <th> </th><th>314</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>315</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>316</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>317</th><td class="r"><ins>&nbsp; &nbsp; return this;</ins> </td>
                  </tr><tr>
                          <th> </th><th>318</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>319</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>320</th><td class="r"><ins>int8 Vehicle::GetEmptySeatsCount(bool force)</ins> </td>
                  </tr><tr>
                          <th> </th><th>321</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>322</th><td class="r"><ins>&nbsp; &nbsp; int8 count = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>323</th><td class="r"><ins>&nbsp; &nbsp; for(SeatMap::iterator itr = m_Seats.begin(); itr != m_Seats.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>324</th><td class="r"><ins>&nbsp; &nbsp;{</ins> </td>
                  </tr><tr>
                          <th> </th><th>325</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(itr-&gt;second.flags &amp; (SEAT_FREE | SEAT_VEHICLE_FREE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>326</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>327</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!force &amp;&amp; (itr-&gt;second.vs_flags &amp; SF_UNACCESSIBLE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>328</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; continue;</ins> </td>
                  </tr><tr>
                          <th> </th><th>329</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>330</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; count++;</ins> </td>
                  </tr><tr>
                          <th> </th><th>331</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>332</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>333</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>334</th><td class="r"><ins>&nbsp; &nbsp; return count;</ins> </td>
                  </tr><tr>
                          <th> </th><th>335</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>336</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>337</th><td class="r"><ins>void Vehicle::EmptySeatsCountChanged()</ins> </td>
                  </tr><tr>
                          <th> </th><th>338</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>339</th><td class="r"><ins>&nbsp; &nbsp; uint8 m_count = GetTotalSeatsCount();</ins> </td>
                  </tr><tr>
                          <th> </th><th>340</th><td class="r"><ins>&nbsp; &nbsp; uint8 p_count = GetEmptySeatsCount(false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>341</th><td class="r"><ins>&nbsp; &nbsp; uint8 u_count = GetEmptySeatsCount(true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>342</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>343</th><td class="r"><ins>&nbsp; &nbsp; // seats accesibles by players</ins> </td>
                  </tr><tr>
                          <th> </th><th>344</th><td class="r"><ins>&nbsp; &nbsp; if(p_count &gt; 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>345</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);</ins> </td>
                  </tr><tr>
                          <th> </th><th>346</th><td class="r"><ins>&nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>347</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; RemoveFlag(UNIT_NPC_FLAGS, UNIT_NPC_FLAG_SPELLCLICK);</ins> </td>
                  </tr><tr>
                          <th> </th><th>348</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>349</th><td class="r"><ins>&nbsp; &nbsp; if(u_count == m_count)</ins> </td>
                  </tr><tr>
                          <th> </th><th>350</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>351</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PLAYER_CONTROLLED);</ins> </td>
                  </tr><tr>
                          <th> </th><th>352</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>353</th><td class="r"><ins>&nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>354</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_PLAYER_CONTROLLED);</ins> </td>
                  </tr><tr>
                          <th> </th><th>355</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>356</th><td class="r"><ins>&nbsp; &nbsp; if(uint64 vehicleGUID = GetVehicleGUID())</ins> </td>
                  </tr><tr>
                          <th> </th><th>357</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>358</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *vehicle = ObjectAccessor::GetVehicle(vehicleGUID))</ins> </td>
                  </tr><tr>
                          <th> </th><th>359</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>360</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(u_count &gt; 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>361</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;ChangeSeatFlag(m_SeatData.seat, SEAT_VEHICLE_FREE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>362</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>363</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; vehicle-&gt;ChangeSeatFlag(m_SeatData.seat, SEAT_VEHICLE_FULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>364</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>365</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>366</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>367</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>368</th><td class="r"><ins></ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>369</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>90</th><th>370</th><td class="l"><span>void Vehicle::Dismiss()</span> </td>
                  </tr><tr>
                          <th>91</th><th>371</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>372</th><td class="r"><ins>&nbsp; &nbsp; RemoveAllPassengers();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>92</th><th>373</th><td class="l"><span>&nbsp; &nbsp; SendObjectDeSpawnAnim(GetGUID());</span> </td>
                  </tr><tr>
                          <th>93</th><th>374</th><td class="l"><span>&nbsp; &nbsp; CombatStop();</span> </td>
                  </tr><tr>
                          <th>94</th><th>375</th><td class="l"><span>&nbsp; &nbsp; AddObjectToRemoveList();</span> </td>
                  </tr><tr>
                          <th>95</th><th>376</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>377</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>378</th><td class="r"><ins>void Vehicle::RellocatePassengers(Map *map)</ins> </td>
                  </tr><tr>
                          <th> </th><th>379</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>380</th><td class="r"><ins>&nbsp; &nbsp; for(SeatMap::iterator itr = m_Seats.begin(); itr != m_Seats.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>381</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>382</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(itr-&gt;second.flags &amp; SEAT_FULL)</ins> </td>
                  </tr><tr>
                          <th> </th><th>383</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>384</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // passenger cant be NULL here</ins> </td>
                  </tr><tr>
                          <th> </th><th>385</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *passengers = itr-&gt;second.passenger;</ins> </td>
                  </tr><tr>
                          <th> </th><th>386</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assert(passengers);</ins> </td>
                  </tr><tr>
                          <th> </th><th>387</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>388</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float xx = GetPositionX() + passengers-&gt;m_SeatData.OffsetX;</ins> </td>
                  </tr><tr>
                          <th> </th><th>389</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float yy = GetPositionY() + passengers-&gt;m_SeatData.OffsetY;</ins> </td>
                  </tr><tr>
                          <th> </th><th>390</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float zz = GetPositionZ() + passengers-&gt;m_SeatData.OffsetZ;</ins> </td>
                  </tr><tr>
                          <th> </th><th>391</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //float oo = passengers-&gt;m_SeatData.Orientation;</ins> </td>
                  </tr><tr>
                          <th> </th><th>392</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // this is not correct, we should recalculate</ins> </td>
                  </tr><tr>
                          <th> </th><th>393</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // actual rotation depending on vehicle</ins> </td>
                  </tr><tr>
                          <th> </th><th>394</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float oo = passengers-&gt;GetOrientation();</ins> </td>
                  </tr><tr>
                          <th> </th><th>395</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>396</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(passengers-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>397</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)passengers)-&gt;SetPosition(xx, yy, zz, oo);</ins> </td>
                  </tr><tr>
                          <th> </th><th>398</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>399</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; map-&gt;CreatureRelocation((Creature*)passengers, xx, yy, zz, oo);</ins> </td>
                  </tr><tr>
                          <th> </th><th>400</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>401</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else if(itr-&gt;second.flags &amp; (SEAT_VEHICLE_FULL | SEAT_VEHICLE_FREE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>402</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>403</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // passenger cant be NULL here</ins> </td>
                  </tr><tr>
                          <th> </th><th>404</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *passengers = itr-&gt;second.passenger;</ins> </td>
                  </tr><tr>
                          <th> </th><th>405</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assert(passengers);</ins> </td>
                  </tr><tr>
                          <th> </th><th>406</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>407</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float xx = GetPositionX() + passengers-&gt;m_SeatData.OffsetX;</ins> </td>
                  </tr><tr>
                          <th> </th><th>408</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float yy = GetPositionY() + passengers-&gt;m_SeatData.OffsetY;</ins> </td>
                  </tr><tr>
                          <th> </th><th>409</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float zz = GetPositionZ() + passengers-&gt;m_SeatData.OffsetZ;</ins> </td>
                  </tr><tr>
                          <th> </th><th>410</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //float oo = passengers-&gt;m_SeatData.Orientation;</ins> </td>
                  </tr><tr>
                          <th> </th><th>411</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // this is not correct, we should recalculate</ins> </td>
                  </tr><tr>
                          <th> </th><th>412</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // actual rotation depending on vehicle</ins> </td>
                  </tr><tr>
                          <th> </th><th>413</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; float oo = passengers-&gt;GetOrientation();</ins> </td>
                  </tr><tr>
                          <th> </th><th>414</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>415</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; map-&gt;CreatureRelocation((Creature*)passengers, xx, yy, zz, oo);</ins> </td>
                  </tr><tr>
                          <th> </th><th>416</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Vehicle*)passengers)-&gt;RellocatePassengers(map);</ins> </td>
                  </tr><tr>
                          <th> </th><th>417</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>418</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>419</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>420</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>421</th><td class="r"><ins>void Vehicle::AddPassenger(Unit *unit, int8 seatId, bool force)</ins> </td>
                  </tr><tr>
                          <th> </th><th>422</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>423</th><td class="r"><ins>&nbsp; &nbsp; SeatMap::iterator seat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>424</th><td class="r"><ins>&nbsp; &nbsp; seat = m_Seats.find(seatId);</ins> </td>
                  </tr><tr>
                          <th> </th><th>425</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>426</th><td class="r"><ins>&nbsp; &nbsp; // this should never happen</ins> </td>
                  </tr><tr>
                          <th> </th><th>427</th><td class="r"><ins>&nbsp; &nbsp; if(seat == m_Seats.end())</ins> </td>
                  </tr><tr>
                          <th> </th><th>428</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>429</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>430</th><td class="r"><ins>&nbsp; &nbsp; unit-&gt;SetVehicleGUID(GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>431</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>432</th><td class="r"><ins>&nbsp; &nbsp; seat-&gt;second.passenger = unit;</ins> </td>
                  </tr><tr>
                          <th> </th><th>433</th><td class="r"><ins>&nbsp; &nbsp; if(unit-&gt;GetTypeId() == TYPEID_UNIT &amp;&amp; ((Creature*)unit)-&gt;isVehicle())</ins> </td>
                  </tr><tr>
                          <th> </th><th>434</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>435</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(((Vehicle*)unit)-&gt;GetEmptySeatsCount(true) == 0)</ins> </td>
                  </tr><tr>
                          <th> </th><th>436</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; seat-&gt;second.flags = SEAT_VEHICLE_FULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>437</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>438</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; seat-&gt;second.flags = SEAT_VEHICLE_FREE;</ins> </td>
                  </tr><tr>
                          <th> </th><th>439</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>440</th><td class="r"><ins>&nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>441</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>442</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; seat-&gt;second.flags = SEAT_FULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>443</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>444</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>445</th><td class="r"><ins>&nbsp; &nbsp; if(unit-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>446</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>447</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data0(SMSG_FORCE_MOVE_ROOT, 10);</ins> </td>
                  </tr><tr>
                          <th> </th><th>448</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data0 &lt;&lt; unit-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>449</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data0 &lt;&lt; (uint32)((seat-&gt;second.vs_flags &amp; SF_CAN_CAST) ? 2 : 0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>450</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SendMessageToSet(&amp;data0,true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>451</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>452</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>453</th><td class="r"><ins>&nbsp; &nbsp; if(seat-&gt;second.vs_flags &amp; SF_MAIN_RIDER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>454</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>455</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(!(GetVehicleFlags() &amp; VF_MOVEMENT))</ins> </td>
                  </tr><tr>
                          <th> </th><th>456</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>457</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GetMotionMaster()-&gt;Clear(false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>458</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GetMotionMaster()-&gt;MoveIdle();</ins> </td>
                  </tr><tr>
                          <th> </th><th>459</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetCharmerGUID(unit-&gt;GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>460</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SetUInt64Value(UNIT_FIELD_CHARM, GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>461</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(unit-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>462</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>463</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetMoverInQueve(this);</ins> </td>
                  </tr><tr>
                          <th> </th><th>464</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetClientControl(this, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>465</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>466</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(canFly() || HasAuraType(SPELL_AURA_FLY) || HasAuraType(SPELL_AURA_MOD_INCREASE_FLIGHT_SPEED))</ins> </td>
                  </tr><tr>
                          <th> </th><th>467</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>468</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data3(SMSG_MOVE_SET_CAN_FLY, 12);</ins> </td>
                  </tr><tr>
                          <th> </th><th>469</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data3 &lt;&lt; GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>470</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data3 &lt;&lt; (uint32)(0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>471</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SendMessageToSet(&amp;data3,false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>472</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>473</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>474</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>475</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; SpellClickInfoMapBounds clickPair = sObjectMgr.GetSpellClickInfoMapBounds(GetEntry());</ins> </td>
                  </tr><tr>
                          <th> </th><th>476</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; for(SpellClickInfoMap::const_iterator itr = clickPair.first; itr != clickPair.second; ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>477</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>478</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (unit-&gt;GetTypeId() == TYPEID_UNIT || itr-&gt;second.IsFitToRequirements((Player*)unit))</ins> </td>
                  </tr><tr>
                          <th> </th><th>479</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>480</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *caster = (itr-&gt;second.castFlags &amp; 0x1) ? unit : this;</ins> </td>
                  </tr><tr>
                          <th> </th><th>481</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Unit *target = (itr-&gt;second.castFlags &amp; 0x2) ? unit : this;</ins> </td>
                  </tr><tr>
                          <th> </th><th>482</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>483</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; caster-&gt;CastSpell(target, itr-&gt;second.spellId, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>484</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>485</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>486</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(unit-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>487</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>488</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // it should be added only on rider enter?</ins> </td>
                  </tr><tr>
                          <th> </th><th>489</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)unit)-&gt;GetGroup())</ins> </td>
                  </tr><tr>
                          <th> </th><th>490</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_VEHICLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>491</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>492</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetFarSightGUID(GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>493</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>494</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; BuildVehicleActionBar((Player*)unit);</ins> </td>
                  </tr><tr>
                          <th> </th><th>495</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>496</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>497</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(!(GetVehicleFlags() &amp; VF_FACTION))</ins> </td>
                  </tr><tr>
                          <th> </th><th>498</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setFaction(unit-&gt;getFaction());</ins> </td>
                  </tr><tr>
                          <th> </th><th>499</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>500</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(GetVehicleFlags() &amp; VF_CANT_MOVE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>501</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>502</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data2(SMSG_FORCE_MOVE_ROOT, 10);</ins> </td>
                  </tr><tr>
                          <th> </th><th>503</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data2 &lt;&lt; GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>504</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data2 &lt;&lt; (uint32)(2);</ins> </td>
                  </tr><tr>
                          <th> </th><th>505</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SendMessageToSet(&amp;data2,false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>506</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>507</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>508</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(GetVehicleFlags() &amp; VF_NON_SELECTABLE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>509</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>510</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>511</th><td class="r"><ins>&nbsp; &nbsp; if(seat-&gt;second.vs_flags &amp; SF_UNATTACKABLE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>512</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SetFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>513</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>514</th><td class="r"><ins>&nbsp; &nbsp; EmptySeatsCountChanged();</ins> </td>
                  </tr><tr>
                          <th> </th><th>515</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>516</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>517</th><td class="r"><ins>void Vehicle::RemovePassenger(Unit *unit)</ins> </td>
                  </tr><tr>
                          <th> </th><th>518</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>519</th><td class="r"><ins>&nbsp; &nbsp; SeatMap::iterator seat;</ins> </td>
                  </tr><tr>
                          <th> </th><th>520</th><td class="r"><ins>&nbsp; &nbsp; for(seat = m_Seats.begin(); seat != m_Seats.end(); ++seat)</ins> </td>
                  </tr><tr>
                          <th> </th><th>521</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>522</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if((seat-&gt;second.flags &amp; (SEAT_FULL | SEAT_VEHICLE_FREE | SEAT_VEHICLE_FULL)) &amp;&amp; seat-&gt;second.passenger == unit)</ins> </td>
                  </tr><tr>
                          <th> </th><th>523</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>524</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SetVehicleGUID(0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>525</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>526</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(seat-&gt;second.vs_flags &amp; SF_MAIN_RIDER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>527</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>528</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RemoveSpellsCausingAura(SPELL_AURA_CONTROL_VEHICLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>529</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(unit-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>530</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>531</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetMover(unit);</ins> </td>
                  </tr><tr>
                          <th> </th><th>532</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetClientControl(unit, 1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>533</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetMoverInQueve(NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>534</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;RemovePetActionBar();</ins> </td>
                  </tr><tr>
                          <th> </th><th>535</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>536</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Player*)unit)-&gt;GetGroup())</ins> </td>
                  </tr><tr>
                          <th> </th><th>537</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetGroupUpdateFlag(GROUP_UPDATE_VEHICLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>538</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>539</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SetCharm(NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>540</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetCharmerGUID(NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>541</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setFaction(GetCreatureInfo()-&gt;faction_A);</ins> </td>
                  </tr><tr>
                          <th> </th><th>542</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>543</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(GetVehicleFlags() &amp; VF_NON_SELECTABLE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>544</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>545</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(seat-&gt;second.vs_flags &amp; SF_UNATTACKABLE)</ins> </td>
                  </tr><tr>
                          <th> </th><th>546</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;RemoveFlag(UNIT_FIELD_FLAGS, UNIT_FLAG_NOT_SELECTABLE);</ins> </td>
                  </tr><tr>
                          <th> </th><th>547</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // restore player control</ins> </td>
                  </tr><tr>
                          <th> </th><th>548</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(unit-&gt;GetTypeId() == TYPEID_PLAYER)</ins> </td>
                  </tr><tr>
                          <th> </th><th>549</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>550</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Player*)unit)-&gt;SetFarSightGUID(NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>551</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>552</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(seat-&gt;second.vs_flags &amp; SF_CAN_CAST)</ins> </td>
                  </tr><tr>
                          <th> </th><th>553</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>554</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data0(SMSG_FORCE_MOVE_UNROOT, 10);</ins> </td>
                  </tr><tr>
                          <th> </th><th>555</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data0 &lt;&lt; unit-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>556</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data0 &lt;&lt; (uint32)(2);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // can rotate</ins> </td>
                  </tr><tr>
                          <th> </th><th>557</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SendMessageToSet(&amp;data0,true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>558</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>559</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else</ins> </td>
                  </tr><tr>
                          <th> </th><th>560</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>561</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data1(SMSG_FORCE_MOVE_UNROOT, 10);</ins> </td>
                  </tr><tr>
                          <th> </th><th>562</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data1 &lt;&lt; unit-&gt;GetPackGUID();</ins> </td>
                  </tr><tr>
                          <th> </th><th>563</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; data1 &lt;&lt; (uint32)(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // cannot rotate</ins> </td>
                  </tr><tr>
                          <th> </th><th>564</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;SendMessageToSet(&amp;data1,true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>565</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>566</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>567</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.OffsetX = 0.0f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>568</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.OffsetY = 0.0f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>569</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.OffsetZ = 0.0f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>570</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.Orientation = 0.0f;</ins> </td>
                  </tr><tr>
                          <th> </th><th>571</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.c_time = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>572</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.dbc_seat = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>573</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.seat = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>574</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.s_flags = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>575</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unit-&gt;m_SeatData.v_flags = 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>576</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>577</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; seat-&gt;second.passenger = NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>578</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; seat-&gt;second.flags = SEAT_FREE;</ins> </td>
                  </tr><tr>
                          <th> </th><th>579</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; EmptySeatsCountChanged();</ins> </td>
                  </tr><tr>
                          <th> </th><th>580</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>581</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>582</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>583</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>584</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>585</th><td class="r"><ins>void Vehicle::RemoveAllPassengers()</ins> </td>
                  </tr><tr>
                          <th> </th><th>586</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>587</th><td class="r"><ins>&nbsp; &nbsp; for(SeatMap::iterator itr = m_Seats.begin(); itr != m_Seats.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>588</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>589</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(itr-&gt;second.flags &amp; SEAT_FULL)</ins> </td>
                  </tr><tr>
                          <th> </th><th>590</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>591</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Unit *passenger = itr-&gt;second.passenger)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// this cant be NULL, but..</ins> </td>
                  </tr><tr>
                          <th> </th><th>592</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; passenger-&gt;ExitVehicle();</ins> </td>
                  </tr><tr>
                          <th> </th><th>593</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>594</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; else if(itr-&gt;second.flags &amp; (SEAT_VEHICLE_FULL | SEAT_VEHICLE_FREE))</ins> </td>
                  </tr><tr>
                          <th> </th><th>595</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>596</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(Unit *passenger = itr-&gt;second.passenger)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// this cant be NULL, but..</ins> </td>
                  </tr><tr>
                          <th> </th><th>597</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>598</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; passenger-&gt;ExitVehicle();</ins> </td>
                  </tr><tr>
                          <th> </th><th>599</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Vehicle*)passenger)-&gt;Dismiss();</ins> </td>
                  </tr><tr>
                          <th> </th><th>600</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>601</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>602</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>603</th><td class="r"><ins>&nbsp; &nbsp; // make sure everything is cleared</ins> </td>
                  </tr><tr>
                          <th> </th><th>604</th><td class="r"><ins>&nbsp; &nbsp; InitSeats();</ins> </td>
                  </tr><tr>
                          <th> </th><th>605</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>606</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>607</th><td class="r"><ins>bool Vehicle::HasSpell(uint32 spell) const</ins> </td>
                  </tr><tr>
                          <th> </th><th>608</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>609</th><td class="r"><ins>&nbsp; &nbsp; if(!m_VehicleData)</ins> </td>
                  </tr><tr>
                          <th> </th><th>610</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; return false;</ins> </td>
                  </tr><tr>
                          <th> </th><th>611</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>612</th><td class="r"><ins>&nbsp; &nbsp; for(uint8 j = 0; j &lt; MAX_VEHICLE_SPELLS; j++)</ins> </td>
                  </tr><tr>
                          <th> </th><th>613</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>614</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(m_VehicleData-&gt;v_spells[j] == spell)</ins> </td>
                  </tr><tr>
                          <th> </th><th>615</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return true;</ins> </td>
                  </tr><tr>
                          <th> </th><th>616</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>617</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>618</th><td class="r"><ins>&nbsp; &nbsp; return false;</ins> </td>
                  </tr><tr>
                          <th> </th><th>619</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>620</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>621</th><td class="r"><ins>void Vehicle::BuildVehicleActionBar(Player *plr) const</ins> </td>
                  </tr><tr>
                          <th> </th><th>622</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>623</th><td class="r"><ins>&nbsp; &nbsp; WorldPacket data(SMSG_PET_SPELLS, 8+2+4+4+4*10+1+1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>624</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint64(GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>625</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint16(0x00000000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// creature family, not used in vehicles</ins> </td>
                  </tr><tr>
                          <th> </th><th>626</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(0x00000000);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// unk</ins> </td>
                  </tr><tr>
                          <th> </th><th>627</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(0x00000101);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// react state</ins> </td>
                  </tr><tr>
                          <th> </th><th>628</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>629</th><td class="r"><ins>&nbsp; &nbsp; for(uint32 i = 0; i &lt;= MAX_VEHICLE_SPELLS; ++i)</ins> </td>
                  </tr><tr>
                          <th> </th><th>630</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>631</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint16(m_VehicleData ? m_VehicleData-&gt;v_spells[i] : NULL) &lt;&lt; uint8(0) &lt;&lt; uint8(i+8);</ins> </td>
                  </tr><tr>
                          <th> </th><th>632</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>633</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>634</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint8(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//aditional spells in spellbook, not used in vehicles</ins> </td>
                  </tr><tr>
                          <th> </th><th>635</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>636</th><td class="r"><ins>&nbsp; &nbsp; uint8 cooldownsCount = m_CreatureSpellCooldowns.size() + m_CreatureCategoryCooldowns.size();</ins> </td>
                  </tr><tr>
                          <th> </th><th>637</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint8(cooldownsCount);</ins> </td>
                  </tr><tr>
                          <th> </th><th>638</th><td class="r"><ins>&nbsp; &nbsp; time_t curTime = time(NULL);</ins> </td>
                  </tr><tr>
                          <th> </th><th>639</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>640</th><td class="r"><ins>&nbsp; &nbsp; for(CreatureSpellCooldowns::const_iterator itr = m_CreatureSpellCooldowns.begin(); itr != m_CreatureSpellCooldowns.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>641</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>642</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; time_t cooldown = (itr-&gt;second &gt; curTime) ? (itr-&gt;second - curTime) * IN_MILISECONDS : 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>643</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>644</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(itr-&gt;first);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// spellid</ins> </td>
                  </tr><tr>
                          <th> </th><th>645</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint16(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // spell category?</ins> </td>
                  </tr><tr>
                          <th> </th><th>646</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(cooldown);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// cooldown</ins> </td>
                  </tr><tr>
                          <th> </th><th>647</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // category cooldown</ins> </td>
                  </tr><tr>
                          <th> </th><th>648</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>649</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>650</th><td class="r"><ins>&nbsp; &nbsp; for(CreatureSpellCooldowns::const_iterator itr = m_CreatureCategoryCooldowns.begin(); itr != m_CreatureCategoryCooldowns.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>651</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>652</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; time_t cooldown = (itr-&gt;second &gt; curTime) ? (itr-&gt;second - curTime) * IN_MILISECONDS : 0;</ins> </td>
                  </tr><tr>
                          <th> </th><th>653</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>654</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(itr-&gt;first);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// spellid</ins> </td>
                  </tr><tr>
                          <th> </th><th>655</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint16(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // spell category?</ins> </td>
                  </tr><tr>
                          <th> </th><th>656</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(0);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // cooldown</ins> </td>
                  </tr><tr>
                          <th> </th><th>657</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; data &lt;&lt; uint32(cooldown);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// category cooldown</ins> </td>
                  </tr><tr>
                          <th> </th><th>658</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>659</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>660</th><td class="r"><ins>&nbsp; &nbsp; plr-&gt;GetSession()-&gt;SendPacket(&amp;data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>661</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>662</th><td class="r"><ins>&nbsp; &nbsp; data.Initialize(SMSG_PET_GUIDS, 12);</ins> </td>
                  </tr><tr>
                          <th> </th><th>663</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint32(1);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // count</ins> </td>
                  </tr><tr>
                          <th> </th><th>664</th><td class="r"><ins>&nbsp; &nbsp; data &lt;&lt; uint64(GetGUID());</ins> </td>
                  </tr><tr>
                          <th> </th><th>665</th><td class="r"><ins>&nbsp; &nbsp; plr-&gt;GetSession()-&gt;SendPacket(&amp;data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>666</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>667</th><td class="r"><ins>void Vehicle::InstallAllAccessories()</ins> </td>
                  </tr><tr>
                          <th> </th><th>668</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>669</th><td class="r"><ins>&nbsp; &nbsp; //TODO: Move this into DB!!!</ins> </td>
                  </tr><tr>
                          <th> </th><th>670</th><td class="r"><ins>&nbsp; &nbsp; switch(GetEntry())</ins> </td>
                  </tr><tr>
                          <th> </th><th>671</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>672</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; //case 27850:InstallAccessory(27905,1);break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>673</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 28782:InstallAccessory(28768,1,true);break; // Acherus Deathcharger</ins> </td>
                  </tr><tr>
                          <th> </th><th>674</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 28312:InstallAccessory(28319,7,true);break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>675</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 32627:InstallAccessory(32629,7,true);break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>676</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 32930:</ins> </td>
                  </tr><tr>
                          <th> </th><th>677</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(32933,0);</ins> </td>
                  </tr><tr>
                          <th> </th><th>678</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(32934,1);</ins> </td>
                  </tr><tr>
                          <th> </th><th>679</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>680</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 33109:InstallAccessory(33167,1, true);break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>681</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 33060:InstallAccessory(33067,7, true);break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>682</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 33113:</ins> </td>
                  </tr><tr>
                          <th> </th><th>683</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33114,0, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>684</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33114,1, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>685</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33114,2, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>686</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33114,3, true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>687</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33139,7);</ins> </td>
                  </tr><tr>
                          <th> </th><th>688</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>689</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 33114:</ins> </td>
                  </tr><tr>
                          <th> </th><th>690</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33143,2); // Overload Control Device</ins> </td>
                  </tr><tr>
                          <th> </th><th>691</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; InstallAccessory(33142,1); // Leviathan Defense Turret</ins> </td>
                  </tr><tr>
                          <th> </th><th>692</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</ins> </td>
                  </tr><tr>
                          <th> </th><th>693</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; case 33214:InstallAccessory(33218,1,false,false);break; // Mechanolift 304-A</ins> </td>
                  </tr><tr>
                          <th> </th><th>694</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>695</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>696</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>697</th><td class="r"><ins>void Vehicle::InstallAccessory(uint32 entry, int8 seatId, bool isVehicle, bool minion)</ins> </td>
                  </tr><tr>
                          <th> </th><th>698</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>699</th><td class="r"><ins>&nbsp; &nbsp; if(Unit *passenger = GetPassenger(seatId))</ins> </td>
                  </tr><tr>
                          <th> </th><th>700</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>701</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; // already installed</ins> </td>
                  </tr><tr>
                          <th> </th><th>702</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(passenger-&gt;GetEntry() == entry)</ins> </td>
                  </tr><tr>
                          <th> </th><th>703</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>704</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; assert(passenger-&gt;GetTypeId() == TYPEID_UNIT);</ins> </td>
                  </tr><tr>
                          <th> </th><th>705</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return;</ins> </td>
                  </tr><tr>
                          <th> </th><th>706</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>707</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; passenger-&gt;ExitVehicle(); // this should not happen</ins> </td>
                  </tr><tr>
                          <th> </th><th>708</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>709</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>710</th><td class="r"><ins>&nbsp; &nbsp; //TODO: accessory should be minion</ins> </td>
                  </tr><tr>
                          <th> </th><th>711</th><td class="r"><ins>&nbsp; &nbsp; if(isVehicle)</ins> </td>
                  </tr><tr>
                          <th> </th><th>712</th><td class="r"><ins>&nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>713</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Vehicle *accessory = SummonVehicle(entry, 0, 0, 0, 0))</ins> </td>
                  </tr><tr>
                          <th> </th><th>714</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>715</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessory-&gt;EnterVehicle(this, seatId);</ins> </td>
                  </tr><tr>
                          <th> </th><th>716</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // This is not good, we have to send update twice</ins> </td>
                  </tr><tr>
                          <th> </th><th>717</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data;</ins> </td>
                  </tr><tr>
                          <th> </th><th>718</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessory-&gt;BuildHeartBeatMsg(&amp;data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>719</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessory-&gt;SendMessageToSet(&amp;data, false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>720</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>721</th><td class="r"><ins>&nbsp; &nbsp; }else{</ins> </td>
                  </tr><tr>
                          <th> </th><th>722</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Creature *accessory = SummonCreature(entry, 0, 0, 0, 0, TEMPSUMMON_CORPSE_TIMED_DESPAWN, 30000))</ins> </td>
                  </tr><tr>
                          <th> </th><th>723</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>724</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessory-&gt;EnterVehicle(this, seatId);</ins> </td>
                  </tr><tr>
                          <th> </th><th>725</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // This is not good, we have to send update twice</ins> </td>
                  </tr><tr>
                          <th> </th><th>726</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; WorldPacket data;</ins> </td>
                  </tr><tr>
                          <th> </th><th>727</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessory-&gt;BuildHeartBeatMsg(&amp;data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>728</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; accessory-&gt;SendMessageToSet(&amp;data, false);</ins> </td>
                  </tr><tr>
                          <th> </th><th>729</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>730</th><td class="r"><ins>&nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>731</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>732</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>733</th><td class="r"><ins>Unit *Vehicle::GetPassenger(int8 seatId) const</ins> </td>
                  </tr><tr>
                          <th> </th><th>734</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>735</th><td class="r"><ins>&nbsp; &nbsp; SeatMap::const_iterator seat = m_Seats.find(seatId);</ins> </td>
                  </tr><tr>
                          <th> </th><th>736</th><td class="r"><ins>&nbsp; &nbsp; if(seat == m_Seats.end()) return NULL;</ins> </td>
                  </tr><tr>
                          <th> </th><th>737</th><td class="r"><ins>&nbsp; &nbsp; return seat-&gt;second.passenger;</ins> </td>
                  </tr><tr>
                          <th> </th><th>738</th><td class="r"><ins>}</ins> </td>
                  </tr><tr>
                          <th> </th><th>739</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>740</th><td class="r"><ins>void Vehicle::Die()</ins> </td>
                  </tr><tr>
                          <th> </th><th>741</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>742</th><td class="r"><ins>&nbsp; &nbsp; for (SeatMap::iterator itr = m_Seats.begin(); itr != m_Seats.end(); ++itr)</ins> </td>
                  </tr><tr>
                          <th> </th><th>743</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; if(Unit *passenger = itr-&gt;second.passenger)</ins> </td>
                  </tr><tr>
                          <th> </th><th>744</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(((Creature*)passenger)-&gt;isVehicle())</ins> </td>
                  </tr><tr>
                          <th> </th><th>745</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ((Creature*)passenger)-&gt;ForcedDespawn();</ins> </td>
                  </tr><tr>
                          <th> </th><th>746</th><td class="r"><ins>&nbsp; &nbsp; RemoveAllPassengers();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>747</th><td class="r"><ins>}</ins> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/Vehicle.h</a>
        </h2>
        <pre>diff --git a/src/game/Vehicle.h b/src/game/Vehicle.h
index 45d50f5..5705c29 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/Vehicle.h">
                      a
                  </th>
                  <th title="File b/src/game/Vehicle.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>22</th><th>22</th><td class="l"><span>#include "ObjectGuid.h"</span> </td>
                  </tr><tr>
                          <th>23</th><th>23</th><td class="l"><span>#include "Creature.h"</span> </td>
                  </tr><tr>
                          <th>24</th><th>24</th><td class="l"><span>#include "Unit.h"</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>25</th><td class="r"><ins>#include "ObjectMgr.h"</ins> </td>
                  </tr><tr>
                          <th> </th><th>26</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>27</th><td class="r"><ins>struct VehicleSeat</ins> </td>
                  </tr><tr>
                          <th> </th><th>28</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>29</th><td class="r"><ins>&nbsp; &nbsp; //VehicleSeatEntry const *seatInfo;</ins> </td>
                  </tr><tr>
                          <th> </th><th>30</th><td class="r"><ins>&nbsp; &nbsp; Unit* passenger;</ins> </td>
                  </tr><tr>
                          <th> </th><th>31</th><td class="r"><ins>&nbsp; &nbsp; uint8 flags;</ins> </td>
                  </tr><tr>
                          <th> </th><th>32</th><td class="r"><ins>&nbsp; &nbsp; uint32 vs_flags;</ins> </td>
                  </tr><tr>
                          <th> </th><th>33</th><td class="r"><ins>};</ins> </td>
                  </tr><tr>
                          <th> </th><th>34</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>35</th><td class="r"><ins>enum VehicleSeatFlags</ins> </td>
                  </tr><tr>
                          <th> </th><th>36</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>37</th><td class="r"><ins>&nbsp; &nbsp; SEAT_FREE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x01,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// free seat</ins> </td>
                  </tr><tr>
                          <th> </th><th>38</th><td class="r"><ins>&nbsp; &nbsp; SEAT_FULL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 0x02,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// seat occupied by player/creature</ins> </td>
                  </tr><tr>
                          <th> </th><th>39</th><td class="r"><ins>&nbsp; &nbsp; // special cases</ins> </td>
                  </tr><tr>
                          <th> </th><th>40</th><td class="r"><ins>&nbsp; &nbsp; SEAT_VEHICLE_FREE&nbsp; &nbsp;= 0x04,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// seat occupied by vehicle, but that vehicle is free</ins> </td>
                  </tr><tr>
                          <th> </th><th>41</th><td class="r"><ins>&nbsp; &nbsp; SEAT_VEHICLE_FULL&nbsp; &nbsp;= 0x08&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // seat occupied by vehicle and that vehicle is full too</ins> </td>
                  </tr><tr>
                          <th> </th><th>42</th><td class="r"><ins>};</ins> </td>
                  </tr><tr>
                          <th> </th><th>43</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>44</th><td class="r"><ins>enum PowerType</ins> </td>
                  </tr><tr>
                          <th> </th><th>45</th><td class="r"><ins>{</ins> </td>
                  </tr><tr>
                          <th> </th><th>46</th><td class="r"><ins>&nbsp; &nbsp; POWER_TYPE_PYRITE = 41,</ins> </td>
                  </tr><tr>
                          <th> </th><th>47</th><td class="r"><ins>&nbsp; &nbsp; POWER_TYPE_STEAM&nbsp; = 61</ins> </td>
                  </tr><tr>
                          <th> </th><th>48</th><td class="r"><ins>};</ins> </td>
                  </tr><tr>
                          <th> </th><th>49</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>50</th><td class="r"><ins>#define MAX_SEAT 8</ins> </td>
                  </tr><tr>
                          <th> </th><th>51</th><td class="r"><ins></ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>52</th><td class="r"><ins>typedef std::map&lt;int8, VehicleSeat&gt; SeatMap;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>25</th><th>53</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>26</th><th>54</th><td class="l"><span>class Vehicle : public Creature</span> </td>
                  </tr><tr>
                          <th>27</th><th>55</th><td class="l"><span>{</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L32">…</a></th>
                  <th><a href="#L60">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>32</th><th>60</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void AddToWorld();</span> </td>
                  </tr><tr>
                          <th>33</th><th>61</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void RemoveFromWorld();</span> </td>
                  </tr><tr>
                          <th>34</th><th>62</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>35</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool Create (uint32 guidlow, Map *map, uint32 Entry, uint32 vehicleId, uint32 team);</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>63</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void Die();</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>64</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool Create (uint32 guidlow, Map *map, uint32 phaseMask, uint32 Entry, uint32 vehicleId, uint32 team, const CreatureData *data = NULL);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>36</th><th>65</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>37</th><th>66</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void setDeathState(DeathState s);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// overwrite virtual Creature::setDeathState and Unit::setDeathState</span> </td>
                  </tr><tr>
                          <th>38</th><th>67</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void Update(uint32 diff);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// overwrite virtual Creature::Update and Unit::Update</span> </td>
                  </tr><tr>
                          <th>39</th><th>68</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>69</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void RegeneratePower(Powers power);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>70</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>40</th><th>71</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetVehicleId() { return m_vehicleId; }</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>41</th><th> </th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SetVehicleId(uint32 vehicleid) { m_vehicleId = vehicleid; }</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>72</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool SetVehicleId(uint32 vehicleid);</span> </td>
                      </tr><tr>
                        <th> </th><th>73</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>74</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void InitSeats();</span> </td>
                      </tr><tr>
                        <th> </th><th>75</th><td class="r"><span></span> </td>
                      </tr><tr>
                        <th> </th><th>76</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void ChangeSeatFlag(uint8 seat, uint8 flag);</span> </td>
                      </tr><tr>
                        <th> </th><th>77</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle* FindFreeSeat(int8 *seatid, bool force = true);</span> </td>
                      </tr><tr>
                        <th> </th><th>78</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle* GetNextEmptySeat(int8 *seatId, bool next = true, bool force = true);</span> </td>
                      </tr><tr>
                        <th> </th><th>79</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; Vehicle* GetFirstEmptySeat(int8 *seatId, bool force = true);</span> </td>
                      </tr><tr>
                        <th> </th><th>80</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int8 GetEmptySeatsCount(bool force = true);</span> </td>
                      </tr><tr>
                        <th> </th><th>81</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void EmptySeatsCountChanged();</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>82</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int8 GetTotalSeatsCount() { return m_Seats.size(); }</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>42</th><th>83</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>43</th><th>84</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void Dismiss();</span> </td>
                  </tr><tr>
                          <th>44</th><th>85</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>86</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void RellocatePassengers(Map *map);</ins> </td>
                  </tr><tr>
                          <th> </th><th>87</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void AddPassenger(Unit *unit, int8 seatId, bool force = true);</ins> </td>
                  </tr><tr>
                          <th> </th><th>88</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void RemovePassenger(Unit *unit);</ins> </td>
                  </tr><tr>
                          <th> </th><th>89</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void RemoveAllPassengers();</ins> </td>
                  </tr><tr>
                          <th> </th><th>90</th><td class="r"><ins></ins> </td>
                  </tr><tr>
                          <th> </th><th>91</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; bool HasSpell(uint32 spell) const;</ins> </td>
                  </tr><tr>
                          <th> </th><th>92</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void SetSpawnDuration(int32 duration)</ins> </td>
                  </tr><tr>
                          <th> </th><th>93</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; {</ins> </td>
                  </tr><tr>
                          <th> </th><th>94</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; duration &lt; 1 ? despawn = false : despawn = true;</ins> </td>
                  </tr><tr>
                          <th> </th><th>95</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m_spawnduration = duration;</ins> </td>
                  </tr><tr>
                          <th> </th><th>96</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>97</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; VehicleDataStructure const* GetVehicleData() { return m_VehicleData; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>98</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetVehicleFlags() { return m_VehicleData ? m_VehicleData-&gt;v_flags : NULL; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>99</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; uint32 GetCreationTime() { return m_creation_time; }</ins> </td>
                  </tr><tr>
                          <th> </th><th>100</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void BuildVehicleActionBar(Player *plr) const;</ins> </td>
                  </tr><tr>
                          <th> </th><th>101</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void InstallAllAccessories();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>102</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; Unit *GetPassenger(int8 seatId) const;</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>45</th><th>103</th><td class="l"><span>&nbsp; &nbsp; protected:</span> </td>
                  </tr><tr>
                          <th>46</th><th>104</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_vehicleId;</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>47</th><th> </th><td class="l"><span></span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>105</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; VehicleEntry const *m_vehicleInfo;</span> </td>
                      </tr><tr>
                        <th> </th><th>106</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; VehicleDataStructure const *m_VehicleData;</span> </td>
                      </tr><tr>
                        <th> </th><th>107</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; uint32 m_creation_time;</span> </td>
                      </tr><tr>
                        <th> </th><th>108</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; SeatMap m_Seats;</span> </td>
                      </tr><tr>
                        <th> </th><th>109</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; bool despawn;</span> </td>
                      </tr><tr>
                        <th> </th><th>110</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; int32 m_spawnduration;</span> </td>
                      </tr><tr class="last">
                        <th> </th><th>111</th><td class="r"><span>&nbsp; &nbsp; &nbsp; &nbsp; void InstallAccessory(uint32 entry, int8 seatId, bool isVehicle = false, bool minion = true);</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>48</th><th>112</th><td class="l"><span>&nbsp; &nbsp; private:</span> </td>
                  </tr><tr>
                          <th>49</th><th>113</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void SaveToDB(uint32, uint8)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // overwrited of Creature::SaveToDB&nbsp; &nbsp; &nbsp;- don't must be called</span> </td>
                  </tr><tr>
                          <th>50</th><th>114</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; {</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/World.cpp</a>
        </h2>
        <pre>diff --git a/src/game/World.cpp b/src/game/World.cpp
index ada384d..6ed5d22 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/World.cpp">
                      a
                  </th>
                  <th title="File b/src/game/World.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>1196</th><th>1196</th><td class="l"><span>&nbsp; &nbsp; sLog.outString( "Loading Scripts text locales..." );&nbsp; &nbsp; // must be after Load*Scripts calls</span> </td>
                  </tr><tr>
                          <th>1197</th><th>1197</th><td class="l"><span>&nbsp; &nbsp; sObjectMgr.LoadDbScriptStrings();</span> </td>
                  </tr><tr>
                          <th>1198</th><th>1198</th><td class="l"><span></span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>1199</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString( "Loading VehicleData..." );</ins> </td>
                  </tr><tr>
                          <th> </th><th>1200</th><td class="r"><ins>&nbsp; &nbsp; sObjectMgr.LoadVehicleData();</ins> </td>
                  </tr><tr>
                          <th> </th><th>1201</th><td class="r"><ins>&nbsp; &nbsp; sLog.outString( "Loading VehicleSeatData..." );</ins> </td>
                  </tr><tr>
                          <th> </th><th>1202</th><td class="r"><ins>&nbsp; &nbsp; sObjectMgr.LoadVehicleSeatData();</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>1203</th><td class="r"><ins></ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>1199</th><th>1204</th><td class="l"><span>&nbsp; &nbsp; sLog.outString( "Loading CreatureEventAI Texts...");</span> </td>
                  </tr><tr>
                          <th>1200</th><th>1205</th><td class="l"><span>&nbsp; &nbsp; sEventAIMgr.LoadCreatureEventAI_Texts(false);&nbsp; &nbsp; &nbsp; &nbsp;// false, will checked in LoadCreatureEventAI_Scripts</span> </td>
                  </tr><tr>
                          <th>1201</th><th>1206</th><td class="l"><span></span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/WorldSession.h</a>
        </h2>
        <pre>diff --git a/src/game/WorldSession.h b/src/game/WorldSession.h
index 776b104..6b8d129 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/WorldSession.h">
                      a
                  </th>
                  <th title="File b/src/game/WorldSession.h">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>388</th><th>388</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void HandleSetActiveMoverOpcode(WorldPacket &amp;recv_data);</span> </td>
                  </tr><tr>
                          <th>389</th><th>389</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void HandleMoveNotActiveMover(WorldPacket &amp;recv_data);</span> </td>
                  </tr><tr>
                          <th>390</th><th>390</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void HandleDismissControlledVehicle(WorldPacket &amp;recv_data);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="first">
                          <th> </th><th>391</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void HandleRequestVehicleExit(WorldPacket &amp;recv_data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>392</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void HandleRequestVehiclePrevSeat(WorldPacket &amp;recv_data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>393</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void HandleRequestVehicleNextSeat(WorldPacket &amp;recv_data);</ins> </td>
                  </tr><tr>
                          <th> </th><th>394</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void HandleRequestVehicleSwitchSeat(WorldPacket &amp;recv_data);</ins> </td>
                  </tr><tr class="last">
                          <th> </th><th>395</th><td class="r"><ins>&nbsp; &nbsp; &nbsp; &nbsp; void HandleChangeSeatsOnControlledVehicle(WorldPacket &amp;recv_data);</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>391</th><th>396</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void HandleMoveTimeSkippedOpcode(WorldPacket &amp;recv_data);</span> </td>
                  </tr><tr>
                          <th>392</th><th>397</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>393</th><th>398</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; void HandleRequestRaidInfoOpcode( WorldPacket &amp; recv_data );</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/game/debugcmds.cpp</a>
        </h2>
        <pre>diff --git a/src/game/debugcmds.cpp b/src/game/debugcmds.cpp
index ae04a62..2d9c83a 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/game/debugcmds.cpp">
                      a
                  </th>
                  <th title="File b/src/game/debugcmds.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>627</th><th>627</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>628</th><th>628</th><td class="l"><span>&nbsp; &nbsp; Vehicle *v = new Vehicle;</span> </td>
                  </tr><tr>
                          <th>629</th><th>629</th><td class="l"><span>&nbsp; &nbsp; Map *map = m_session-&gt;GetPlayer()-&gt;GetMap();</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>630</th><th> </th><td class="l"><span>&nbsp; &nbsp; if (!v-&gt;Create(map-&gt;GenerateLocalLowGuid(HIGHGUID_VEHICLE), map, entry, id, m_session-&gt;GetPlayer()-&gt;GetTeam()))</span> </td>
                      </tr>
                      <tr>
                        <th> </th><th>630</th><td class="r"><span></span> </td>
                      </tr><tr class="last">
                        <th> </th><th>631</th><td class="r"><span>&nbsp; &nbsp; if (!v-&gt;Create(sObjectMgr.GenerateLowGuid(HIGHGUID_VEHICLE), map, m_session-&gt;GetPlayer()-&gt;GetPhaseMaskForSpawn(), entry, id, m_session-&gt;GetPlayer()-&gt;GetTeam()))</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>631</th><th>632</th><td class="l"><span>&nbsp; &nbsp; {</span> </td>
                  </tr><tr>
                          <th>632</th><th>633</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; delete v;</span> </td>
                  </tr><tr>
                          <th>633</th><th>634</th><td class="l"><span>&nbsp; &nbsp; &nbsp; &nbsp; return false;</span> </td>
                  </tr>
            </tbody>
              <tbody class="skipped">
                <tr>
                  <th><a href="#L647">…</a></th>
                  <th><a href="#L648">…</a></th>
                  <td> </td>
                </tr>
              </tbody>
            <tbody class="unmod">
                  <tr>
                          <th>647</th><th>648</th><td class="l"><span>&nbsp; &nbsp; }</span> </td>
                  </tr><tr>
                          <th>648</th><th>649</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>649</th><th>650</th><td class="l"><span>&nbsp; &nbsp; map-&gt;Add((Creature*)v);</span> </td>
                  </tr>
            </tbody><tbody class="add">
                  <tr class="last first">
                          <th> </th><th>651</th><td class="r"><ins>&nbsp; &nbsp; v-&gt;AIM_Initialize();</ins> </td>
                  </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>650</th><th>652</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>651</th><th>653</th><td class="l"><span>&nbsp; &nbsp; return true;</span> </td>
                  </tr><tr>
                          <th>652</th><th>654</th><td class="l"><span>}</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
      <li class="entry">
        <h2>
          <a>src/shared/Database/SQLStorage.cpp</a>
        </h2>
        <pre>diff --git a/src/shared/Database/SQLStorage.cpp b/src/shared/Database/SQLStorage.cpp
index a7e9785..3c1ef05 100644</pre>
        <table class="inline" summary="Differences" cellspacing="0">
              <colgroup><col class="lineno" /><col class="lineno" /><col class="content" /></colgroup>
              <thead>
                <tr>
                  <th title="File a/src/shared/Database/SQLStorage.cpp">
                      a
                  </th>
                  <th title="File b/src/shared/Database/SQLStorage.cpp">
                      b
                  </th>
                  <th> </th>
                </tr>
              </thead>
            <tbody class="unmod">
                  <tr>
                          <th>27</th><th>27</th><td class="l"><span></span> </td>
                  </tr><tr>
                          <th>28</th><th>28</th><td class="l"><span>const char CreatureInfosrcfmt[]="iiiiiiiiiisssiiiiiiiiiiiffiffiifiiiiiiiiiiffiiiiiiiiiiiiiiiiiiisiiffliiiiiiiliiis";</span> </td>
                  </tr><tr>
                          <th>29</th><th>29</th><td class="l"><span>const char CreatureInfodstfmt[]="iiiiiiiiiisssiiiiiiiiiiiffiffiifiiiiiiiiiiffiiiiiiiiiiiiiiiiiiisiiffliiiiiiiliiii";</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>30</th><th> </th><td class="l"><span>const char CreatureDataAddonInfofmt[]="iiiiii<del></del>s";</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>30</th><td class="r"><span>const char CreatureDataAddonInfofmt[]="iiiiii<ins>is</ins>s";</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>31</th><th>31</th><td class="l"><span>const char CreatureModelfmt[]="iffbi";</span> </td>
                  </tr>
            </tbody><tbody class="mod">
                      <tr class="first">
                        <th>32</th><th> </th><td class="l"><span>const char CreatureInfoAddonInfofmt[]="iiiiii<del></del>s";</span> </td>
                      </tr>
                      <tr class="last">
                        <th> </th><th>32</th><td class="r"><span>const char CreatureInfoAddonInfofmt[]="iiiiii<ins>is</ins>s";</span> </td>
                      </tr>
            </tbody><tbody class="unmod">
                  <tr>
                          <th>33</th><th>33</th><td class="l"><span>const char EquipmentInfofmt[]="iiii";</span> </td>
                  </tr><tr>
                          <th>34</th><th>34</th><td class="l"><span>const char GameObjectInfosrcfmt[]="iiissssiifiiiiiiiiiiiiiiiiiiiiiiiiiiiiiis";</span> </td>
                  </tr><tr>
                          <th>35</th><th>35</th><td class="l"><span>const char GameObjectInfodstfmt[]="iiissssiifiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii";</span> </td>
                  </tr>
            </tbody>
        </table>
      </li>
  </ul>
</div>
      </div>
      <div id="help">
        <strong>Note:</strong> See <a href="/wiki/TracBrowser">TracBrowser</a>
        for help on using the browser.
      </div>
      <div id="anydiff">
        <form action="/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/core_patches/trunk/need_test/vehicle_mangos_9558.patch" />
            <input type="hidden" name="old_path" value="/core_patches/trunk/need_test/vehicle_mangos_9558.patch" />
            <input type="hidden" name="new_rev" value="654" />
            <input type="hidden" name="old_rev" value="654" />
            <input type="submit" value="View changes..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/browser/core_patches/trunk/need_test/vehicle_mangos_9558.patch?rev=654&amp;format=txt">Plain Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/export/654/core_patches/trunk/need_test/vehicle_mangos_9558.patch">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/about"><strong>Trac 0.11.5</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>